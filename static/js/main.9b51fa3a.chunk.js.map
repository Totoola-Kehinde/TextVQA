{"version":3,"sources":["styles.js","components/Header.js","components/BoundingBox.js","components/Banner.js","components/Explore.js","components/People.js","components/Home.js","components/Challenge.js","components/Download.js","components/Paper.js","App.js","serviceWorker.js","index.js"],"names":["theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","typography","useNextVariants","styles","root","width","flexGrow","grow","buttonLink","color","textDecoration","buttonsSide","textAlign","logo","Object","defineProperty","height","verticalAlign","breakpoints","down","leftIcon","marginRight","spacing","unit","sectionDesktop","display","up","sectionMobile","Header","state","mobileMoreAnchorEl","handleMobileMenuOpen","event","_this","setState","currentTarget","handleMobileMenuClose","classes","this","props","isMobileMenuOpen","Boolean","renderMobileMenu","react_default","a","createElement","Menu_default","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","open","onClose","handleMenuClose","MenuItem_default","onClick","Link_default","underline","className","join","href","Button_default","disableRipple","disableFocusRipple","CloudDownload_default","Equalizer_default","Description_default","Explore_default","AppBar_default","position","Toolbar_default","align","srcSet","alt","IconButton_default","aria-haspopup","MoreVert_default","React","Component","withStyles","BoundingBox","colors","word","wordInt","charCodeAt","length","canvas","style","offsetWidth","_this2","refs","fitToContainer","ctx","getContext","img","Image","src","imageUrl","onload","newData","drawImageScaled","globalAlpha","showBoxes","centerShiftX","centerShiftY","newWidth","newHeight","idx","font","boxes","box","coords","fillStyle","getColor","strokeStyle","rotate","rotation","Math","pi","strokeRect","apply","toConsumableArray","fillText","hRatio","newCHeight","vRatio","ratio","min","clearRect","drawImage","fillRect","ref","Banner","seed","round","random","render","vars","nChunks","originalChunks","originalLen","getWidthForColumn","mapping","xs","sm","md","lg","currentWidth","keys","forEach","key","isWidthUp","chunkArray","arr","isNewSearch","i","push","gap","ceil","index","chunks","concat","slice","renderCardComponents","results","cards","streamResults","map","result","renderCardComponent","colWidth","numChunks","floor","containerChunks","chunk","float","getMaxAnswer","answers","counter","maxWord","maxCount","currentAnswer","cardIdx","ocr_info","ocrInfo","bounding_box","top_left_x","top_left_y","maxAnswer","gridItem","Card_default","card","components_BoundingBox","showOCRBoxes","flickr_300k_url","CardContent_default","cardContent","showQuestions","Typography_default","variant","question","showAnswers","Grid_default","container","direction","justify","alignItems","index_es","componentId","dataField","title","from","size","pagination","showResultStats","loader","react","reactValues","renderAllData","withWidth","padding","paddingBottom","Explore","and","updateQuery","query","body","split","queryParams","JSON","parse","function_score","random_score","stringify","replace","toLowerCase","handleCheckboxChange","name","target","checked","handleMenuButtonClick","app","config","url","transformRequest","item","autosuggest","categoryField","placeholder","debounce","showCount","showSearch","optionsMenuButton","aria-owns","undefined","FormControlLabel_default","control","Checkbox_default","onChange","value","label","components_Banner","avatar","margin","peopleJSX","people","person","rel","website","Avatar_default","img_url","core_index_es","organization","Home","mainContainer","backgroundColor","zIndex","overflow","top","left","Paper_default","paper","elevation","bannerLogo","marginTop","alignContent","sectionHeader","gutterBottom","ulList","news","obj","greenColor","date","hrefGreenColor","dangerouslySetInnerHTML","__html","components_People","Divider_default","objectSpread","mixins","gutters","paddingTop","backgroundImage","opacity","divider","spanInlineBlock","& a","Completionist","renderer","_ref","days","hours","minutes","seconds","completed","Challenge_Completionist","headings","ulItems","paddingLeft","preParent","border","borderRadius","& pre","whiteSpace","& span","& code","fontSize","teaserImage","spanTypography","deadline","moment","tz","toDate","versionNumber","dist_index_es","component","Table_default","TableHead_default","TableRow_default","TableCell_default","TableBody_default","question_id","answer","challengePeople","licenseURL","setItems","dataDescription","Paper","App","core_styles","BrowserRouter","basename","components_Header","Route","path","exact","Challenge","Download","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9b51fa3a.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    palette: {\n      primary: {\n        light: '#9ccc65',\n        main: '#7cb342',\n        dark: '#33691e',\n        contrastText: '#fff',\n      },\n      secondary: {\n        light: '#ff7961',\n        main: '#f44336',\n        dark: '#ba000d',\n        contrastText: '#000',\n      },\n    },\n    typography: {\n      useNextVariants: true,\n    },\n  });\nexport default theme;","import React from 'react';\nimport PropTypes from 'prop-types'\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Explore from '@material-ui/icons/Explore';\nimport CloudDownload from '@material-ui/icons/CloudDownload';\nimport Equalizer from '@material-ui/icons/Equalizer';\nimport Description from '@material-ui/icons/Description';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { withStyles } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\nimport theme from '../styles';\n\nconst styles = {\n    root: {\n      width: '100%',\n      flexGrow: 1\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    buttonLink: {\n        color: theme['palette']['primary']['contrastText'],\n        textDecoration: 'none'\n    },\n    buttonsSide: {\n        textAlign: 'right'\n    },\n    logo: {\n        height: '50px',\n        verticalAlign: 'middle',\n        [theme.breakpoints.down('sm')]: {\n            height: '35px'\n        }\n    },\n    leftIcon: {\n        marginRight: theme.spacing.unit\n    },\n    sectionDesktop: {\n        display: 'none',\n        [theme.breakpoints.up('md')]: {\n            display: 'flex',\n        },\n    },\n    sectionMobile: {\n        display: 'flex',\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n  };\n\nclass Header extends React.Component {\n    state = {\n        mobileMoreAnchorEl: null,\n    };\n\n    handleMobileMenuOpen = event => {\n        this.setState({ mobileMoreAnchorEl: event.currentTarget });\n    };\n\n    handleMobileMenuClose = () => {\n        this.setState({ mobileMoreAnchorEl: null });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { mobileMoreAnchorEl } = this.state;\n        const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n        const renderMobileMenu = (\n            <Menu\n                anchorEl={mobileMoreAnchorEl}\n                anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n                transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n                open={isMobileMenuOpen}\n                onClose={this.handleMenuClose}\n            >\n                <MenuItem onClick={this.handleMobileMenuClose}>\n                    <Link\n                        underline=\"none\"\n                        className={[classes.buttonLink, classes.buttonsSide].join(' ')}\n                        href=\"download\"\n                    >\n                            <Button disableRipple={true} disableFocusRipple={true} color=\"black\">\n                                <CloudDownload className={classes.leftIcon}/>\n                                Download\n                            </Button>\n                    </Link>\n                </MenuItem>\n                <MenuItem onClick={this.handleMobileMenuClose}>\n                    <Link\n                        underline=\"none\"\n                        className={[classes.buttonLink, classes.buttonsSide].join(' ')}\n                        href=\"challenge\"\n                    >\n                            <Button disableRipple={true} disableFocusRipple={true} color=\"black\">\n                                <Equalizer className={classes.leftIcon}/>\n                                Challenge\n                            </Button>\n                    </Link>\n                </MenuItem>\n                <MenuItem onClick={this.handleMobileMenuClose}>\n                    <Link\n                        underline=\"none\"\n                        className={[classes.buttonLink, classes.buttonsSide].join(' ')}\n                        href=\"paper\"\n                    >\n                            <Button disableRipple={true} disableFocusRipple={true} color=\"black\">\n                                <Description className={classes.leftIcon}/>\n                                Paper\n                            </Button>\n                    </Link>\n                </MenuItem>\n                <MenuItem onClick={this.handleMobileMenuClose}>\n                    <Link\n                        underline=\"none\"\n                        className={[classes.buttonLink, classes.buttonsSide].join(' ')}\n                        href=\"explore\"\n                    >\n                            <Button disableRipple={true} disableFocusRipple={true} color=\"black\">\n                                <Explore className={classes.leftIcon}/>\n                                Explore\n                            </Button>\n                    </Link>\n                </MenuItem>\n            </Menu>\n        );\n\n        return (\n            <div className={classes.root}>\n                <AppBar position=\"static\" color=\"primary\">\n                    <Toolbar>\n                        <Link\n                            underline=\"none\"\n                            align=\"left\"\n                            className={[classes.buttonLink, classes.grow].join(' ')}\n                            href={process.env.PUBLIC_URL + '/'}\n                        >\n                            <img\n                                className={classes.logo}\n                                srcSet=\"assets/images/textvqa_logo_and_text_white.svg\"\n                                alt=\"TextVQA\"\n                            />\n                        </Link>\n                        <div className={classes.sectionDesktop}>\n                            <Link\n                                underline=\"none\"\n                                className={[classes.buttonLink, classes.buttonsSide].join(' ')}\n                                href=\"challenge\"\n                            >\n                                    <Button disableRipple={true} disableFocusRipple={true} color=\"inherit\">\n                                        <Equalizer className={classes.leftIcon}/>\n                                        Challenge\n                                    </Button>\n                            </Link>\n                            <Link\n                                underline=\"none\"\n                                className={[classes.buttonLink, classes.buttonsSide].join(' ')}\n                                href=\"paper\"\n                            >\n                                    <Button disableRipple={true} disableFocusRipple={true} color=\"inherit\">\n                                        <Description className={classes.leftIcon}/>\n                                        Paper\n                                    </Button>\n                            </Link>\n                            <Link\n                                underline=\"none\"\n                                className={[classes.buttonLink, classes.buttonsSide].join(' ')}\n                                href=\"download\"\n                            >\n                                    <Button disableRipple={true} disableFocusRipple={true} color=\"inherit\">\n                                        <CloudDownload className={classes.leftIcon}/>\n                                        Download\n                                    </Button>\n                            </Link>\n                            <Link\n                                underline=\"none\"\n                                className={[classes.buttonLink, classes.buttonsSide].join(' ')}\n                                href=\"explore\"\n                            >\n                                    <Button disableRipple={true} disableFocusRipple={true} color=\"inherit\">\n                                        <Explore className={classes.leftIcon}/>\n                                        Explore\n                                    </Button>\n                            </Link>\n                        </div>\n                        <div className={classes.sectionMobile}>\n                            <IconButton aria-haspopup=\"true\" onClick={this.handleMobileMenuOpen} color=\"inherit\">\n                                <MoreIcon />\n                            </IconButton>\n                        </div>\n                        {renderMobileMenu}\n                    </Toolbar>\n                </AppBar>\n            </div>\n        );\n    }\n}\n\nHeader.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Header);","import React, { Component } from 'react';\n\nclass BoundingBox extends Component {\n    colors = ['#e6194B', '#3cb44b', '#ffe119', '#4363d8',\n              '#42d4f4', '#f032e6',\n              '#469990', '#9A6324', '#800000', '#aaffc3',\n              '#000075', '#000000', '#911eb4'];\n\n    getColor(word) {\n        const char = word.charCodeAt(0);\n        const wordInt = char % this.colors.length;\n        return this.colors[wordInt];\n    }\n\n    fitToContainer(canvas) {\n        // Make it visually fill the positioned parent\n        canvas.style.width ='100%';\n        // ...then set the internal size to match\n        canvas.width  = canvas.offsetWidth;\n    }\n\n    componentDidMount() {\n        const canvas = this.refs.canvas;\n        this.fitToContainer(canvas);\n\n        const ctx = canvas.getContext(\"2d\");\n        const img = new Image();\n        img.src = this.props.imageUrl;\n\n        img.onload = () => {\n            const newData = this.drawImageScaled(img, ctx);\n            ctx.globalAlpha = 1.0;\n\n            if (!this.props.showBoxes) {\n                return;\n            }\n            const { centerShiftX, centerShiftY, newWidth, newHeight } = newData;\n            ctx.font = \"12px Lato\";\n\n            for(const idx in this.props.boxes) {\n                const box = this.props.boxes[idx];\n                box.coords[0] *= newWidth;\n                box.coords[1] *= newHeight;\n                box.coords[2] *= newWidth;\n                box.coords[3] *= newHeight;\n                box.coords[0] += centerShiftX;\n                box.coords[1] += centerShiftY;\n                ctx.fillStyle = this.getColor(box.word);\n                ctx.strokeStyle = ctx.fillStyle;\n\n                ctx.rotate(box.rotation * Math.pi / 180);\n                ctx.strokeRect(...box.coords);\n\n                ctx.fillText(box.word, box.coords[0], box.coords[1]);\n            }\n        }\n    }\n\n    drawImageScaled(img, ctx) {\n        const canvas = ctx.canvas;\n        const hRatio = canvas.width  / img.width;\n\n        const newCHeight = hRatio * img.height;\n        canvas.style.height = newCHeight;\n        canvas.height = newCHeight;\n\n        const vRatio =  canvas.height / img.height;\n        const ratio  = Math.min(hRatio, vRatio);\n        const centerShiftX = (canvas.width - img.width*ratio) / 2;\n        const centerShiftY = (canvas.height - img.height*ratio) / 2;\n\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.drawImage(img, 0, 0, img.width, img.height,\n                      centerShiftX, centerShiftY, img.width*ratio,\n                      img.height*ratio);\n\n        if (this.props.showBoxes) {\n            ctx.fillStyle = 'rgba(0, 0, 0, 0.2)';\n            ctx.fillRect(centerShiftX, centerShiftY, img.width*ratio,\n                        img.height*ratio);\n        }\n\n        const newWidth = img.width * ratio;\n        const newHeight = img.height * ratio;\n\n        return { centerShiftX, centerShiftY, newWidth, newHeight};\n    }\n\n    render() {\n        return(\n            <div>\n              <canvas ref=\"canvas\" />\n            </div>\n        )\n    }\n}\n\nexport default BoundingBox;","import React, { Component } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core';\nimport withWidth, { isWidthUp } from '@material-ui/core/withWidth';\n\nimport { ReactiveList } from '@appbaseio/reactivesearch';\nimport Grid from '@material-ui/core/Grid'\n\nimport BoundingBox from './BoundingBox';\n\nconst styles = theme => ({\n    gridItem: {\n        padding: theme.spacing.unit * 0.5,\n        position: 'relative',\n        width: '100%',\n        display: 'inline-block'\n    },\n    cardContent: {\n        paddingBottom: '4px !important'\n    },\n    card: {\n        padding: theme.spacing.unit * 2,\n        textAlign: 'center'\n    }\n});\n\nclass Banner extends Component {\n    seed = Math.round(Math.random() * 10000);\n    state = {render: 0};\n    vars = {\n        nChunks: null,\n        originalChunks: [],\n        originalLen: 0\n    };\n\n    getWidthForColumn = () => {\n        // NOTE: Keep this is in this order.\n        // Smallest key should come first\n        const mapping = {\n            'xs': '100',\n            'sm': '50',\n            'md': '33',\n            'lg': '20'\n        };\n\n        let currentWidth = '100';\n        Object.keys(mapping).forEach((key) => {\n            if (isWidthUp(key, this.props.width)) {\n                currentWidth = mapping[key];\n            }\n        });\n\n        return currentWidth;\n    }\n\n    chunkArray = (arr, nChunks) => {\n        let isNewSearch = false;\n\n        if (this.vars.originalChunks.length > 0 &&\n            this.vars.originalChunks[0].length > 0 && this.vars.originalChunks[0][0] !== arr[0]) {\n                isNewSearch = true;\n            }\n        if (this.vars.nChunks !== nChunks || isNewSearch) {\n            this.vars.nChunks = nChunks;\n            this.vars.originalChunks = [];\n            this.vars.originalLen = 0;\n            this.seed = Math.round(Math.random() * 10000);\n\n            for(let i = 0; i < nChunks; i++) {\n                this.vars.originalChunks.push([]);\n            }\n        }\n\n        const gap = Math.ceil((arr.length - this.vars.originalLen) / nChunks);\n        let index = 0;\n        const chunks = this.vars.originalChunks;\n\n        for(let i = this.vars.originalLen; i < arr.length; i += gap) {\n            chunks[index] = chunks[index].concat(arr.slice(i, i + gap));\n            index++;\n        }\n\n        this.vars.originalChunks = chunks;\n        this.vars.originalLen = arr.length;\n        this.vars.nChunks = nChunks;\n\n        return chunks;\n    }\n\n    renderCardComponents = (results) => {\n        if (results.length === 0) {\n            return \"\";\n        }\n\n        const cards = [...results.results, ...results.streamResults].map((result, idx) => {\n            return this.renderCardComponent(result, idx);\n        });\n\n        const colWidth = this.getWidthForColumn();\n        const numChunks = Math.floor(100 / colWidth);\n        const cardChunks = this.chunkArray(cards, numChunks);\n\n        const containerChunks = cardChunks.map((chunk, idx) => {\n            return (\n                <div\n                    key={idx + this.seed}\n                    style={{\n                        width: colWidth + '%',\n                        float: 'left'\n                    }}\n                >\n                    {chunk}\n                </div>\n            )\n\n        });\n\n        return (\n            <div>\n                {containerChunks}\n            </div>\n        );\n    }\n\n    getMaxAnswer = (answers) => {\n        const counter = {}\n        if (!answers) {\n            return '';\n        }\n        let maxWord = answers[0];\n        let maxCount = 1;\n\n        for(const idx in answers) {\n            const currentAnswer = answers[idx];\n            if (counter[currentAnswer]) {\n                counter[currentAnswer] += 1;\n            } else {\n                counter[currentAnswer] = 1;\n            }\n\n            if (counter[currentAnswer] > maxCount) {\n                maxCount = counter[currentAnswer];\n                maxWord = currentAnswer;\n            }\n        }\n\n        return maxWord;\n    }\n\n    renderCardComponent = (result, cardIdx) => {\n        const boxes = []\n\n        for(const idx in result.ocr_info) {\n            const ocrInfo = result.ocr_info[idx];\n            const x1 = ocrInfo.bounding_box.top_left_x;\n            const y1 = ocrInfo.bounding_box.top_left_y;\n            const width = ocrInfo.bounding_box.width;\n            const height = ocrInfo.bounding_box.height;\n            const box =  {\n                coords: [x1, y1, width, height],\n                rotation: ocrInfo.bounding_box.rotation,\n                word: ocrInfo.word\n            };\n            boxes.push(box)\n        }\n\n        const maxAnswer = this.getMaxAnswer(result.answers);\n        return (\n            <div\n                key={cardIdx + this.seed}\n                className={this.props.classes.gridItem}\n            >\n                <Card key={cardIdx} className={this.props.classes.card}>\n                    <BoundingBox\n                        showBoxes={this.props.showOCRBoxes}\n                        imageUrl={result.flickr_300k_url}\n                        boxes={boxes}\n                    />\n                    <CardContent className={this.props.classes.cardContent}>\n                        {\n                            this.props.showQuestions ?\n                            <Typography variant=\"subtitle1\">\n                                {result.question}\n                            </Typography> : ''\n                        }\n                        {\n                            this.props.showAnswers && maxAnswer.length > 0 ?\n                            <Typography variant=\"caption\">\n                                {maxAnswer}\n                            </Typography> : ''\n                        }\n                    </CardContent>\n                </Card>\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                <ReactiveList\n                    componentId=\"result\"\n                    dataField=\"question\"\n                    title=\"Results\"\n                    from={0}\n                    size={this.props.size || 25}\n                    pagination={this.props.pagination || false}\n                    showResultStats={this.props.showResultStats}\n                    loader={this.props.loader}\n                    react={this.props.reactValues}\n                    renderAllData={this.renderCardComponents}\n                    style={this.props.style || {}}\n                />\n            </Grid>\n        );\n    }\n}\n\nexport default withWidth()(withStyles(styles)(Banner));\n","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Button from '@material-ui/core/Button';\n\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {\n    ReactiveBase, CategorySearch, MultiDropdownList\n} from '@appbaseio/reactivesearch';\nimport Grid from '@material-ui/core/Grid'\n\nimport * as config from '../frontend_config.json';\nimport Banner from './Banner';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1\n    },\n    optionsMenuButton: {\n        width: '100%'\n    }\n});\n\nclass Explore extends Component {\n    seed = Math.round(Math.random() * 10000);\n    state = {\n        showOCRBoxes: true,\n        showQuestions: true,\n        showAnswers: true,\n        anchorEl: null\n    };\n\n    reactValues = {\n        and: [\n            \"searchbox\", \"set_name\", \"image_classes\",\n            \"ocr_tokens\", \"answers\"\n        ]\n    }\n\n    updateQuery = (query) => {\n        let body = query.body;\n        body = body.split('\\n')\n        let queryParams = JSON.parse(body[1]);\n        queryParams[\"query\"] = {\n            \"function_score\": {\n                \"query\": queryParams[\"query\"],\n                \"random_score\": {\n                    \"seed\": this.seed\n                }\n            }\n        };\n\n        body[1] = JSON.stringify(queryParams)\n        body = body.join('\\n');\n        body = body.replace('\"field\":\"set_name\"', '\"field\":\"set_name.keyword\"');\n        body = body.replace('\"field\":\"image_classes\"', '\"field\":\"image_classes.keyword\"');\n        body = body.replace('\"field\":\"question\"', '\"field\":\"question.keyword\"');\n        body = body.replace('\"field\":\"ocr_tokens\"', '\"field\":\"ocr_tokens.keyword\"');\n        body = body.replace('\"field\":\"answers\"', '\"field\":\"answers.keyword\"');\n        query.body = body.toLowerCase();\n        return query;\n    }\n\n    handleCheckboxChange = name => event => {\n        this.setState({ [name]: event.target.checked });\n    };\n\n    handleMenuButtonClick = (event) => {\n        this.setState({ anchorEl: event.currentTarget });\n    }\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    }\n\n    render() {\n      return (\n          <ReactiveBase\n            app={config.index_name}\n            url={config.server_url}\n            transformRequest={this.updateQuery}\n          >\n            <Grid\n                container\n                direction=\"row\"\n                className={this.props.classes.root}\n                justify=\"center\"\n                alignItems=\"center\"\n            >\n                <Grid item xs={12} md={6} lg={4}>\n                    <CategorySearch\n                        componentId=\"searchbox\"\n                        dataField=\"question\"\n                        autosuggest={false}\n                        categoryField=\"question\"\n                        placeholder=\"Search for questions\"\n                        debounce={1000}\n                        style={{\n                            padding: \"5px\"\n                        }}\n                        react={{ and: ['set_name', 'image_classes', 'ocr_tokens', 'answers']}}\n                    />\n                </Grid>\n                <Grid item xs={12} md={2} lg={1}>\n                    <MultiDropdownList\n                        componentId=\"set_name\"\n                        dataField=\"set_name\"\n                        showCount={false}\n                        placeholder=\"Choose set\"\n                        showSearch={false}\n                        react={{ and: ['question', 'image_classes', 'ocr_tokens', 'answers']}}\n                    />\n                </Grid>\n                <Grid item xs={12} md={2} lg={2}>\n                    <MultiDropdownList\n                        componentId=\"image_classes\"\n                        dataField=\"image_classes\"\n                        placeholder=\"Choose classes\"\n                        showSearch={false}\n                        react={{ and: ['set_name', 'question', 'ocr_tokens', 'answers']}}\n                    />\n                </Grid>\n                <Grid item xs={12} md={2} lg={1}>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={this.props.classes.optionsMenuButton}\n                        aria-owns={this.state.anchorEl ? 'simple-menu' : undefined}\n                        aria-haspopup=\"true\"\n                        onClick={this.handleMenuButtonClick}\n                    >\n                        Options\n                    </Button>\n                    <Menu\n                        anchorEl={this.state.anchorEl}\n                        open={Boolean(this.state.anchorEl)}\n                        onClose={this.handleMenuClose}\n                    >\n                        <MenuItem>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={this.state.showOCRBoxes}\n                                        onChange={this.handleCheckboxChange('showOCRBoxes')}\n                                        value=\"showOCRBoxes\"\n                                    />\n                                }\n                                label=\"Show OCR boxes\">\n                            </FormControlLabel>\n                        </MenuItem>\n                        <MenuItem>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={this.state.showQuestions}\n                                        onChange={this.handleCheckboxChange('showQuestions')}\n                                        value=\"showQuestions\"\n                                    />\n                                }\n                                label=\"Show questions\">\n                            </FormControlLabel>\n                        </MenuItem>\n                        <MenuItem>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={this.state.showAnswers}\n                                        onChange={this.handleCheckboxChange('showAnswers')}\n                                        value=\"showAnswers\"\n                                    />\n                                }\n                                label=\"Show answers\">\n                            </FormControlLabel>\n                        </MenuItem>\n                    </Menu>\n                </Grid>\n                <Grid item xs={12} md={6} lg={2}>\n                    <CategorySearch\n                        componentId=\"ocr_tokens\"\n                        dataField=\"ocr_tokens\"\n                        categoryField=\"ocr_tokens\"\n                        debounce={1400}\n                        placeholder=\"Search for OCR tokens\"\n                        style={{\n                            padding: \"5px\"\n                        }}\n                        react={{ and: ['set_name', 'image_classes', 'question', 'answers']}}\n\n                    />\n                </Grid>\n                <Grid item xs={12} md={6} lg={2}>\n                    <CategorySearch\n                        componentId=\"answers\"\n                        dataField=\"answers\"\n                        categoryField=\"answers\"\n                        placeholder=\"Search for Answers\"\n                        debounce={1400}\n                        style={{\n                            padding: \"5px\"\n                        }}\n                        react={{ and: ['set_name', 'image_classes', 'ocr_tokens', 'question']}}\n                    />\n                </Grid>\n                <Banner\n                    showOCRBoxes={this.state.showOCRBoxes}\n                    showAnswers={this.state.showAnswers}\n                    showQuestions={this.state.showQuestions}\n                    reactValues={this.reactValues}\n                    showResultStats={true}\n                    pagination={false}\n                    size={25}\n                    style={{\n                        \"width\": \"90%\",\n                        \"textAlign\": \"center\"\n                    }}\n                />\n            </Grid>\n        </ReactiveBase>\n      );\n    }\n}\n\nexport default withStyles(styles)(Explore);\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\n\nimport { withStyles, Typography } from \"@material-ui/core\";\nimport * as people from '../people_list.json';\nimport Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid';\n\nconst styles = (theme) => ({\n    avatar: {\n        width: 100,\n        height: 100,\n        margin: '0 auto'\n    },\n    gridItem: {\n        padding: theme.spacing.unit * 2\n    }\n});\n\nconst People = (props) => {\n    let selectedPeople = []\n    if (props.people) {\n        selectedPeople = props.people;\n    } else {\n        selectedPeople = people.people;\n    }\n\n    const peopleJSX = selectedPeople.map((person) => {\n        const key = Math.random();\n        return (\n            <Grid item key={key} xs={12} sm={6} md={3} lg={2}>\n                <Link target=\"_blank\" rel=\"noopener\" href={person.website}>\n                    <Avatar className={props.classes.avatar} src={person.img_url}/>\n                </Link>\n                <Typography variant=\"subtitle1\">\n                    {person.name}\n                </Typography>\n                <Typography variant=\"caption\">\n                    {person.organization}\n                </Typography>\n            </Grid>\n        )\n    });\n\n    return (\n        <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"flex-start\"\n            spacing={16}\n        >\n            {peopleJSX}\n        </Grid>\n    )\n};\n\n\nexport default withStyles(styles)(People);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport Link from '@material-ui/core/Link';\nimport Divider from '@material-ui/core/Divider';\n\nimport Banner from './Banner';\nimport People from './People';\nimport * as news from '../news.json';\nimport * as config from '../frontend_config.json';\nimport { ReactiveBase } from '@appbaseio/reactivesearch';\n\n\nconst styles = theme => ({\n    paper: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing.unit * 2,\n        paddingBottom: theme.spacing.unit * 2,\n    },\n    mainContainer: {\n        backgroundImage: 'radial-gradient( ' +\n        theme.palette.primary.light + ' 20% ,' + theme.palette.primary.dark + ' 100%)',\n        opacity: 0.9,\n        height: '50vh'\n    },\n    people: {\n        margin: '0 auto',\n        marginTop: '1.5em'\n    },\n    root: {\n        // flexGrow: 1,\n        // marginTop: '50px'\n    },\n    divider: {\n        color: '#888',\n        width: '100%'\n    },\n    gridItem: {\n        padding: theme.spacing.unit * 1.5\n    },\n    sectionHeader: {\n        marginTop: '0.15em'\n    },\n    ulList: {\n        margin: '0'\n    },\n    container: {\n        padding: theme.spacing.unit * 2,\n    },\n    bannerLogo: {\n        width: '100%'\n    },\n    spanInlineBlock: {\n        display: 'inline'\n    },\n    greenColor: {\n        color: theme.palette.primary.main\n    },\n    hrefGreenColor: {\n        '& a': {\n            color: theme.palette.primary.main,\n            textDecoration: 'none'\n        }\n    }\n});\n\nclass Home extends React.Component {\n    state = {\n        checked: false\n    }\n\n    updateQuery = (query) => {\n        let body = query.body;\n        body = body.split('\\n')\n        let queryParams = JSON.parse(body[1]);\n        queryParams[\"query\"] = {\n            \"function_score\": {\n                \"query\": queryParams[\"query\"],\n                \"random_score\": {\n                    \"seed\": this.seed\n                }\n            }\n        };\n\n        body[1] = JSON.stringify(queryParams)\n        body = body.join('\\n');\n        body = body.replace('\"field\":\"set_name\"', '\"field\":\"set_name.keyword\"');\n        body = body.replace('\"field\":\"image_classes\"', '\"field\":\"image_classes.keyword\"');\n        query.body = body;\n\n        return query;\n    }\n\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.root}>\n                <Grid\n                    container\n                    className={classes.mainContainer}\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    style={{\n                        position: 'relative'\n                    }}\n                >\n                    <div\n                        style={{\n                            height: '50vh',\n                            backgroundColor: 'rgba(0, 0, 0, 0.4)',\n                            width: '100%',\n                            zIndex: -10,\n                            position: \"absolute\"\n                        }}\n                    />\n                    <ReactiveBase\n                        app={config.index_name}\n                        url={config.server_url}\n                        transformRequest={this.updateQuery}\n                        style={{\n                            height: '50vh',\n                            overflow: 'auto',\n                            position: 'relative'\n                        }}\n                    >\n                        <Banner\n                            showOCRBoxes={true}\n                            showAnswers={true}\n                            showResultStats={false}\n                            showQuestions={true}\n                            reactValues={{}}\n                            pagination={true}\n                            loader=\"\"\n                            size={15}\n                            style={{\n                                height: '50vh',\n                                zIndex: -20,\n                                size: 10,\n                                position: 'absolute',\n                                top: 0,\n                                overflow: 'hidden'\n                            }}\n                        />\n                    </ReactiveBase>\n                    <Grid\n                        container\n                        style={{\n                            position: 'absolute',\n                            top: 0,\n                            left: 0,\n                            width: '100%',\n                            height: '100%'\n                        }}\n                        justify=\"center\"\n                        alignItems=\"center\"\n                    >\n                        <Grid\n                            item\n                            xs={10}\n                            sm={9}\n                            md={8}\n                            lg={6}\n                            style={{\n                                position: 'relative'\n                            }}\n                        >\n                            <Paper className={classes.paper} elevation={1}>\n                                <Grid\n                                    container\n                                    justify=\"center\"\n                                    alignItems=\"center\"\n                                    >\n                                    <Grid\n                                        item\n                                        xs={10}\n                                        md={8}\n                                        lg={6}\n                                    >\n                                        <img\n                                            srcSet=\"assets/images/textvqa_logo_and_text_green.svg\"\n                                            alt=\"TextVQA\"\n                                            className={classes.bannerLogo}\n                                        />\n                                    </Grid>\n                                </Grid>\n                                <Typography variant=\"subtitle1\">\n                                A dataset to benchmark visual reasoning based on text in images.\n                                </Typography>\n                                <Grid\n                                    style={{\n                                        marginTop: '10px'\n                                    }}\n                                    container\n                                    direction=\"row\"\n                                    justify=\"center\"\n                                    alignItems=\"center\"\n                                    spacing={16}\n                                >\n                                    <Grid item xs={6} sm={6} md={3}>\n                                        <Link href=\"explore\">\n                                            <Button variant=\"contained\" color=\"primary\">\n                                                Explore\n                                            </Button>\n                                        </Link>\n                                    </Grid>\n                                    <Grid item xs={6} sm={6} md={3}>\n                                        <Link href=\"paper\">\n                                            <Button variant=\"contained\" color=\"primary\">\n                                                Paper\n                                            </Button>\n                                        </Link>\n                                    </Grid>\n                                    <Grid item xs={6} sm={6} md={3}>\n                                        <Link href=\"challenge\">\n                                            <Button variant=\"contained\" color=\"primary\">\n                                                Challenge\n                                            </Button>\n                                        </Link>\n                                    </Grid>\n                                    <Grid item xs={6} sm={6} md={3}>\n                                        <Link href=\"download\">\n                                            <Button variant=\"contained\" color=\"primary\">\n                                                Download\n                                            </Button>\n                                        </Link>\n                                    </Grid>\n                                </Grid>\n                            </Paper>\n                        </Grid>\n\n                    </Grid>\n                </Grid>\n                <Grid\n                    container\n                    justify=\"center\"\n                    alignContent=\"center\"\n                >\n                    <Grid\n                        item\n                        xs={10}\n                        md={8}\n                        lg={6}\n                        className={classes.people}\n                    >\n                        <Grid container justify=\"center\" alignContent=\"center\">\n                            <Grid item xs={12} lg={6}>\n                                <Grid container justify=\"flex-start\" spacing={16}>\n                                    <Grid item xs={12} className={classes.gridItem}>\n                                        <Typography\n                                            className={classes.sectionHeader}\n                                            variant=\"h4\"\n                                            gutterBottom\n                                            align=\"left\"\n                                            >\n                                            Overview\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item xs={12} className={classes.gridItem}>\n                                        <Typography\n                                            className={classes.sectionHeader}\n                                            variant=\"subtitle1\"\n                                            gutterBottom\n                                            align=\"left\"\n                                        >\n                                            TextVQA requires models to read and reason about questions based on text in images.\n                                            Specifically, given an image, model needs to answer a question\n                                            which will require reading and reasoning on text present in it.\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={12} lg={6}>\n                                <Grid container justify=\"flex-start\" spacing={16}>\n                                    <Grid item xs={12} className={classes.gridItem}>\n                                        <Typography\n                                            className={classes.sectionHeader}\n                                            variant=\"h4\"\n                                            gutterBottom\n                                            align=\"left\"\n                                        >\n                                        Statistics\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                                <Grid container justify=\"flex-start\" spacing={16}>\n                                    <Grid item xs={12} className={classes.gridItem}>\n                                        <ul>\n                                            <li>\n                                            <Typography variant=\"subtitle1\" align=\"left\">\n                                                28408 images from OpenImages\n                                            </Typography>\n                                            </li>\n                                            <li>\n                                                <Typography variant=\"subtitle1\" align=\"left\">\n                                                45336 questions\n                                                </Typography>\n                                            </li>\n                                            <li>\n                                                <Typography variant=\"subtitle1\" align=\"left\">\n                                                453360 ground truth answers\n                                                </Typography>\n                                            </li>\n                                        </ul>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <div className={classes.people}>\n                            <Grid\n                                container\n                                justify=\"flex-start\"\n                                spacing={16}\n                            >\n                                <Grid item xs={12} className={classes.gridItem}>\n                                    <Typography\n                                        className={classes.sectionHeader}\n                                        variant=\"h4\"\n                                        align=\"left\"\n                                    >\n                                        Citation\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={12} className={classes.gridItem}>\n                                    <Typography\n                                        variant=\"subtitle1\"\n                                        align=\"left\"\n                                        >\n                                        Please cite using <Link href=\"bibtex.txt\">\n                                        this BiBTeX\n                                        </Link> if you use TextVQA in your work.\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        </div>\n                        <div className={classes.people}>\n                            <Grid\n                                container\n                                justify=\"flex-start\"\n                                spacing={16}\n                            >\n                                <Grid item xs={12} className={classes.gridItem}>\n                                    <Typography\n                                        className={classes.sectionHeader}\n                                        variant=\"h4\"\n                                        align=\"left\"\n                                    >\n                                        News\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={12} className={classes.gridItem}>\n                                    <ul className={classes.ulList}>\n                                        {news.news.map((obj, idx) => (\n                                            <li key={idx}>\n                                                <Typography\n                                                    align=\"left\"\n                                                    variant=\"subtitle1\"\n                                                >\n                                                <span className={classes.greenColor}>[{obj.date}] </span>\n                                                <span className={classes.hrefGreenColor} dangerouslySetInnerHTML={{__html: obj.news}}/>\n                                                </Typography>\n                                            </li>\n\n                                        ))}\n                                    </ul>\n                                </Grid>\n                            </Grid>\n                        </div>\n\n                        <div className={classes.people}>\n                            <Grid container justify=\"flex-start\" spacing={16}>\n                                <Grid item xs={12} className={classes.gridItem}>\n                                    <Typography\n                                        className={classes.sectionHeader}\n                                        variant=\"h4\"\n                                        align=\"left\"\n                                    >\n                                        People\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                            <div className={classes.container}/>\n                            <People/>\n                        </div>\n\n                        <Divider className={classes.people}/>\n                        <Grid\n                            container\n                            justify=\"flex-start\"\n                            alignContent=\"center\"\n                            spacing={16}\n                            className={classes.sectionHeader}\n                        >\n                            <Grid item xs={6} md={6} lg={4}>\n                                <img\n                                    className={classes.bannerLogo}\n                                    style={{\n                                        marginTop: '5%'\n                                    }}\n                                    srcSet=\"assets/images/fair_logo.png\"\n                                    alt=\"Facebook Artificial Intelligence Research\"\n                                />\n                            </Grid>\n                            <Grid item xs={3} md={3} lg={2}>\n                                <img\n                                    className={classes.bannerLogo}\n                                    srcSet=\"assets/images/gt_logo.png\"\n                                    alt=\"Georgia Tech\"\n                                />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n\n                </Grid>\n            </div>\n        );\n    }\n}\n\nHome.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Home);","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport Countdown from 'react-countdown-now';\nimport Link from '@material-ui/core/Link';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { withStyles } from '@material-ui/core';\n\nimport People from './People';\nimport * as challengePeople from '../challenge_people.json';\n\nimport moment from 'moment-timezone';\n\nconst Completionist = () => <span>Challenge has completed!</span>\n\nconst renderer = ({ days, hours, minutes, seconds, completed }) => {\n    if (completed) {\n        // Render a completed state\n        return <Completionist />;\n    } else {\n        // Render a countdown\n        return <span>{days} days {hours}h {minutes}m {seconds}s</span>;\n    }\n};\n\nconst styles = (theme) => ({\n    title: {\n        marginTop: '3em'\n    },\n    headings: {\n        marginTop: '1em'\n    },\n    ulItems: {\n        paddingLeft: '1.2em'\n    },\n    preParent: {\n        backgroundColor: '#eee',\n        border: '1px solid #ddd',\n        borderRadius: '2px',\n        '& pre': {\n            whiteSpace: 'pre-wrap',\n        },\n        '& span': {\n            padding: '1em',\n        },\n        '& code': {\n            fontSize: '12px',\n            color: '#000'\n        }\n    },\n    teaserImage: {\n        width: '100%',\n    },\n    spanTypography: {\n        display: 'inline-block'\n    },\n    bannerLogo: {\n        width: '100%'\n    },\n    sectionHeader: {\n        marginTop: '0.35em'\n    }\n});\n\nconst Challenge = (props) => {\n    const submissionFormat = [\n        {\n            'question_id': 'INT',\n            'answer': 'STRING'\n        }, {\n            'question_id': '...',\n            'answer': '...'\n        }\n    ];\n    const sampleJSONLink = \"https://drive.google.com/file/d/1KpDGPUKILomUZY37b0N5urfMjF60eHNf/view?usp=sharing\";\n    const evaluationInfoLink = \"https://visualqa.org/evaluation.html\";\n    const deadline = moment.tz(\"2019-05-18T23:59:59\", \"Etc/GMT\").toDate();\n    return (\n        <Grid\n            container\n            justify=\"center\"\n            alignItems=\"center\"\n        >\n            <Grid\n                item\n                xs={10}\n                md={8}\n                lg={7}\n            >\n                <Grid\n                    container\n                    justify=\"flex-start\"\n                    alignItems=\"flex-start\"\n                    spacing={16}\n                >\n                    <Grid item className={props.classes.title} xs={12}>\n                        <Typography variant=\"h3\" align=\"left\">\n                            TextVQA Challenge 2019\n                        </Typography>\n                    </Grid>\n                    <br/>\n                    <Grid item className={props.classes.versionNumber} xs={12}>\n                        <Typography variant=\"h4\" align=\"left\">\n                            Deadline: <Countdown date={deadline} renderer={renderer} />\n                        </Typography>\n                        <Divider/>\n                    </Grid>\n                    <Grid item className={props.classes.title} xs={12} md={8} lg={8}>\n                        <Typography variant=\"h4\" align=\"left\">\n                            Overview\n                        </Typography>\n\n                        <Typography variant=\"subtitle1\" className={props.classes.headings}  align=\"left\">\n                        TextVQA requires models to read and reason about text in an image to answer questions based on them.\n                        In order to perform well on this task, models need to first detect and extract out text in the images.\n                        Model then using its reasoning capability needs to answer a question grounded in text in the image.\n                        </Typography>\n                        <Typography variant=\"subtitle1\" className={props.classes.headings} align=\"left\">\n                        Current state-of-the-art models fail to answer questions included in TextVQA as they don't have text reading\n                        capabilities. As shown in the examples in the image, the answers predicted by the state-of-the-art model are random\n                        with no basis when the questions involve reasoning or reading the text.\n                        </Typography>\n                        <Typography variant=\"subtitle1\" className={props.classes.headings} align=\"left\">\n                        Challenge link: <Link href=\"\">add link here later</Link>\n                        </Typography>\n                    </Grid>\n                    <Grid item className={props.classes.title} xs={12} md={4} lg={4}>\n                        <img className={props.classes.teaserImage} srcSet=\"assets/images/teaser.png\" alt=\"Teaser\"/>\n                    </Grid>\n                    <Grid item style={{marginTop: '-1em'}}className={props.classes.headings} xs={12}>\n                        <Typography variant=\"h4\" align=\"left\">\n                        Prizes\n                        </Typography>\n                    </Grid>\n                    <Grid item className={props.classes.versionNumber} xs={12} md={8} lg={8}>\n                        <Typography variant=\"subtitle1\" align=\"left\">\n                        The winning team gets <Link href=\"https://cloud.google.com/\">\n                         Google Cloud Platform\n                        </Link> credits worth $10k!\n                        </Typography>\n                    </Grid>\n                    <Grid item className={props.classes.headings} xs={12}>\n                        <Typography variant=\"h4\" align=\"left\">\n                        Dates\n                        </Typography>\n                    </Grid>\n                    <Grid item className={props.classes.versionNumber} xs={12} md={8} lg={8}>\n                        <Typography variant=\"subtitle1\" align=\"left\">\n                            <Typography component=\"span\" className={props.classes.spanTypography} color=\"primary\">\n                                4 March 2019\n                            </Typography> - Challenge announced.\n                        </Typography>\n                        <Typography variant=\"subtitle1\" align=\"left\">\n                            <Typography component=\"span\" className={props.classes.spanTypography} color=\"primary\">\n                                18 May 2019 (23:59:59 GMT)\n                            </Typography>\n                            - Submission deadline for participants.\n                        </Typography>\n                        <Typography variant=\"subtitle1\" align=\"left\">\n                            <Typography component=\"span\" className={props.classes.spanTypography} color=\"primary\">\n                                June 2019\n                            </Typography> - Winners' announcment at the <Link href=\"https://visualqa.org/workshop.html\">\n                            VQA and VisualDialog Workshop, CVPR 2019.</Link>\n                        </Typography>\n                        <br/>\n                        <Typography variant=\"subtitle1\" align=\"left\">\n                        For questions about the challenge, email us at <Link href=\"mailto:textvqa@gmail.com\">\n                        asg [at] fb [dot] com\n                        </Link>\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Divider/>\n                    </Grid>\n                    <Grid item className={props.classes.headings} xs={12}>\n                        <Typography variant=\"h4\" align=\"left\">\n                        Dataset Description\n                        </Typography>\n                    </Grid>\n                    <Grid item className={props.classes.versionNumber} xs={12} md={12} lg={12}>\n                        <Typography variant=\"subtitle1\" align=\"left\">\n                        You can find detailed description and download links for the dataset at <Link href=\"download\">download</Link> page.\n                        </Typography>\n                        <br/>\n                        <Typography variant=\"subtitle1\" align=\"left\">\n                        The challenge will be conducted on v0.5 of the <Link href=\"download\">TextVQA dataset</Link>, which is\n                        based on <Link href=\"https://storage.googleapis.com/openimages/web/index.html\">OpenImages</Link>.\n                        <br/>\n                        TextVQA v0.5 contains 45,336 questions based on 29,634 images. The v0.5 training set contains 34,602 questions\n                        based on 22,960 images from OpenImages training set. The v0.5 validation set contains 5,000 questions based on\n                        3,321 images from OpenImages training set while the v0.5 test-std set contains 5,734 questions based on 3,353\n                        images from OpenImages test set.\n                        </Typography>\n                        <br/>\n                        <Typography variant=\"subtitle1\" align=\"left\">\n                        <b>LoRRA</b> model provided in our paper uses OCR tokens extracted via Rosetta system used inside Facebook.\n                        As the gap between upper bound of accuracy that can be achieved using OCR tokens from Rosetta\n                        and LoRRA's accuracy is large, we provide these OCR tokens also as part of our dataset in belief\n                        that these tokens will help in pushing state-of-the-art on TextVQA.\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Divider />\n                    </Grid>\n                    <Grid item className={props.classes.headings} xs={12}>\n                        <Typography variant=\"h4\" align=\"left\">\n                        Participation Guidelines\n                        </Typography>\n                    </Grid>\n                    <Grid item className={props.classes.versionNumber} xs={12} md={12} lg={12}>\n                        <Typography variant=\"subtitle1\" align=\"left\">\n                        Teams must register on <Link href=\"https://evalai.cloudcv.org/\">EvalAI</Link> and create a team\n                        for the challenge (<Link href=\"https://evalai.readthedocs.io/en/latest/participate.html\">Quickstart</Link>)\n                        <br/>\n                        The challenge page is available here: <Link href=\"\">update with link</Link>\n                        </Typography>\n                    </Grid>\n                    <Grid item className={props.classes.versionNumber} xs={12} md={12} lg={12}>\n                        <Typography variant=\"subtitle1\" align=\"left\">\n                        Challenge has two phases:\n                        </Typography>\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell><b>Phase</b></TableCell>\n                                    <TableCell align=\"left\"><b>Submissions</b></TableCell>\n                                    <TableCell align=\"left\"><b>Results</b></TableCell>\n                                    <TableCell align=\"left\"><b>Leaderboard</b></TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                <TableRow>\n                                    <TableCell><b>val</b></TableCell>\n                                    <TableCell align=\"left\">unlimited</TableCell>\n                                    <TableCell align=\"left\">immediate</TableCell>\n                                    <TableCell align=\"left\">none</TableCell>\n                                </TableRow>\n                            </TableBody>\n                            <TableBody>\n                                <TableRow>\n                                    <TableCell><b>test-std</b></TableCell>\n                                    <TableCell align=\"left\">5 total</TableCell>\n                                    <TableCell align=\"left\">immediate</TableCell>\n                                    <TableCell align=\"left\">public (optional)</TableCell>\n                                </TableRow>\n                            </TableBody>\n                            <TableBody>\n                                <TableRow>\n                                    <TableCell><b>test-challenge</b></TableCell>\n                                    <TableCell align=\"left\">5 total</TableCell>\n                                    <TableCell align=\"left\">To be Announced at CVPR 2019</TableCell>\n                                    <TableCell align=\"left\">private, to be announced at CVPR 2019</TableCell>\n                                </TableRow>\n                            </TableBody>\n                        </Table>\n                        <br/>\n                        <Typography className={props.classes.headings} variant=\"subtitle1\" align=\"left\">\n                        Please use <b>validation</b> split of TextVQA 0.5 for <b>val</b> phase and <b>test</b> split\n                        for <b>test-std</b> phase.\n                        While answers are already provided for the <b>val</b> set, this phase is useful for sanity checking result format\n                        without wasting submissions in the other phases. For the\n                        <b>test-std</b> and <b>test-challenge</b> phases, the results must be submitted on the full set.\n                        By default, the submissions for <b>test-std</b> phase are private but can be voluntarily\n                        released to the public leaderboard, with a limit of one public leaderboard entry per team.\n                        Submissions to <b>test-challenge</b> phase are considered entries into the challenge.\n                        For multiple submissions to <b>test-challenge</b>, the approach with\n                        the highest test-std accuracy will be used.\n                        </Typography>\n                        <br/>\n                        <Typography variant=\"subtitle1\" align=\"left\">\n                        It is not acceptable to create multiple accounts for a single team in order to bypass these limits.\n                        The exception to this is if a group is working on multiple unrelated methods,\n                        in this case all sets of results can be submitted for evaluation.\n                        Results must be submitted to the evaluation server by\n                        the challenge deadline -- no exceptions will be made.\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Divider />\n                    </Grid>\n                    <Grid item className={props.classes.headings} xs={12}>\n                        <Typography variant=\"h4\" align=\"left\">\n                            Submission Format\n                        </Typography>\n                    </Grid>\n                    <Grid item className={props.classes.versionNumber} xs={12} md={12} lg={12}>\n                        <Typography variant=\"subtitle1\" align=\"left\">\n                        To submit to a phase, teams must upload a JSON file containing their model's answer prediction in the following format:\n                        </Typography>\n                        <br/>\n                        <Typography component=\"span\" align=\"left\" className={props.classes.preParent}>\n                            <Typography component=\"pre\">\n                                <Typography component=\"span\" variant=\"body1\">\n                                    <code>\n                                        {JSON.stringify(submissionFormat, null, 2)}\n                                    </code>\n                                </Typography>\n                            </Typography>\n                        </Typography>\n                        <Typography className={props.classes.headings} variant=\"subtitle1\" align=\"left\">\n                            where <b>question_id</b> is question's unique id\n                            and <b>answer</b> is the prediction by your model for the question.\n                            You can find an example submission file <Link href={sampleJSONLink}>here</Link>.\n                            When submitting, teams should also include a method name,\n                            method description, project URL,\n                            and publication URL if available.\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Divider />\n                    </Grid>\n                    <Grid item className={props.classes.headings} xs={12}>\n                        <Typography variant=\"h4\" align=\"left\">\n                            Evaluation\n                        </Typography>\n                    </Grid>\n                    <Grid item className={props.classes.versionNumber} xs={12} md={12} lg={12}>\n                        <Typography variant=\"subtitle1\" align=\"left\">\n                        We use the same metric as VQA v2 which is robust to inter-human variability in phrasing\n                        the answers. More information on this can be found at <Link href={evaluationInfoLink}>\n                        {evaluationInfoLink}</Link>\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Divider />\n                    </Grid>\n                    <Grid item className={props.classes.headings} xs={12}>\n                        <Typography variant=\"h4\" align=\"left\">\n                            Organizers\n                        </Typography>\n                    </Grid>\n\n                    <Grid item className={props.classes.versionNumber} xs={12} md={12} lg={12}>\n                        <People people={challengePeople.people}/>\n                    </Grid>\n                    <Grid\n                        container\n                        justify=\"flex-start\"\n                        alignContent=\"center\"\n                        spacing={16}\n                        className={props.classes.sectionHeader}\n                    >\n                        <Grid item xs={6} md={6} lg={4}>\n                            <img\n                                className={props.classes.bannerLogo}\n                                style={{\n                                    marginTop: '5%'\n                                }}\n                                srcSet=\"assets/images/fair_logo.png\"\n                                alt=\"Facebook Artificial Intelligence Research\"\n                            />\n                        </Grid>\n                        <Grid item xs={3} md={3} lg={2}>\n                            <img\n                                className={props.classes.bannerLogo}\n                                srcSet=\"assets/images/gt_logo.png\"\n                                alt=\"Georgia Tech\"\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Divider />\n                    </Grid>\n                    <Grid item className={props.classes.headings} xs={12}>\n                        <Typography variant=\"h4\" align=\"left\">\n                            Sponsors\n                        </Typography>\n                    </Grid>\n                    <Grid item className={props.classes.versionNumber} xs={12} md={12} lg={12}>\n                        <Grid item xs={3} md={3} lg={2}>\n                            <img\n                                className={props.classes.bannerLogo}\n                                srcSet=\"assets/images/gcp_logo.svg\"\n                                alt=\"Google Cloud Platform\"\n                            />\n                        </Grid>\n                    </Grid>\n\n                </Grid>\n                <br />\n                <Divider />\n                <br />\n            </Grid>\n        </Grid>\n\n      )\n}\n\nexport default withStyles(styles)(Challenge);","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport Divider from '@material-ui/core/Divider';\nimport { withStyles } from '@material-ui/core';\nimport * as dataDescription from '../data_description.json';\n\nconst styles = (theme) => ({\n    title: {\n        marginTop: '3em'\n    },\n    ulItems: {\n        paddingLeft: '1.2em'\n    },\n    preParent: {\n        backgroundColor: '#eee',\n        border: '1px solid #ddd',\n        borderRadius: '2px',\n        '& pre': {\n            whiteSpace: 'pre-wrap',\n        },\n        '& span': {\n            padding: '1em',\n        },\n        '& code': {\n            fontSize: '12px',\n            color: '#000'\n        }\n    }\n});\n\nconst Download = (props) => {\n    const trainDownloadURL = \"https://dl.fbaipublicfiles.com/textvqa/data/TextVQA_0.5_train.json\";\n    const valDownloadURL = \"https://dl.fbaipublicfiles.com/textvqa/data/TextVQA_0.5_val.json\";\n    const testDownloadURL = \"https://dl.fbaipublicfiles.com/textvqa/data/TextVQA_0.5_test.json\";\n    const openImagesUrl = \"https://storage.googleapis.com/openimages/web/download.html\";\n    const evalAIURL = \"\";\n    const licenseURL = \"https://creativecommons.org/licenses/by/4.0/\";\n    return (\n        <Grid\n            container\n            justify=\"center\"\n            alignItems=\"center\"\n        >\n            <Grid\n                item\n                xs={10}\n                md={8}\n                lg={7}\n            >\n                <Grid\n                    container\n                    justify=\"flex-start\"\n                    alignItems=\"center\"\n                    spacing={16}\n                >\n                    <Grid item className={props.classes.title} xs={12}>\n                        <Typography variant=\"h3\" align=\"left\">\n                            TextVQA dataset\n                    </Typography>\n                    </Grid>\n                    <br />\n                    <Grid item className={props.classes.versionNumber} xs={12}>\n                        <Typography variant=\"h4\" align=\"left\">\n                            v0.5\n                    </Typography>\n                    </Grid>\n\n                    <Grid className={props.classes.setItems} item xs={12} sm={6} md={4}>\n                        <Typography variant=\"h5\" align=\"left\">\n                            <Link href={trainDownloadURL}>\n                                Training set\n                            </Link>\n                        </Typography>\n                        <ul className={props.classes.ulItems}>\n                            <li>\n                                <Typography variant=\"subtitle1\" align=\"left\">\n                                    34,602 questions\n                                </Typography>\n                            </li>\n                            <li>\n                                <Typography variant=\"subtitle1\" align=\"left\">\n                                    22,960 images\n                                </Typography>\n                            </li>\n                            <li>\n                                <Typography variant=\"subtitle1\" align=\"left\">\n                                    10.47 average extracted OCR tokens\n                                </Typography>\n                            </li>\n                        </ul>\n                    </Grid>\n                    <Grid className={props.classes.setItems} item xs={12} sm={6} md={4}>\n                        <Typography variant=\"h5\" align=\"left\">\n                            <Link href={valDownloadURL}>\n                                Validation set\n                            </Link>\n                        </Typography>\n                        <ul className={props.classes.ulItems}>\n                            <li>\n                                <Typography variant=\"subtitle1\" align=\"left\">\n                                    5,000 questions\n                                </Typography>\n                            </li>\n                            <li>\n                                <Typography variant=\"subtitle1\" align=\"left\">\n                                    3,321 images\n                                </Typography>\n                            </li>\n\n                            <li>\n                                <Typography variant=\"subtitle1\" align=\"left\">\n                                    10.72 average extracted OCR tokens\n                                </Typography>\n                            </li>\n                        </ul>\n                    </Grid>\n                    <Grid className={props.classes.setItems} item xs={12} sm={6} md={4}>\n                        <Typography variant=\"h5\" align=\"left\">\n                            <Link href={testDownloadURL}>\n                                Test set\n                            </Link>\n                        </Typography>\n                        <ul className={props.classes.ulItems}>\n                            <li>\n                                <Typography variant=\"subtitle1\" align=\"left\">\n                                    5,734 questions\n                                </Typography>\n                            </li>\n                            <li>\n                                <Typography variant=\"subtitle1\" align=\"left\">\n                                    3,353 images\n                                </Typography>\n                            </li>\n\n                            <li>\n                                <Typography variant=\"subtitle1\" align=\"left\">\n                                    7.74 average extracted OCR tokens\n                                </Typography>\n                            </li>\n                        </ul>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <br />\n                        <Divider />\n                        <br />\n                    </Grid>\n                    <Grid item xs={12} md={12}>\n                        <Typography variant=\"h6\" align=\"left\">Readme</Typography>\n                        <ul className={props.classes.ulItems}>\n                            <li>\n                                <Typography variant=\"subtitle1\" align=\"left\">\n                                    Images for training and validation set are from OpenImages train set\n                                    while images for test set are from OpenImages test set.\n                                </Typography>\n                            </li>\n                            <li>\n                                <Typography variant=\"subtitle1\" align=\"left\">\n                                    OpenImages train and test set images can be downloaded from <Link href={openImagesUrl}>here</Link>.\n                                </Typography>\n                            </li>\n                            <li>\n                                <Typography variant=\"subtitle1\" align=\"left\">\n                                    Data is available under <Link href={licenseURL}>CC BY 4.0</Link> license.\n                                </Typography>\n                            </li>\n                            <li>\n                                <Typography variant=\"subtitle1\" align=\"left\">\n                                TextVQA evaluation server for testing and validation set is hosted\n                                on <Link href={evalAIURL}>EvalAI</Link>.\n                                </Typography>\n                            </li>\n                            <li>\n                                <Typography variant=\"subtitle1\" align=\"left\">\n                                Numbers in the papers should be reported on v0.5 testing set (test-std).\n                                </Typography>\n                            </li>\n                            <li>\n                                <Typography variant=\"subtitle1\" align=\"left\">\n                                We also provide OCR tokens extracted from Rosetta system with the dataset.\n                                </Typography>\n                            </li>\n                            <li>\n                                <Typography variant=\"subtitle1\" align=\"left\">\n                                OCR tokens provided in the dataset are the ones used in TextVQA's paper.\n                                We cannot guarantee that these tokens will be correct.\n                                </Typography>\n                            </li>\n                        </ul>\n                    </Grid>\n                    <Grid item xs={12} md={12}>\n                        <Typography variant=\"h6\" align=\"left\">Description</Typography>\n                        <br/>\n                        <Typography component=\"span\" align=\"left\" className={props.classes.preParent}>\n                            <Typography component=\"pre\">\n                                <Typography component=\"span\" variant=\"body1\">\n                                    <code>\n                                        {JSON.stringify(dataDescription['default'], null, 2)}\n                                    </code>\n                                </Typography>\n                            </Typography>\n                        </Typography>\n\n                    </Grid>\n                    <Grid item xs={12} md={12}>\n                        <Typography variant=\"h6\" align=\"left\">License</Typography>\n                        <br/>\n                        <Typography variant=\"subtitle1\" align=\"left\">\n                            <Link href={licenseURL}>CC BY 4.0</Link>\n                        </Typography>\n                    </Grid>\n                </Grid>\n                <br/>\n                <Divider/>\n                <br/>\n            </Grid>\n        </Grid>\n\n    )\n}\n\nexport default withStyles(styles)(Download);","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nconst Paper = (props) => {\n    return (\n        <Grid container justify=\"center\" alignItems=\"center\">\n            <Grid item xs={12}>\n                <Typography variant=\"subtitle1\">\n                Paper is coming out soon.\n                </Typography>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default Paper;","import React, { Component } from 'react';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Header from './components/Header';\nimport Explore from './components/Explore';\nimport Home from './components/Home';\n\nimport './App.css';\nimport theme from './styles';\nimport Challenge from './components/Challenge';\nimport Download from './components/Download';\nimport Paper from './components/Paper';\n\nclass App extends Component {\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Router basename={process.env.PUBLIC_URL + '/'}>\n          <div className=\"App\">\n            <header className=\"App-header\">\n              <Header/>\n            </header>\n              <div>\n                <Route path=\"/\" exact component={Home} />\n                <Route path=\"/explore\" component={Explore} />\n                <Route path=\"/challenge\" component={Challenge} />\n                <Route path=\"/download\" component={Download} />\n                <Route path=\"/paper\" component={Paper} />\n              </div>\n          </div>\n        </Router>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}