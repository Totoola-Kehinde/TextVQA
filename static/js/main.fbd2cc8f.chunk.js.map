{"version":3,"sources":["logo.svg","styles.js","components/Header.js","components/BoundingBox.js","components/Banner.js","components/Explore_new.js","components/People.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","styles","root","width","flexGrow","grow","buttonLink","color","textDecoration","withStyles","props","classes","react_default","a","createElement","className","AppBar_default","position","Toolbar_default","Typography_default","variant","align","Link","to","Button_default","BoundingBox","colors","word","wordInt","charCodeAt","this","length","canvas","style","offsetWidth","_this2","refs","fitToContainer","ctx","getContext","img","Image","src","imageUrl","onload","newData","drawImageScaled","globalAlpha","showBoxes","centerShiftX","centerShiftY","newWidth","newHeight","idx","font","boxes","box","coords","fillStyle","getColor","strokeStyle","rotate","rotation","Math","pi","strokeRect","apply","Object","toConsumableArray","fillText","hRatio","newCHeight","height","vRatio","ratio","min","clearRect","drawImage","fillRect","ref","Component","Banner","seed","round","random","getWidthForColumn","mapping","xs","sm","md","lg","currentWidth","keys","forEach","key","isWidthUp","_this","chunkArray","arr","nChunks","chunks","chunkSize","ceil","i","push","slice","renderCardComponents","results","cards","concat","streamResults","map","result","renderCardComponent","colWidth","numChunks","floor","containerChunks","chunk","float","getMaxAnswer","answers","counter","maxWord","maxCount","currentAnswer","id","ocr_info","ocrInfo","bounding_box","top_left_x","top_left_y","maxAnswer","gridItem","Card_default","card","components_BoundingBox","showOCRBoxes","flickr_300k_url","CardContent_default","cardContent","showQuestions","question","showAnswers","Grid_default","container","direction","justify","alignItems","index_es","componentId","dataField","title","from","size","pagination","showResultStats","loader","react","reactValues","renderAllData","withWidth","padding","spacing","unit","display","paddingBottom","textAlign","ExploreNew","state","anchorEl","and","updateQuery","query","body","split","queryParams","JSON","parse","function_score","random_score","stringify","join","handleCheckboxChange","name","event","setState","defineProperty","target","checked","handleMenuButtonClick","currentTarget","handleMenuClose","app","config","url","transformRequest","item","categoryField","placeholder","showSearch","optionsMenuButton","aria-owns","undefined","aria-haspopup","onClick","Menu_default","open","Boolean","onClose","MenuItem_default","FormControlLabel_default","control","Checkbox_default","onChange","value","label","components_Banner","avatar","margin","peopleJSX","people","person","Link_default","href","website","Avatar_default","img_url","core_index_es","organization","Home","mainContainer","backgroundColor","zIndex","overflow","top","left","Paper_default","paper","elevation","marginTop","component","gutterBottom","components_People","React","objectSpread","mixins","gutters","paddingTop","backgroundImage","opacity","divider","App","core_styles","BrowserRouter","components_Header","Route","path","exact","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fbd2cc8f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import { createMuiTheme } from '@material-ui/core/styles';\nimport { lightGreen, blue, white, green } from '@material-ui/core/colors/lightGreen';\n\nconst theme = createMuiTheme({\n    palette: {\n      primary: {\n        light: '#9ccc65',\n        main: '#7cb342',\n        dark: '#33691e',\n        contrastText: '#fff',\n      },\n      secondary: {\n        light: '#ff7961',\n        main: '#f44336',\n        dark: '#ba000d',\n        contrastText: '#000',\n      },\n    },\n  });\nexport default theme;","import React from 'react';\nimport PropTypes from 'prop-types'\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport theme from '../styles'\n\nconst styles = {\n    root: {\n      width: '100%',\n      flexGrow: 1\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    buttonLink: {\n        color: theme['palette']['primary']['contrastText'],\n        textDecoration: 'none'\n    }\n  };\n  \nfunction Header(props) {\n    const { classes } = props;\n\n    return (\n        <div className={classes.root}>\n        <AppBar position=\"static\" color=\"primary\">\n            <Toolbar>\n            <Typography variant=\"h6\" color=\"inherit\" align=\"left\" className={classes.grow}>\n                <Link className={classes.buttonLink} to=\"/\">\n                    TextVQA\n                </Link>\n            </Typography>\n            <Link className={classes.buttonLink} to=\"/explore\">\n                <Button color=\"inherit\">Explore</Button>\n            </Link>\n            </Toolbar>\n        </AppBar>\n        </div>\n    );\n}\n\nHeader.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Header);","import React, { Component } from 'react';\n\nclass BoundingBox extends Component {\n    colors = ['#e6194B', '#3cb44b', '#ffe119', '#4363d8',\n              '#42d4f4', '#f032e6',\n              '#469990', '#9A6324', '#800000', '#aaffc3',\n              '#000075', '#000000', '#911eb4'];\n\n    getColor(word) {\n        const char = word.charCodeAt(0);\n        const wordInt = char % this.colors.length;\n        return this.colors[wordInt];\n    }\n\n    fitToContainer(canvas) {\n        // Make it visually fill the positioned parent\n        canvas.style.width ='100%';\n        // ...then set the internal size to match\n        canvas.width  = canvas.offsetWidth;\n    }\n\n    componentDidMount() {\n        const canvas = this.refs.canvas;\n        this.fitToContainer(canvas);\n\n        const ctx = canvas.getContext(\"2d\");\n        const img = new Image();\n        img.src = this.props.imageUrl;\n\n        img.onload = () => {\n            const newData = this.drawImageScaled(img, ctx);\n            ctx.globalAlpha = 1.0;\n\n            if (!this.props.showBoxes) {\n                return;\n            }\n            const { centerShiftX, centerShiftY, newWidth, newHeight } = newData;\n            ctx.font = \"12px Lato\";\n\n            for(const idx in this.props.boxes) {\n                const box = this.props.boxes[idx];\n                box.coords[0] *= newWidth;\n                box.coords[1] *= newHeight;\n                box.coords[2] *= newWidth;\n                box.coords[3] *= newHeight;\n                box.coords[0] += centerShiftX;\n                box.coords[1] += centerShiftY;\n                ctx.fillStyle = this.getColor(box.word);\n                ctx.strokeStyle = ctx.fillStyle;\n\n                ctx.rotate(box.rotation * Math.pi / 180);\n                ctx.strokeRect(...box.coords);\n\n                ctx.fillText(box.word, box.coords[0], box.coords[1]);\n            }\n        }\n    }\n\n    drawImageScaled(img, ctx) {\n        const canvas = ctx.canvas;\n        const hRatio = canvas.width  / img.width;\n\n        const newCHeight = hRatio * img.height;\n        canvas.style.height = newCHeight;\n        canvas.height = newCHeight;\n\n        const vRatio =  canvas.height / img.height;\n        const ratio  = Math.min(hRatio, vRatio);\n        const centerShiftX = (canvas.width - img.width*ratio) / 2;\n        const centerShiftY = (canvas.height - img.height*ratio) / 2;\n\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.drawImage(img, 0, 0, img.width, img.height,\n                      centerShiftX, centerShiftY, img.width*ratio,\n                      img.height*ratio);\n\n        if (this.props.showBoxes) {\n            ctx.fillStyle = 'rgba(0, 0, 0, 0.2)';\n            ctx.fillRect(centerShiftX, centerShiftY, img.width*ratio,\n                        img.height*ratio);\n        }\n\n        const newWidth = img.width * ratio;\n        const newHeight = img.height * ratio;\n\n        return { centerShiftX, centerShiftY, newWidth, newHeight};\n    }\n\n    render() {\n        return(\n            <div>\n              <canvas ref=\"canvas\" />\n            </div>\n        )\n    }\n}\n\nexport default BoundingBox;","import React, { Component } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core';\nimport withWidth, { isWidthUp } from '@material-ui/core/withWidth';\n\nimport { ReactiveList } from '@appbaseio/reactivesearch';\nimport Grid from '@material-ui/core/Grid'\n\nimport BoundingBox from './BoundingBox';\n\nconst styles = theme => ({\n    gridItem: {\n        padding: theme.spacing.unit * 0.5,\n        position: 'relative',\n        width: '100%',\n        display: 'inline-block'\n    },\n    cardContent: {\n        paddingBottom: '4px !important'\n    },\n    card: {\n        padding: theme.spacing.unit * 2,\n        textAlign: 'center'\n    }\n});\n\nclass Banner extends Component {\n    seed = Math.round(Math.random() * 10000);\n\n    getWidthForColumn = () => {\n        // NOTE: Keep this is in this order.\n        // Smallest key should come first\n        const mapping = {\n            'xs': '100',\n            'sm': '50',\n            'md': '33',\n            'lg': '20'\n        };\n\n        let currentWidth = '100';\n        Object.keys(mapping).forEach((key) => {\n            if (isWidthUp(key, this.props.width)) {\n                currentWidth = mapping[key];\n            }\n        });\n\n        return currentWidth;\n    }\n\n    chunkArray = (arr, nChunks) => {\n        const chunks = []\n        const chunkSize = Math.ceil(arr.length / nChunks)\n        for(let i = 0; i < arr.length; i += chunkSize) {\n            chunks.push(arr.slice(i, i + chunkSize));\n        }\n\n        return chunks;\n    }\n\n    renderCardComponents = (results) => {\n        if (results.length === 0) {\n            return \"\";\n        }\n\n        const cards = [...results.results, ...results.streamResults].map((result) => {\n            return this.renderCardComponent(result);\n        });\n\n        const colWidth = this.getWidthForColumn();\n        const numChunks = Math.floor(100 / colWidth);\n        const cardChunks = this.chunkArray(cards, numChunks);\n\n        const containerChunks = cardChunks.map((chunk) => {\n            return (\n                <div\n                    key={Math.random()}\n                    style={{\n                        width: colWidth + '%',\n                        float: 'left'\n                    }}\n                >\n                    {chunk}\n                </div>\n            )\n\n        });\n\n        return (\n            <div>\n                {containerChunks}\n            </div>\n        );\n    }\n\n    getMaxAnswer = (answers) => {\n        const counter = {}\n        if (!answers) {\n            return '';\n        }\n        let maxWord = answers[0];\n        let maxCount = 1;\n\n        for(const idx in answers) {\n            const currentAnswer = answers[idx];\n            if (counter[currentAnswer]) {\n                counter[currentAnswer] += 1;\n            } else {\n                counter[currentAnswer] = 1;\n            }\n\n            if (counter[currentAnswer] > maxCount) {\n                maxCount = counter[currentAnswer];\n                maxWord = currentAnswer;\n            }\n        }\n\n        return maxWord;\n    }\n\n    renderCardComponent = (result) => {\n        const id = Math.random();\n        const boxes = []\n\n        for(const idx in result.ocr_info) {\n            const ocrInfo = result.ocr_info[idx];\n            const x1 = ocrInfo.bounding_box.top_left_x;\n            const y1 = ocrInfo.bounding_box.top_left_y;\n            const width = ocrInfo.bounding_box.width;\n            const height = ocrInfo.bounding_box.height;\n            const box =  {\n                coords: [x1, y1, width, height],\n                rotation: ocrInfo.bounding_box.rotation,\n                word: ocrInfo.word\n            };\n            boxes.push(box)\n        }\n\n        const maxAnswer = this.getMaxAnswer(result.answers);\n        return (\n            <div\n                key={id}\n                className={this.props.classes.gridItem}\n            >\n                <Card key={id} className={this.props.classes.card}>\n                    <BoundingBox\n                        showBoxes={this.props.showOCRBoxes}\n                        imageUrl={result.flickr_300k_url}\n                        boxes={boxes}\n                    />\n                    <CardContent className={this.props.classes.cardContent}>\n                        {\n                            this.props.showQuestions ?\n                            <Typography variant=\"subtitle1\">\n                                {result.question}\n                            </Typography> : ''\n                        }\n                        {\n                            this.props.showAnswers && maxAnswer.length > 0 ?\n                            <Typography variant=\"caption\">\n                                {maxAnswer}\n                            </Typography> : ''\n                        }\n                    </CardContent>\n                </Card>\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                <ReactiveList\n                    componentId=\"result\"\n                    dataField=\"question\"\n                    title=\"Results\"\n                    from={0}\n                    size={this.props.size || 25}\n                    pagination={this.props.pagination || false}\n                    showResultStats={this.props.showResultStats}\n                    loader={this.props.loader}\n                    react={this.props.reactValues}\n                    renderAllData={this.renderCardComponents}\n                    style={this.props.style || {}}\n                />\n            </Grid>\n        );\n    }\n}\n\nexport default withWidth()(withStyles(styles)(Banner));\n","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Button from '@material-ui/core/Button';\n\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {\n    ReactiveBase, CategorySearch, MultiDropdownList\n} from '@appbaseio/reactivesearch';\nimport Grid from '@material-ui/core/Grid'\n\nimport * as config from '../frontend_config.json';\nimport Banner from './Banner';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1\n    },\n    optionsMenuButton: {\n        width: '100%'\n    }\n});\n\nclass ExploreNew extends Component {\n    seed = Math.round(Math.random() * 10000);\n    state = {\n        showOCRBoxes: true,\n        showQuestions: true,\n        showAnswers: true,\n        anchorEl: null\n    };\n\n    reactValues = {\n        and: [\n            \"searchbox\", \"set_name\", \"image_classes\",\n            \"ocr_tokens\", \"answers\"\n        ]\n    }\n\n    updateQuery = (query) => {\n        let body = query.body;\n        body = body.split('\\n')\n        let queryParams = JSON.parse(body[1]);\n        queryParams[\"query\"] = {\n            \"function_score\": {\n                \"query\": queryParams[\"query\"],\n                \"random_score\": {\n                    \"seed\": this.seed\n                }\n            }\n        };\n\n        body[1] = JSON.stringify(queryParams)\n        query.body = body.join('\\n');\n        return query;\n    }\n\n    handleCheckboxChange = name => event => {\n        this.setState({ [name]: event.target.checked });\n    };\n\n    handleMenuButtonClick = (event) => {\n        this.setState({ anchorEl: event.currentTarget });\n    }\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    }\n\n    render() {\n      return (\n          <ReactiveBase\n            app={config.index_name}\n            url={config.server_url}\n            transformRequest={this.updateQuery}\n          >\n            <Grid\n                container\n                direction=\"row\"\n                className={this.props.classes.root}\n                justify=\"center\"\n                alignItems=\"center\"\n            >\n                <Grid item xs={12} md={6} lg={4}>\n                    <CategorySearch\n                        componentId=\"searchbox\"\n                        dataField=\"question\"\n                        categoryField=\"question\"\n                        placeholder=\"Search for questions\"\n                        style={{\n                            padding: \"5px\"\n                        }}\n                    />\n                </Grid>\n                <Grid item xs={12} md={2} lg={1}>\n                    <MultiDropdownList\n                        componentId=\"set_name\"\n                        dataField=\"set_name\"\n                        placeholder=\"Choose set\"\n                        showSearch={false}\n                    />\n                </Grid>\n                <Grid item xs={12} md={2} lg={2}>\n                    <MultiDropdownList\n                        componentId=\"image_classes\"\n                        dataField=\"image_classes\"\n                        placeholder=\"Choose classes\"\n                        showSearch={false}\n                    />\n                </Grid>\n                <Grid item xs={12} md={2} lg={1}>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={this.props.classes.optionsMenuButton}\n                        aria-owns={this.state.anchorEl ? 'simple-menu' : undefined}\n                        aria-haspopup=\"true\"\n                        onClick={this.handleMenuButtonClick}\n                    >\n                        Options\n                    </Button>\n                    <Menu\n                        anchorEl={this.state.anchorEl}\n                        open={Boolean(this.state.anchorEl)}\n                        onClose={this.handleMenuClose}\n                    >\n                        <MenuItem>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={this.state.showOCRBoxes}\n                                        onChange={this.handleCheckboxChange('showOCRBoxes')}\n                                        value=\"showOCRBoxes\"\n                                    />\n                                }\n                                label=\"Show OCR boxes\">\n                            </FormControlLabel>\n                        </MenuItem>\n                        <MenuItem>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={this.state.showQuestions}\n                                        onChange={this.handleCheckboxChange('showQuestions')}\n                                        value=\"showQuestions\"\n                                    />\n                                }\n                                label=\"Show questions\">\n                            </FormControlLabel>\n                        </MenuItem>\n                        <MenuItem>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={this.state.showAnswers}\n                                        onChange={this.handleCheckboxChange('showAnswers')}\n                                        value=\"showAnswers\"\n                                    />\n                                }\n                                label=\"Show answers\">\n                            </FormControlLabel>\n                        </MenuItem>\n                    </Menu>\n                </Grid>\n                <Grid item xs={12} md={6} lg={2}>\n                    <CategorySearch\n                        componentId=\"ocr_tokens\"\n                        dataField=\"ocr_tokens\"\n                        categoryField=\"ocr_tokens\"\n                        placeholder=\"Search for OCR tokens\"\n                        style={{\n                            padding: \"5px\"\n                        }}\n                    />\n                </Grid>\n                <Grid item xs={12} md={6} lg={2}>\n                    <CategorySearch\n                        componentId=\"answers\"\n                        dataField=\"answers\"\n                        categoryField=\"answers\"\n                        placeholder=\"Search for Answers\"\n                        style={{\n                            padding: \"5px\"\n                        }}\n                    />\n                </Grid>\n                <Banner\n                    showOCRBoxes={this.state.showOCRBoxes}\n                    showAnswers={this.state.showAnswers}\n                    showQuestions={this.state.showQuestions}\n                    reactValues={this.reactValues}\n                    showResultStats={true}\n                    pagination={false}\n                    size={25}\n                    style={{\n                        \"width\": \"90%\",\n                        \"textAlign\": \"center\"\n                    }}\n                />\n            </Grid>\n        </ReactiveBase>\n      );\n    }\n}\n\nexport default withStyles(styles)(ExploreNew);\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\n\nimport { withStyles, Typography } from \"@material-ui/core\";\nimport * as people from '../people_list.json';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typograph from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\n\nconst styles = (theme) => ({\n    avatar: {\n        width: 100,\n        height: 100,\n        margin: '0 auto'\n    },\n    gridItem: {\n        padding: theme.spacing.unit * 2\n    }\n});\n\nconst People = (props) => {\n    const peopleJSX = people.people.map((person) => {\n        const key = Math.random();\n        return (\n            <Grid item key={key} xs={12} md={3} lg={2}>\n                <Link href={person.website}>\n                    <Avatar className={props.classes.avatar} src={person.img_url}/>\n                </Link>\n                <Typography variant=\"subtitle1\">\n                    {person.name}\n                </Typography>\n                <Typography variant=\"caption\">\n                    {person.organization}\n                </Typography>\n            </Grid>\n        )\n    });\n\n    return (\n        <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"flex-start\"\n            spacing={16}\n        >\n            {peopleJSX}\n        </Grid>\n    )\n};\n\n\nexport default withStyles(styles)(People)","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\n\nimport Banner from './Banner';\nimport People from './People';\nimport * as config from '../frontend_config.json';\nimport { ReactiveBase } from '@appbaseio/reactivesearch';\n\n\nconst styles = theme => ({\n  paper: {\n    ...theme.mixins.gutters(),\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n  },\n  mainContainer: {\n      backgroundImage: 'radial-gradient( ' +\n      theme.palette.primary.light + ' 20% ,' + theme.palette.primary.dark + ' 100%)',\n      opacity: 0.9,\n      height: '50vh'\n  },\n  people: {\n      width: '80%',\n      margin: '0 auto'\n  },\n  root: {\n    //   flexGrow: 1,\n    // marginTop: '50px'\n  },\n  divider: {\n      color: '#888',\n      width: '100%'\n  },\n  container: {\n    padding: theme.spacing.unit * 2,\n  }\n});\n\nclass Home extends React.Component {\n    state = {\n        checked: false\n    }\n\n    updateQuery = (query) => {\n        let body = query.body;\n        body = body.split('\\n')\n        let queryParams = JSON.parse(body[1]);\n        queryParams[\"query\"] = {\n            \"function_score\": {\n                \"query\": queryParams[\"query\"],\n                \"random_score\": {\n                    \"seed\": this.seed\n                }\n            }\n        };\n\n        body[1] = JSON.stringify(queryParams)\n        query.body = body.join('\\n');\n        return query;\n    }\n\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.root}>\n                <Grid\n                    container\n                    className={classes.mainContainer}\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    style={{\n                        position: 'relative'\n                    }}\n                >\n                    <div\n                        style={{\n                            height: '50vh',\n                            backgroundColor: 'rgba(0, 0, 0, 0.4)',\n                            width: '100%',\n                            zIndex: -10,\n                            position: \"absolute\"\n                        }}\n                    />\n                    <ReactiveBase\n                        app={config.index_name}\n                        url={config.server_url}\n                        transformRequest={this.updateQuery}\n                        style={{\n                            height: '50vh',\n                            overflow: 'auto',\n                            position: 'relative'\n                        }}\n                    >\n                        <Banner\n                            showOCRBoxes={true}\n                            showAnswers={true}\n                            showResultStats={false}\n                            showQuestions={true}\n                            reactValues={{}}\n                            pagination={true}\n                            loader=\"\"\n                            size={15}\n                            style={{\n                                height: '50vh',\n                                zIndex: -20,\n                                size: 10,\n                                position: 'absolute',\n                                top: 0,\n                                overflow: 'hidden'\n                            }}\n                        />\n                    </ReactiveBase>\n                    <Grid\n                        container\n                        style={{\n                            position: 'absolute',\n                            top: 0,\n                            left: 0,\n                            width: '100%',\n                            height: '100%'\n                        }}\n                        justify=\"center\"\n                        alignItems=\"center\"\n                    >\n                        <Grid\n                            item\n                            xs={12}\n                            md={8}\n                            lg={6}\n                            style={{\n                                position: 'relative'\n                            }}\n                        >\n                            <Paper className={classes.paper} elevation={1}>\n                                <Typography variant=\"h2\">\n                                TextVQA\n                                </Typography>\n\n                                <Typography variant=\"subtitle1\">\n                                A dataset to benchmark visual reasoning based on text in images.\n                                </Typography>\n                                <Grid\n                                    style={{\n                                        marginTop: '10px'\n                                    }}\n                                    container\n                                    direction=\"row\"\n                                    justify=\"center\"\n                                    alignItems=\"center\"\n                                    spacing={16}\n                                >\n                                    <Grid item xs={12} md={6}>\n                                        <Button variant=\"contained\" color=\"primary\">\n                                            Explore\n                                        </Button>\n                                    </Grid>\n                                    <Grid item xs={12} md={6}>\n                                        <Button variant=\"contained\" color=\"primary\">\n                                            Download\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Paper>\n                        </Grid>\n\n                    </Grid>\n                </Grid>\n                <div className={this.props.classes.people}>\n                    <Typography variant=\"title\" component=\"h2\" gutterBottom align=\"left\">\n                        People\n                    </Typography>\n                    <People/>\n                </div>\n            </div>\n        );\n    }\n}\n\nHome.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Home);","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport Header from './components/Header';\nimport ExploreNew from './components/Explore_new';\nimport Home from './components/Home';\n\nimport logo from './logo.svg';\nimport './App.css';\nimport theme from './styles';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Router>\n          <div className=\"App\">\n            <header className=\"App-header\">\n              <Header/>\n            </header>\n              <div>\n                <Route path=\"/\" exact component={Home} />\n                <Route path=\"/explore\" component={ExploreNew} />\n              </div>\n          </div>\n        </Router>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}