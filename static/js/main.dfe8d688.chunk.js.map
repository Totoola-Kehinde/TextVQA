{"version":3,"sources":["styles.js","components/ExploreHelp.js","components/Header.js","components/BoundingBox.js","components/SampleDialog.js","components/Banner.js","components/Explore.js","components/People.js","components/Home.js","components/Challenge.js","components/Download.js","components/Code.js","components/Paper.js","App.js","serviceWorker.js","index.js"],"names":["textvqaTheme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","typography","useNextVariants","textcapsTheme","theme","window","location","href","indexOf","withMobileDialog","withStyles","ulList","margin","& li","padding","props","fullScreen","react_default","a","createElement","Dialog_default","open","onClose","handleClose","aria-labelledby","aria-describedby","DialogTitle_default","id","DialogContent_default","className","classes","Link_default","DialogActions_default","Button_default","onClick","color","autoFocus","styles","root","width","flexGrow","grow","buttonLink","textDecoration","buttonsSide","textAlign","logo","Object","defineProperty","height","verticalAlign","breakpoints","down","leftIcon","marginRight","spacing","unit","sectionDesktop","display","up","sectionMobile","Header","state","mobileMoreAnchorEl","dialogOpen","handleExploreOpen","_this","setState","handleExploreClose","handleMobileMenuOpen","event","currentTarget","handleMobileMenuClose","this","isMobileMenuOpen","Boolean","isTextVQA","pathname","helpMobileMenuItem","MenuItem_default","underline","join","disableRipple","disableFocusRipple","Help_default","renderMobileMenu","Menu_default","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","ClickAwayListener_default","onClickAway","MenuList_default","react_router","exact","path","render","CloudDownload_default","Equalizer_default","Description_default","Code_default","Explore_default","exploreHelpMenu","components_ExploreHelp","classesGrowButton","classesButton","textVQALink","key","align","srcSet","alt","textCapsLink","console","log","AppBar_default","position","Toolbar_default","IconButton_default","aria-haspopup","MoreVert_default","React","Component","withRouter","BoundingBox","colors","setRotatedCoords","coords","centerShiftX","centerShiftY","rotation","x","y","newX","newY","newWidth","newHeight","componentDidMount","renderCanvas","componentDidUpdate","prevProps","showBoxes","imageUrl","canvas","refs","fitToContainer","ctx","getContext","isDialog","img","Image","src","parseInt","length","onload","newData","drawImageScaled","globalAlpha","idx","font","fontWeight","boxes","box","JSON","parse","stringify","beginPath","fillStyle","getColor","word","strokeStyle","lineWidth","boxRotation","rotate","Math","pi","strokeRect","apply","toConsumableArray","measureText","rect","fill","fillText","closePath","hRatio","newCHeight","style","vRatio","ratio","min","clearRect","drawImage","fillRect","wordInt","charCodeAt","offsetWidth","ref","cardContent","paddingBottom","card","flickrUrls","fontSize","result","fullWidth","maxWidth","Typography_default","variant","flickr_300k_url","target","flickr_original_url","size","aria-label","Cancel_default","components_BoundingBox","showOCRBoxes","question","maxAnswer","Banner","seed","round","random","currentDialog","vars","nChunks","originalChunks","originalIds","originalLen","currentResult","currentMaxAnswer","currentBoxes","handleDialogOpen","data","handleDialogClose","getWidthForColumn","mapping","xs","sm","md","lg","currentWidth","keys","forEach","isWidthUp","chunkArray","arr","isNewSearch","uniqueId","match","params","type","currentIds","element","push","slice","i","gap","floor","index","chunks","concat","renderCardComponents","results","finalResults","streamResults","colWidth","numChunks","containerChunks","map","chunk","renderCardComponent","float","getMaxAnswer","answers","counter","maxWord","maxCount","currentAnswer","getMainCardContent","captions","caption","cardIdx","ocr_info","ocrInfo","bounding_box","top_left_x","top_left_y","gridItem","Card_default","CardContent_default","showQuestions","showAnswers","formatResultsStats","resultInfo","component","totalResults","time","noResultStats","dataField","Grid_default","container","direction","justify","alignItems","index_es","componentId","title","from","renderResultStats","pagination","showResultStats","loader","renderNoResults","react","reactValues","renderAllData","dialogEnabled","components_SampleDialog","withWidth","Explore","and","replaceBody","body","replace","updateQuery","query","split","queryParams","function_score","random_score","handleCheckboxChange","name","checked","handleMenuButtonClick","handleMenuClose","getReactArray","item","array","splice","mainDataField","mainPlaceHolder","showQuestionsPlaceholder","config","app","url","transformRequest","autosuggest","categoryField","placeholder","debounce","showCount","showSearch","optionsMenuButton","aria-owns","undefined","FormControlLabel_default","control","Checkbox_default","onChange","value","label","components_Banner","avatar","selectedPeople","lgSize","people","peopleJSX","person","rel","website","Avatar_default","img_url","core_index_es","organization","paper","objectSpread","mixins","gutters","paddingTop","mainContainer","backgroundImage","opacity","marginTop","divider","sectionHeader","bannerLogo","spanInlineBlock","greenColor","hrefGreenColor","& a","preParent","backgroundColor","border","borderRadius","& pre","whiteSpace","& span","& code","citationPre","wordBreak","breakWord","TextVQAContent","zIndex","overflow","top","left","Paper_default","elevation","alignContent","gutterBottom","news","obj","date","dangerouslySetInnerHTML","__html","components_People","Divider_default","TextCapsContent","Home","Content","Completionist","renderer","_ref","days","hours","minutes","seconds","completed","Challenge_Completionist","overview","headings","ulItems","paddingLeft","evalAILink","teaserImage","spanTypography","evalaiLogo","marginLeft","deadline","moment","tz","toDate","versionNumber","dist_index_es","overflowX","Table_default","minWidth","TableHead_default","TableRow_default","TableCell_default","TableBody_default","question_id","answer","challengePeople","liLink","borderBottom","borderBottomColor","&:hover","downloadURLIcon","trainDownloadURL","valDownloadURL","testDownloadURL","licenseURL","setItems","dataDescription","embed","App","core_styles","react_router_dom","basename","components_Header","Challenge","Download","Code","Paper","hostname","Sentry","dsn","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dfe8d688.chunk.js","sourcesContent":["// Copyright (c) Facebook, Inc. and its affiliates.\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nconst textvqaTheme = createMuiTheme({\n    palette: {\n      primary: {\n        light: '#9ccc65',\n        main: '#7cb342',\n        dark: '#33691e',\n        contrastText: '#fff',\n      },\n      secondary: {\n        light: '#ff7961',\n        main: '#f44336',\n        dark: '#ba000d',\n        contrastText: '#000',\n      },\n    },\n    typography: {\n      useNextVariants: true,\n    },\n});\n\nconst textcapsTheme = createMuiTheme({\n    palette: {\n      primary: {\n        light: '#e34257',\n        main: '#b13444',\n        dark: '#9c2d3c',\n        contrastText: '#fff',\n      },\n      secondary: {\n        light: '#ff7961',\n        main: '#f44336',\n        dark: '#ba000d',\n        contrastText: '#000',\n      },\n    },\n    typography: {\n      useNextVariants: true,\n    },\n});\n\nconst theme = window.location.href.indexOf(\"textcaps\") === -1 ? textvqaTheme : textcapsTheme;\n\nexport default theme;\n","// Copyright (c) Facebook, Inc. and its affiliates.\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Link from '@material-ui/core/Link';\nimport { withStyles } from '@material-ui/core';\nimport withMobileDialog from '@material-ui/core/withMobileDialog';\n\nconst styles = (theme) => ({\n    ulList: {\n        margin: '0',\n        '& li': {\n            padding: '0.25em'\n        }\n    }\n});\n\nconst ExploreHelp = (props) => {\n    const { fullScreen } = props;\n    const openImagesUrl = \"https://storage.googleapis.com/openimages/web/download.html\";\n\n    return (\n        <div>\n            <Dialog\n                fullScreen={fullScreen}\n                open={props.open}\n                onClose={props.handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">Using Explore page</DialogTitle>\n                <DialogContent id=\"alert-dialog-description\">\n                    <ul className={props.classes.ulList}>\n                        <li>Bounding boxes show the OCR tokens extracted using the Rosetta OCR system.</li>\n                        <li>You can click on an example to see a more detailed view for it.</li>\n                        <li>OCR boxes on some images might be misaligned as they are rotated in OpenImages.</li>\n                        <li>Some images might not be available on Flickr (404) but should be available\n                            through <Link href={openImagesUrl}>OpenImages</Link>.</li>\n                        <li>The text-fields and dropdowns can be mixed to get results that satisfy each of them.\n                            You can use this functionality to do an \"AND\" over multiple fields.\n                        </li>\n                        <li>Use the <b>'Search in the questions'</b> field to search for a phrase in the questions.\n                        Press <b>'Enter'</b> to get new search results.</li>\n                        <li>\n                            Use the <b>'Choose set'</b> dropdown to select the set/s (train and/or val)\n                            over which you want to limit your search.\n                        </li>\n                        <li>\n                            Use the <b>'Choose classes'</b> dropdown to select one or multiple classes\n                            over which you want to limit your search.\n                        </li>\n                        <li>\n                            Select the checkboxes in <b>'Options'</b> to change settings of your search: (i) Exclude OCR boxes\n                            (ii) Show questions (iii) Show answers.\n                        </li>\n                        <li>\n                            Use the <b>'Search for OCR tokens'</b> field to limit your search to particular OCR tokens.\n                            This field will also provide auto-complete suggestions.\n                        </li>\n                        <li>\n                            Similar to the <b>'Search for OCR tokens'</b> field,\n                            use the <b>'Search for Answers'</b> field to limit your search\n                            to particular answers. This field will also provide auto-complete suggestions.\n                        </li>\n                    </ul>\n                    <br/><br/>\n                    Reach us out at <Link href=\"mailto:textvqa@fb.com\">textvqa@fb.com</Link> for any questions, suggestions and feedback.\n\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\" autoFocus>\n                        Got it!\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n\nexport default withMobileDialog()(withStyles(styles)(ExploreHelp));","// Copyright (c) Facebook, Inc. and its affiliates.\nimport React from 'react';\nimport PropTypes from 'prop-types'\n\nimport { Route, withRouter } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuList from '@material-ui/core/MenuList';\nimport IconButton from '@material-ui/core/IconButton';\nimport Explore from '@material-ui/icons/Explore';\nimport CloudDownload from '@material-ui/icons/CloudDownload';\nimport Help from '@material-ui/icons/Help';\nimport Equalizer from '@material-ui/icons/Equalizer';\nimport Description from '@material-ui/icons/Description';\nimport MoreVert from '@material-ui/icons/MoreVert';\nimport Code from '@material-ui/icons/Code';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport { withStyles } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\nimport theme from '../styles';\n\nimport ExploreHelp from './ExploreHelp';\n\nconst styles = {\n    root: {\n      width: '100%',\n      flexGrow: 1\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    buttonLink: {\n        color: theme['palette']['primary']['contrastText'],\n        textDecoration: 'none'\n    },\n    buttonsSide: {\n        textAlign: 'right'\n    },\n    logo: {\n        height: '50px',\n        verticalAlign: 'middle',\n        [theme.breakpoints.down('sm')]: {\n            height: '35px'\n        }\n    },\n    leftIcon: {\n        marginRight: theme.spacing.unit\n    },\n    sectionDesktop: {\n        display: 'none',\n        [theme.breakpoints.up('md')]: {\n            display: 'flex',\n        },\n    },\n    sectionMobile: {\n        display: 'flex',\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n  };\n\nclass Header extends React.Component {\n    state = {\n        mobileMoreAnchorEl: null,\n        dialogOpen: false\n    };\n\n    handleExploreOpen = () => {\n        this.setState({\n            dialogOpen: true\n        });\n    }\n\n    handleExploreClose = () => {\n        this.setState({\n            dialogOpen: false\n        });\n    }\n\n    handleMobileMenuOpen = event => {\n        this.setState({ mobileMoreAnchorEl: event.currentTarget });\n    };\n\n    handleMobileMenuClose = () => {\n        this.setState({ mobileMoreAnchorEl: null });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { mobileMoreAnchorEl } = this.state;\n        const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n        const isTextVQA = this.props.location.pathname.indexOf(\"textcaps\") === -1;\n\n\n        const helpMobileMenuItem = (\n            <MenuItem onClick={this.handleMobileMenuClose}>\n                <Link\n                    underline=\"none\"\n                    className={[classes.buttonLink, classes.buttonsSide].join(' ')}\n                    onClick={this.handleExploreOpen}\n                >\n                    <Button disableRipple={true} disableFocusRipple={true} color=\"default\">\n                        <Help className={classes.leftIcon} />\n                        Help\n                    </Button>\n                </Link>\n            </MenuItem>\n        );\n\n        const renderMobileMenu = (\n            <Menu\n                anchorEl={mobileMoreAnchorEl}\n                anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n                transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n                open={isMobileMenuOpen}\n                onClose={this.handleMobileMenuClose}\n            >\n                <ClickAwayListener onClickAway={this.handleMobileMenuClose}>\n                    <MenuList>\n                        <Route exact path=\"/type:?/explore\" render={() => helpMobileMenuItem}/>\n                        <MenuItem onClick={this.handleMobileMenuClose}>\n                            <Link\n                                underline=\"none\"\n                                className={[classes.buttonLink, classes.buttonsSide].join(' ')}\n                                href=\"dataset\"\n                            >\n                                <Button disableRipple={true} disableFocusRipple={true} color=\"default\">\n                                    <CloudDownload className={classes.leftIcon}/>\n                                    Dataset\n                                </Button>\n                            </Link>\n                        </MenuItem>\n                        <MenuItem onClick={this.handleMobileMenuClose}>\n                            <Link\n                                underline=\"none\"\n                                className={[classes.buttonLink, classes.buttonsSide].join(' ')}\n                                href=\"challenge\"\n                            >\n                                <Button disableRipple={true} disableFocusRipple={true} color=\"default\">\n                                    <Equalizer className={classes.leftIcon}/>\n                                    Challenge\n                                </Button>\n                            </Link>\n                        </MenuItem>\n                        <MenuItem onClick={this.handleMobileMenuClose}>\n                            <Link\n                                underline=\"none\"\n                                className={[classes.buttonLink, classes.buttonsSide].join(' ')}\n                                href=\"https://arxiv.org/abs/1904.08920\"\n                            >\n                                <Button disableRipple={true} disableFocusRipple={true} color=\"default\">\n                                    <Description className={classes.leftIcon}/>\n                                    Paper\n                                </Button>\n                            </Link>\n                        </MenuItem>\n                        <MenuItem onClick={this.handleMobileMenuClose}>\n                            <Link\n                                underline=\"none\"\n                                className={[classes.buttonLink, classes.buttonsSide].join(' ')}\n                                href=\"https://github.com/facebookresearch/pythia\"\n                            >\n                                <Button disableRipple={true} disableFocusRipple={true} color=\"default\">\n                                    <Code className={classes.leftIcon}/>\n                                    Code\n                                </Button>\n                            </Link>\n                        </MenuItem>\n                        <MenuItem onClick={this.handleMobileMenuClose}>\n                            <Link\n                                underline=\"none\"\n                                className={[classes.buttonLink, classes.buttonsSide].join(' ')}\n                                href=\"explore\"\n                            >\n                                <Button disableRipple={true} disableFocusRipple={true} color=\"default\">\n                                    <Explore className={classes.leftIcon}/>\n                                    Explore\n                                </Button>\n                            </Link>\n                        </MenuItem>\n                    </MenuList>\n                </ClickAwayListener>\n            </Menu>\n        );\n\n        const exploreHelpMenu = (\n            <div>\n                <Link\n                    underline=\"none\"\n                    className={[classes.buttonLink, classes.buttonsSide].join(' ')}\n                    onClick={this.handleExploreOpen}\n                >\n                    <Button disableRipple={true} disableFocusRipple={true} color=\"inherit\">\n                        <Help className={classes.leftIcon} />\n                        Help\n                    </Button>\n                </Link>\n                <ExploreHelp\n                    open={this.state.dialogOpen}\n                    handleClose={this.handleExploreClose}\n                />\n\n            </div>\n        )\n        const classesGrowButton = [classes.buttonLink, classes.grow].join(' ');\n        const classesButton = classes.buttonLink;\n        const textVQALink = (\n            <Link\n                key={isTextVQA ? 0 : 1}\n                underline=\"none\"\n                align=\"left\"\n                className={isTextVQA ? classesButton : classesGrowButton}\n                href={process.env.PUBLIC_URL + '/'}\n                >\n                <img\n                    className={classes.logo}\n                    srcSet=\"/assets/images/textvqa_logo_and_text_white.svg\"\n                    alt=\"TextVQA\"\n                    />\n            </Link>\n\n        );\n\n        const textCapsLink = (\n            <Link\n                key={isTextVQA ? 1 : 0}\n                underline=\"none\"\n                align=\"left\"\n                className={isTextVQA ? classesGrowButton : classesButton}\n                href={process.env.PUBLIC_URL + '/textcaps/'}\n            >\n                <img\n                    className={classes.logo}\n                    srcSet=\"/assets/images/textcaps_logo_and_text_white.svg\"\n                    alt=\"TextCaps\"\n                />\n            </Link>\n\n        )\n        console.log(isTextVQA);\n        return (\n            <div className={classes.root}>\n                <AppBar position=\"static\" color=\"primary\">\n                    <Toolbar>\n                        {\n                            isTextVQA ? textVQALink : textCapsLink\n                        }\n                        {\n                            isTextVQA ? textCapsLink : textVQALink\n                        }\n                        <div className={classes.sectionDesktop}>\n                            <Route exact path=\"/explore\" render={() => exploreHelpMenu}/>\n                            <Link\n                                underline=\"none\"\n                                className={[classes.buttonLink, classes.buttonsSide].join(' ')}\n                                href=\"challenge\"\n                            >\n                                <Button disableRipple={true} disableFocusRipple={true} color=\"inherit\">\n                                    <Equalizer className={classes.leftIcon}/>\n                                    Challenge\n                                </Button>\n                            </Link>\n                            <Link\n                                underline=\"none\"\n                                className={[classes.buttonLink, classes.buttonsSide].join(' ')}\n                                href=\"https://arxiv.org/abs/1904.08920\"\n                            >\n                                <Button disableRipple={true} disableFocusRipple={true} color=\"inherit\">\n                                    <Description className={classes.leftIcon}/>\n                                    Paper\n                                </Button>\n                            </Link>\n                            <Link\n                                underline=\"none\"\n                                className={[classes.buttonLink, classes.buttonsSide].join(' ')}\n                                href=\"https://github.com/facebookresearch/pythia\"\n                            >\n                                <Button disableRipple={true} disableFocusRipple={true} color=\"inherit\">\n                                    <Code className={classes.leftIcon}/>\n                                    Code\n                                </Button>\n                            </Link>\n                            <Link\n                                underline=\"none\"\n                                className={[classes.buttonLink, classes.buttonsSide].join(' ')}\n                                href=\"dataset\"\n                            >\n                                <Button disableRipple={true} disableFocusRipple={true} color=\"inherit\">\n                                    <CloudDownload className={classes.leftIcon}/>\n                                    Dataset\n                                </Button>\n                            </Link>\n                            <Link\n                                underline=\"none\"\n                                className={[classes.buttonLink, classes.buttonsSide].join(' ')}\n                                href=\"explore\"\n                            >\n                                <Button disableRipple={true} disableFocusRipple={true} color=\"inherit\">\n                                    <Explore className={classes.leftIcon}/>\n                                    Explore\n                                </Button>\n                            </Link>\n                        </div>\n                        <div className={classes.sectionMobile}>\n                            <IconButton aria-haspopup=\"true\" onClick={this.handleMobileMenuOpen} color=\"inherit\">\n                                <MoreVert />\n                            </IconButton>\n                        </div>\n                        {renderMobileMenu}\n                    </Toolbar>\n                </AppBar>\n            </div>\n        );\n    }\n}\n\nHeader.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(withRouter(Header));","// Copyright (c) Facebook, Inc. and its affiliates.\nimport React, { Component } from 'react';\n\nclass BoundingBox extends Component {\n    colors = ['#e6194B', '#3cb44b', '#ffe119',\n              '#f032e6', '#9A6324', '#800000', '#42d4f4',\n              '#911eb4'];\n\n    getColor(word) {\n        const char = word.charCodeAt(0);\n        const wordInt = char % this.colors.length;\n        return this.colors[wordInt];\n    }\n\n    fitToContainer(canvas) {\n        // Make it visually fill the positioned parent\n        canvas.style.width ='100%';\n        // ...then set the internal size to match\n        canvas.width  = canvas.offsetWidth;\n    }\n\n    setRotatedCoords = (coords, width, height,\n        centerShiftX, centerShiftY, rotation) => {\n        const x = coords[0];\n        const y = coords[1];\n        let newX = x * width + centerShiftX, newY = y * height + centerShiftY;\n        let newWidth = coords[2] * width, newHeight = coords[3] * height;\n        if (rotation === 270) {\n            newX = (1 - y) * width + centerShiftX;\n            newY = x * height + centerShiftY;\n        } else if (rotation === 180) {\n            newX = (1 - x) * width + centerShiftX;\n            newY = (1 - y) * height + centerShiftY;\n        } else if (rotation === 90) {\n            newX = y * width + centerShiftX;\n            newY = (1 - x) * height + centerShiftY;\n        }\n\n        coords[0] = newX;\n        coords[1] = newY;\n        coords[2] = newWidth;\n        coords[3] = newHeight;\n    }\n\n    componentDidMount = () => {\n        this.renderCanvas()\n    }\n\n    componentDidUpdate = (prevProps) => {\n        if (prevProps.showBoxes === this.props.showBoxes && prevProps.imageUrl === this.props.imageUrl) {\n            return;\n        }\n        this.renderCanvas();\n    }\n\n    renderCanvas = () => {\n\n        const canvas = this.refs.canvas;\n        this.fitToContainer(canvas);\n\n        const ctx = canvas.getContext(\"2d\");\n        const isDialog = this.props.isDialog;\n        const img = new Image();\n        img.src = this.props.imageUrl;\n\n        let rotation = parseInt(this.props.rotation, 10);\n        if (this.props.rotation.length === 0) {\n            rotation = 0;\n        }\n\n        img.onload = () => {\n            const newData = this.drawImageScaled(img, ctx);\n            ctx.globalAlpha = 1.0;\n\n            if (!this.props.showBoxes) {\n                return;\n            }\n            const { centerShiftX, centerShiftY, newWidth, newHeight } = newData;\n            ctx.font = \"12px Roboto bold\";\n\n            if (isDialog) {\n                ctx.font = \"48px Roboto bold\";\n            }\n\n            ctx.fontWeight = \"800\";\n            for(const idx in this.props.boxes) {\n                const box = JSON.parse(JSON.stringify(this.props.boxes[idx]));\n                ctx.beginPath();\n                ctx.fillStyle = this.getColor(box.word);\n                ctx.strokeStyle = ctx.fillStyle;\n                ctx.lineWidth = 2;\n                this.setRotatedCoords(\n                    box.coords,\n                    newWidth,\n                    newHeight,\n                    centerShiftX,\n                    centerShiftY,\n                    rotation\n                )\n\n                const boxRotation = parseInt(box.rotation, 10);\n\n                ctx.rotate(boxRotation * Math.pi / 180);\n                ctx.strokeRect(...box.coords);\n                ctx.rotate(boxRotation * Math.pi / 180);\n\n\n\n                if (isDialog) {\n                    ctx.lineWidth = 0.5;\n                    ctx.strokeRect(box.coords[0], box.coords[1] - 48, ctx.measureText(box.word).width + 15, 48);\n                    ctx.fillStyle = this.getColor(box.word);\n                    ctx.globalAlpha = 0.5;\n                    ctx.rect(box.coords[0], box.coords[1] - 48, ctx.measureText(box.word).width + 15, 48);\n                    ctx.fill();\n                    ctx.fillStyle = \"#000\";\n                    ctx.globalAlpha = 1.0;\n                    ctx.fillText(box.word, box.coords[0] + 6, box.coords[1] - 2);\n                } else {\n                    ctx.lineWidth = 0.5;\n                    ctx.strokeRect(box.coords[0], box.coords[1] - 10, ctx.measureText(box.word).width + 15, 10);\n                    ctx.fillStyle = this.getColor(box.word);\n                    ctx.globalAlpha = 0.5;\n                    ctx.rect(box.coords[0], box.coords[1] - 10, ctx.measureText(box.word).width + 15, 10);\n                    ctx.fill();\n                    ctx.fillStyle = \"#000\";\n                    ctx.globalAlpha = 1.0;\n                    ctx.fillText(box.word, box.coords[0], box.coords[1]);\n                }\n                ctx.closePath();\n            }\n        }\n    }\n\n    drawImageScaled = (img, ctx) => {\n        const canvas = ctx.canvas;\n\n        const hRatio = canvas.width  / img.width;\n\n        const newCHeight = hRatio * img.height;\n        canvas.style.height = newCHeight;\n        canvas.height = newCHeight;\n\n        const vRatio =  canvas.height / img.height;\n        const ratio  = Math.min(hRatio, vRatio);\n        const centerShiftX = (canvas.width - img.width*ratio) / 2;\n        const centerShiftY = (canvas.height - img.height*ratio) / 2;\n\n\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.drawImage(img, 0, 0, img.width, img.height,\n                        centerShiftX, centerShiftY, img.width*ratio,\n                        img.height*ratio);\n\n        if (this.props.showBoxes) {\n            ctx.fillStyle = 'rgba(0, 0, 0, 0.3)';\n            ctx.fillRect(centerShiftX, centerShiftY, img.width*ratio,\n                        img.height*ratio);\n        }\n\n\n        const newWidth = img.width * ratio;\n        const newHeight = img.height * ratio;\n\n        return { centerShiftX, centerShiftY, newWidth, newHeight};\n    }\n\n    render() {\n        return(\n            <p>\n              <canvas ref=\"canvas\" />\n            </p>\n        )\n    }\n}\n\nexport default BoundingBox;","// Copyright (c) Facebook, Inc. and its affiliates.\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport { withStyles } from '@material-ui/core';\nimport Cancel from '@material-ui/icons/Cancel';\n\nimport withMobileDialog from '@material-ui/core/withMobileDialog';\n\nimport BoundingBox from './BoundingBox';\n\nconst styles = (theme) => ({\n    cardContent: {\n        paddingBottom: '4px !important'\n    },\n    card: {\n        padding: theme.spacing.unit * 2,\n        textAlign: 'center'\n    },\n    flickrUrls: {\n        [theme.breakpoints.down('md')]: {\n            fontSize: '0.68em'\n        }\n    }\n});\n\nconst SampleDialog = (props) => {\n    if (!props.result) {\n        return ''\n    }\n\n    return (\n        <div>\n            <Dialog\n                open={props.open}\n                fullWidth={true}\n                maxWidth=\"lg\"\n                onClose={props.handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n\n                <DialogActions>\n                    <Typography className={props.classes.flickrUrls} variant=\"caption\" align=\"left\">\n                        {props.result.flickr_300k_url.length ?\n                            <Link target=\"_blank\" href={props.result.flickr_300k_url}>Flickr Thumbnail</Link> :\n                            ''}\n                        {props.result.flickr_original_url.length ?\n                            <span> | <Link target=\"_blank\" href={props.result.flickr_original_url}>Original</Link>\n                            </span> :\n                            ''}\n                    </Typography>\n                    <Button\n                        size=\"small\"\n                        onClick={props.handleClose}\n                        aria-label=\"Close\"\n                        color=\"primary\"\n                        autoFocus\n                    >\n                        <Cancel />\n                    </Button>\n                </DialogActions>\n                <DialogContent id=\"alert-dialog-description\">\n                    <BoundingBox\n                        showBoxes={props.showOCRBoxes}\n                        isDialog={true}\n                        imageUrl={props.result.flickr_original_url}\n                        boxes={props.boxes}\n                        rotation={props.result.rotation}\n                    />\n                </DialogContent>\n                <DialogTitle id=\"alert-dialog-title\">\n                    <Typography variant=\"subtitle1\" align=\"center\">\n                        {props.result.question}\n                    </Typography>\n                    {\n                        props.maxAnswer.length > 0 ?\n                            <Typography variant=\"caption\" align=\"center\">\n                                {props.maxAnswer}\n                            </Typography> : ''\n                    }\n\n                </DialogTitle>\n\n            </Dialog>\n        </div>\n    );\n}\n\nexport default withMobileDialog()(withStyles(styles)(SampleDialog));","// Copyright (c) Facebook, Inc. and its affiliates.\nimport React, { Component } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core';\nimport withWidth, { isWidthUp } from '@material-ui/core/withWidth';\n\nimport { ReactiveList } from '@appbaseio/reactivesearch';\nimport Grid from '@material-ui/core/Grid'\n\nimport BoundingBox from './BoundingBox';\nimport SampleDialog from './SampleDialog';\nimport { withRouter } from 'react-router-dom';\n\nconst styles = theme => ({\n    gridItem: {\n        padding: theme.spacing.unit * 0.5,\n        position: 'relative',\n        width: '100%',\n        display: 'inline-block'\n    },\n    cardContent: {\n        paddingBottom: '4px !important'\n    },\n    card: {\n        padding: theme.spacing.unit * 2,\n        textAlign: 'center'\n    }\n});\n\nclass Banner extends Component {\n    seed = Math.round(Math.random() * 10000);\n    state = {\n        render: 0,\n        currentDialog: -1\n    };\n    vars = {\n        nChunks: null,\n        originalChunks: [],\n        originalIds: [],\n        originalLen: 0,\n        currentResult: null,\n        currentMaxAnswer: null,\n        currentBoxes: null\n    };\n\n    handleDialogOpen = (data) => {\n        this.vars.currentMaxAnswer = data['currentMaxAnswer'];\n        this.vars.currentBoxes = data['currentBoxes'];\n        this.vars.currentResult = data['currentResult'];\n        this.setState({\n            currentDialog: data['currentDialog']\n        });\n    }\n    handleDialogClose = () => {\n        this.setState({\n            currentDialog: -1\n        });\n    }\n\n    getWidthForColumn = () => {\n        // NOTE: Keep this is in this order.\n        // Smallest key should come first\n        const mapping = {\n            'xs': '100',\n            'sm': '50',\n            'md': '33',\n            'lg': '25'\n        };\n\n        let currentWidth = '100';\n        Object.keys(mapping).forEach((key) => {\n            if (isWidthUp(key, this.props.width)) {\n                currentWidth = mapping[key];\n            }\n        });\n\n        return currentWidth;\n    }\n\n    chunkArray = (arr, nChunks) => {\n        let isNewSearch = false;\n        let uniqueId = \"question_id\";\n\n        if (this.props.match.params.type === \"textcaps\") {\n            uniqueId = \"image_id\";\n        }\n\n        const currentIds = [];\n\n        arr.forEach((element) => {\n            currentIds.push(element[uniqueId]);\n        });\n\n        if (arr.length === 0) {\n            isNewSearch = true\n        } else if (this.vars.originalChunks.length > 0 &&\n            this.vars.originalChunks[0].length > 0 &&\n            (this.vars.originalChunks[0][0][uniqueId] !== arr[0][uniqueId] ||\n            JSON.stringify(this.vars.originalIds) !==\n            JSON.stringify(currentIds.slice(0, this.vars.originalLen)))\n        ) {\n                isNewSearch = true;\n        }\n        if (this.vars.nChunks !== nChunks || isNewSearch) {\n            this.vars.nChunks = nChunks;\n            this.vars.originalChunks = [];\n            this.vars.originalLen = 0;\n            this.seed = Math.round(Math.random() * 10000);\n\n            for(let i = 0; i < nChunks; i++) {\n                this.vars.originalChunks.push([]);\n            }\n        }\n\n        let gap = Math.floor((arr.length - this.vars.originalLen) / nChunks);\n        let index = 0;\n        const chunks = this.vars.originalChunks;\n\n        if (gap === 0) {\n            gap = 1;\n        }\n\n        for(let i = this.vars.originalLen; i < arr.length; i += gap) {\n            if (index === this.vars.nChunks) {\n                index = Math.floor(Math.random() * this.vars.nChunks);\n            }\n            chunks[index] = chunks[index].concat(arr.slice(i, i + gap));\n            index++;\n        }\n\n        this.vars.originalChunks = chunks;\n        this.vars.originalLen = arr.length;\n        this.vars.nChunks = nChunks;\n        this.vars.originalIds = currentIds;\n\n        return chunks;\n    }\n\n    renderCardComponents = (results) => {\n        if (results.length === 0) {\n            return \"\";\n        }\n\n        const finalResults = [...results.results, ...results.streamResults];\n        const colWidth = this.getWidthForColumn();\n        const numChunks = Math.floor(100 / colWidth);\n        const chunks = this.chunkArray(finalResults, numChunks);\n\n        const cardChunks = chunks.map((chunk, idx) => {\n            return chunk.map((result, idx) => {\n                return this.renderCardComponent(result, idx);\n            })\n        });\n\n        const containerChunks = cardChunks.map((chunk, idx) => {\n            return (\n                <div\n                    key={idx + this.seed}\n                    style={{\n                        width: colWidth + '%',\n                        float: 'left'\n                    }}\n                >\n                    {chunk}\n                </div>\n            )\n\n        });\n\n        return (\n            <div>\n                {containerChunks}\n            </div>\n        );\n    }\n\n    getMaxAnswer = (answers) => {\n        const counter = {}\n        if (!answers) {\n            return '';\n        }\n        let maxWord = answers[0];\n        let maxCount = 1;\n\n        for(const idx in answers) {\n            const currentAnswer = answers[idx];\n            if (counter[currentAnswer]) {\n                counter[currentAnswer] += 1;\n            } else {\n                counter[currentAnswer] = 1;\n            }\n\n            if (counter[currentAnswer] > maxCount) {\n                maxCount = counter[currentAnswer];\n                maxWord = currentAnswer;\n            }\n        }\n\n        return maxWord;\n    }\n\n    getMainCardContent = (result) => {\n        if (result.question) {\n            return (\n                <Typography variant=\"subtitle1\">\n                    {result.question}\n                </Typography>\n            );\n        } else {\n            let captions = [];\n            if (result.captions) {\n                result.captions.forEach((caption, idx) => {\n                    captions.push(\n                        <Typography variant=\"subtitle1\" align=\"left\">\n                            {(idx + 1) + \". \" + caption}\n                        </Typography>\n                    );\n                });\n            }\n\n            return captions;\n        }\n    }\n\n    renderCardComponent = (result, cardIdx) => {\n        const boxes = []\n\n        for(const idx in result.ocr_info) {\n            const ocrInfo = result.ocr_info[idx];\n            const x1 = ocrInfo.bounding_box.top_left_x;\n            const y1 = ocrInfo.bounding_box.top_left_y;\n            const width = ocrInfo.bounding_box.width;\n            const height = ocrInfo.bounding_box.height;\n            const box =  {\n                coords: [x1, y1, width, height],\n                rotation: ocrInfo.bounding_box.rotation,\n                word: ocrInfo.word\n            };\n            boxes.push(box)\n        }\n\n        const maxAnswer = this.getMaxAnswer(result.answers);\n        return (\n            <div\n                key={cardIdx + this.seed}\n                className={this.props.classes.gridItem}\n                onClick={() => this.handleDialogOpen({\n                    currentDialog: cardIdx + this.seed,\n                    currentBoxes: boxes,\n                    currentResult: result,\n                    currentMaxAnswer: maxAnswer\n                })}\n            >\n                <Card\n                    key={cardIdx}\n                    className={this.props.classes.card}\n                >\n                    <BoundingBox\n                        showBoxes={this.props.showOCRBoxes}\n                        imageUrl={result.flickr_300k_url}\n                        boxes={boxes}\n                        rotation={result.rotation}\n                    />\n                    <CardContent className={this.props.classes.cardContent}>\n                        {\n                            this.props.showQuestions ? this.getMainCardContent(result) : ''\n                        }\n                        {\n                            this.props.showAnswers && maxAnswer.length > 0 ?\n                            <Typography variant=\"caption\">\n                                {maxAnswer}\n                            </Typography> : ''\n                        }\n                    </CardContent>\n                </Card>\n            </div>\n        )\n    }\n    formatResultsStats = (resultInfo) => {\n        return (\n            <Typography\n                className={this.props.classes.gridItem}\n                component=\"span\"\n                align=\"center\"\n            >\n                {resultInfo.totalResults} results found in {resultInfo.time}ms.<br/>\n                For more information on how to use search, please see \"Help\" in navigation bar.<br/>\n            </Typography>\n        );\n    }\n\n    noResultStats = (resultInfo) => {\n        return (\n            <Typography\n                className={this.props.classes.gridItem}\n                component=\"span\"\n                align=\"center\"\n            >\n                No results found.<br/>\n                For more information on how to use search, please see \"Help\" in navigation bar.<br/>\n            </Typography>\n        );\n    }\n    render() {\n        const { type } = this.props.match.params;\n        let dataField = \"question\";\n\n        if (type === \"textcaps\") {\n            dataField = \"captions\";\n        }\n\n        return (\n            <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                <ReactiveList\n                    componentId=\"result\"\n                    dataField={dataField}\n                    title=\"Results\"\n                    from={0}\n                    size={this.props.size || 25}\n                    renderResultStats={this.formatResultsStats}\n                    pagination={this.props.pagination || false}\n                    showResultStats={this.props.showResultStats}\n                    loader={this.props.loader}\n                    renderNoResults={this.noResultStats}\n                    react={this.props.reactValues}\n                    renderAllData={this.renderCardComponents}\n                    style={this.props.style || {}}\n                />\n                {this.props.dialogEnabled ?\n                    <SampleDialog\n                        maxAnswer={this.vars.currentMaxAnswer}\n                        result={this.vars.currentResult}\n                        showOCRBoxes={this.props.showOCRBoxes}\n                        boxes={this.vars.currentBoxes}\n                        open={this.state.currentDialog !== -1}\n                        handleClose={this.handleDialogClose}\n                    /> : ''\n                }\n            </Grid>\n        );\n    }\n}\n\nexport default withWidth()(withStyles(styles)(withRouter(Banner)));\n","// Copyright (c) Facebook, Inc. and its affiliates.\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Button from '@material-ui/core/Button';\n\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {\n    ReactiveBase, CategorySearch, MultiDropdownList\n} from '@appbaseio/reactivesearch';\nimport Grid from '@material-ui/core/Grid'\n\nimport * as config from '../frontend_config.json';\nimport Banner from './Banner';\nimport { withRouter } from 'react-router';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1\n    },\n    optionsMenuButton: {\n        width: '100%'\n    }\n});\n\nclass Explore extends Component {\n    seed = Math.round(Math.random() * 10000);\n    state = {\n        showOCRBoxes: true,\n        showQuestions: true,\n        showAnswers: true,\n        anchorEl: null\n    };\n\n    reactValues = {\n        and: [\n            \"searchbox\", \"set_name\", \"image_classes\",\n            \"ocr_tokens\", \"answers\"\n        ]\n    }\n\n    replaceBody = (body) => {\n        const { type } = this.props.match.params;\n        body = body.join('\\n');\n        body = body.replace('\"field\":\"set_name\"', '\"field\":\"set_name\"');\n        body = body.replace('\"field\":\"image_classes\"', '\"field\":\"image_classes\"');\n        if (type === \"textcaps\") {\n            body = body.replace('\"field\":\"captions\"', '\"field\":\"captions\"');\n        } else{\n            body = body.replace('\"field\":\"question\"', '\"field\":\"question\"');\n            body = body.replace('\"field\":\"answers\"', '\"field\":\"answers\"');\n        }\n        body = body.replace('\"field\":\"ocr_tokens\"', '\"field\":\"ocr_tokens\"');\n        return body;\n    }\n\n    updateQuery = (query) => {\n        let body = query.body;\n        body = body.split('\\n')\n        let queryParams = JSON.parse(body[1]);\n        queryParams[\"query\"] = {\n            \"function_score\": {\n                \"query\": queryParams[\"query\"],\n                \"random_score\": {\n                    \"seed\": this.seed\n                }\n            }\n        };\n\n        body[1] = JSON.stringify(queryParams)\n        body = this.replaceBody(body);\n        query.body = body;\n        return query;\n    }\n\n    handleCheckboxChange = name => event => {\n        this.setState({ [name]: event.target.checked });\n    };\n\n    handleMenuButtonClick = (event) => {\n        this.setState({ anchorEl: event.currentTarget });\n    }\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    }\n\n    getReactArray = (item) => {\n        const { type } = this.props.match.params;\n\n        let array = [];\n\n        if (type === \"textcaps\") {\n            array = [\"set_name\", \"image_classes\", \"ocr_tokens\", \"captions\"];\n        } else {\n            array = [\"set_name\", \"image_classes\", \"ocr_tokens\", \"question\", \"answer\"];\n        }\n\n        const index = array.indexOf(item);\n        if (index !== -1) {\n            array.splice(index, 1);\n        }\n        return array;\n    }\n\n    render() {\n        const { type } = this.props.match.params;\n        let mainDataField = \"question\";\n        let mainPlaceHolder = \"Search in the questions\";\n        let isTextVQA = true;\n        let showQuestionsPlaceholder = \"Show Questions\";\n\n        if (type === \"textcaps\") {\n            mainDataField = \"captions\";\n            mainPlaceHolder = \"Search in the captions\";\n            isTextVQA = false;\n            showQuestionsPlaceholder = \"Show Captions\";\n            config.index_name = \"textcaps\";\n        }\n\n        return (\n          <ReactiveBase\n            app={config.index_name}\n            url={config.server_url}\n            transformRequest={this.updateQuery}\n          >\n            <Grid\n                container\n                direction=\"row\"\n                className={this.props.classes.root}\n                justify=\"center\"\n                alignItems=\"center\"\n            >\n                <Grid item xs={12} md={6} lg={4}>\n                    <CategorySearch\n                        componentId=\"searchbox\"\n                        dataField={mainDataField}\n                        autosuggest={false}\n                        categoryField={mainDataField}\n                        placeholder={mainPlaceHolder}\n                        debounce={1000}\n                        style={{\n                            padding: \"5px\"\n                        }}\n                        react={{ and: this.getReactArray(mainDataField)}}\n                    />\n                </Grid>\n                <Grid item xs={12} md={2} lg={1}>\n                    <MultiDropdownList\n                        componentId=\"set_name\"\n                        dataField=\"set_name\"\n                        showCount={false}\n                        placeholder=\"Choose set\"\n                        showSearch={false}\n                        react={{ and: this.getReactArray(\"set_name\")}}\n                    />\n                </Grid>\n                <Grid item xs={12} md={2} lg={2}>\n                    <MultiDropdownList\n                        componentId=\"image_classes\"\n                        dataField=\"image_classes\"\n                        placeholder=\"Choose classes\"\n                        showSearch={false}\n                        react={{ and: this.getReactArray(\"image_classes\")}}\n                    />\n                </Grid>\n                <Grid item xs={12} md={2} lg={1}>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={this.props.classes.optionsMenuButton}\n                        aria-owns={this.state.anchorEl ? 'simple-menu' : undefined}\n                        aria-haspopup=\"true\"\n                        onClick={this.handleMenuButtonClick}\n                    >\n                        Options\n                    </Button>\n                    <Menu\n                        anchorEl={this.state.anchorEl}\n                        open={Boolean(this.state.anchorEl)}\n                        onClose={this.handleMenuClose}\n                    >\n                        <MenuItem>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={this.state.showOCRBoxes}\n                                        onChange={this.handleCheckboxChange('showOCRBoxes')}\n                                        value=\"showOCRBoxes\"\n                                    />\n                                }\n                                label=\"Show OCR boxes\">\n                            </FormControlLabel>\n                        </MenuItem>\n                        <MenuItem>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={this.state.showQuestions}\n                                        onChange={this.handleCheckboxChange('showQuestions')}\n                                        value=\"showQuestions\"\n                                    />\n                                }\n                                label={showQuestionsPlaceholder}>\n                            </FormControlLabel>\n                        </MenuItem>\n                        {\n                            isTextVQA ?\n                            <MenuItem>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                        checked={this.state.showAnswers}\n                                        onChange={this.handleCheckboxChange('showAnswers')}\n                                        value=\"showAnswers\"\n                                        />\n                                    }\n                                    label=\"Show answers\">\n                                </FormControlLabel>\n                            </MenuItem> : \"\"\n                        }\n                    </Menu>\n                </Grid>\n                <Grid item xs={12} md={6} lg={2}>\n                    <CategorySearch\n                        componentId=\"ocr_tokens\"\n                        dataField=\"ocr_tokens\"\n                        categoryField=\"ocr_tokens\"\n                        debounce={1400}\n                        placeholder=\"Search for OCR tokens\"\n                        style={{\n                            padding: \"5px\"\n                        }}\n                        react={{ and: this.getReactArray(\"ocr_tokens\")}}\n\n                    />\n                </Grid>\n                {\n                    isTextVQA ?\n                    <Grid item xs={12} md={6} lg={2}>\n                        <CategorySearch\n                            componentId=\"answers\"\n                            dataField=\"answers\"\n                            categoryField=\"answers\"\n                            placeholder=\"Search for Answers\"\n                            debounce={1400}\n                            style={{\n                                padding: \"5px\"\n                            }}\n                            react={{ and: this.getReactArray(\"answers\")}}\n                            />\n                    </Grid> : \"\"\n                }\n                <Banner\n                    showOCRBoxes={this.state.showOCRBoxes}\n                    showAnswers={this.state.showAnswers}\n                    showQuestions={this.state.showQuestions}\n                    reactValues={this.reactValues}\n                    showResultStats={true}\n                    pagination={false}\n                    size={25}\n                    style={{\n                        \"width\": \"90%\",\n                        \"textAlign\": \"center\"\n                    }}\n                    dialogEnabled={true}\n                />\n            </Grid>\n        </ReactiveBase>\n      );\n    }\n}\n\nexport default withStyles(styles)(withRouter(Explore));\n","// Copyright (c) Facebook, Inc. and its affiliates.\nimport React from 'react';\nimport Link from '@material-ui/core/Link';\n\nimport { withStyles, Typography } from \"@material-ui/core\";\nimport * as people from '../people_list.json';\nimport Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid';\n\nconst styles = (theme) => ({\n    avatar: {\n        width: 100,\n        height: 100,\n        margin: '0 auto'\n    },\n    gridItem: {\n        padding: theme.spacing.unit * 2\n    }\n});\n\nconst People = (props) => {\n    let selectedPeople = []\n    let lgSize = 2;\n    if (props.people) {\n        selectedPeople = props.people;\n    } else {\n        selectedPeople = people.people;\n    }\n\n    if (props.lgSize) {\n        lgSize = props.lgSize;\n    }\n\n    const peopleJSX = selectedPeople.map((person) => {\n        const key = Math.random();\n        return (\n            <Grid item key={key} xs={12} sm={6} md={3} lg={lgSize}>\n                <Link target=\"_blank\" rel=\"noopener\" href={person.website}>\n                    <Avatar className={props.classes.avatar} src={person.img_url}/>\n                </Link>\n                <Typography variant=\"subtitle1\">\n                    {person.name}\n                </Typography>\n                <Typography variant=\"caption\">\n                    {person.organization}\n                </Typography>\n            </Grid>\n        )\n    });\n\n    return (\n        <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"flex-start\"\n            spacing={16}\n        >\n            {peopleJSX}\n        </Grid>\n    )\n};\n\n\nexport default withStyles(styles)(People);","// Copyright (c) Facebook, Inc. and its affiliates.\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport Link from '@material-ui/core/Link';\nimport Divider from '@material-ui/core/Divider';\n\nimport Banner from './Banner';\nimport People from './People';\nimport * as news from '../news.json';\nimport * as config from '../frontend_config.json';\nimport { ReactiveBase } from '@appbaseio/reactivesearch';\nimport { withRouter } from 'react-router-dom';\n\n\nconst styles = theme => ({\n    paper: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing.unit * 2,\n        paddingBottom: theme.spacing.unit * 2,\n    },\n    mainContainer: {\n        backgroundImage: 'radial-gradient( ' +\n        theme.palette.primary.light + ' 20% ,' + theme.palette.primary.dark + ' 100%)',\n        opacity: 0.9,\n        height: '50vh'\n    },\n    people: {\n        margin: '0 auto',\n        marginTop: '1.5em'\n    },\n    root: {\n        // flexGrow: 1,\n        // marginTop: '50px'\n    },\n    divider: {\n        color: '#888',\n        width: '100%'\n    },\n    gridItem: {\n        padding: theme.spacing.unit * 1.5\n    },\n    sectionHeader: {\n        marginTop: '0.15em'\n    },\n    ulList: {\n        margin: '0'\n    },\n    container: {\n        padding: theme.spacing.unit * 2,\n    },\n    bannerLogo: {\n        width: '100%'\n    },\n    spanInlineBlock: {\n        display: 'inline'\n    },\n    greenColor: {\n        color: theme.palette.primary.main\n    },\n    hrefGreenColor: {\n        '& a': {\n            color: theme.palette.primary.main,\n            textDecoration: 'none'\n        }\n    },\n    preParent: {\n        backgroundColor: '#eee',\n        border: '1px solid #ddd',\n        borderRadius: '2px',\n        '& pre': {\n            whiteSpace: 'pre-wrap',\n        },\n        '& span': {\n            padding: '1em',\n        },\n        '& code': {\n            fontSize: '12px',\n            color: '#000'\n        }\n    },\n    citationPre: {\n        backgroundColor: '#eee',\n        whiteSpace: 'pre-wrap',\n        wordBreak: 'break-all',\n        padding: '1em'\n    },\n    breakWord: {\n        wordBreak: 'break-all',\n        whiteSpace: 'pre-wrap'\n    }\n});\n\nclass TextVQAContent extends React.Component {\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.root}>\n            <Grid\n                container\n                className={classes.mainContainer}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n                style={{\n                    position: 'relative'\n                }}\n            >\n                <div\n                    style={{\n                        height: '50vh',\n                        backgroundColor: 'rgba(0, 0, 0, 0.4)',\n                        width: '100%',\n                        zIndex: -10,\n                        position: \"absolute\"\n                    }}\n                />\n                <ReactiveBase\n                    app={config.index_name}\n                    url={config.server_url}\n                    transformRequest={this.updateQuery}\n                    style={{\n                        height: '50vh',\n                        overflow: 'auto',\n                        position: 'relative'\n                    }}\n                >\n                    <Banner\n                        showOCRBoxes={true}\n                        showAnswers={true}\n                        showResultStats={false}\n                        showQuestions={true}\n                        reactValues={{}}\n                        pagination={true}\n                        loader=\"\"\n                        size={15}\n                        style={{\n                            height: '50vh',\n                            zIndex: -20,\n                            size: 10,\n                            position: 'absolute',\n                            top: 0,\n                            overflow: 'hidden'\n                        }}\n                    />\n                </ReactiveBase>\n                <Grid\n                    container\n                    style={{\n                        position: 'absolute',\n                        top: 0,\n                        left: 0,\n                        width: '100%',\n                        height: '100%'\n                    }}\n                    justify=\"center\"\n                    alignItems=\"center\"\n                >\n                    <Grid\n                        item\n                        xs={10}\n                        sm={9}\n                        md={8}\n                        lg={6}\n                        style={{\n                            position: 'relative'\n                        }}\n                    >\n                        <Paper className={classes.paper} elevation={1}>\n                            <Grid\n                                container\n                                justify=\"center\"\n                                alignItems=\"center\"\n                            >\n                                <Grid\n                                    item\n                                    xs={10}\n                                    md={8}\n                                    lg={6}\n                                >\n                                    <img\n                                        srcSet=\"assets/images/textvqa_logo_and_text_green.svg\"\n                                        alt=\"TextVQA\"\n                                        className={classes.bannerLogo}\n                                    />\n                                </Grid>\n                            </Grid>\n                            <Typography variant=\"subtitle1\">\n                                A dataset to benchmark visual reasoning based on text in images.\n                                </Typography>\n                            <Grid\n                                style={{\n                                    marginTop: '10px'\n                                }}\n                                container\n                                direction=\"row\"\n                                justify=\"center\"\n                                alignItems=\"center\"\n                                spacing={16}\n                            >\n                                <Grid item xs={6} sm={6} md={3}>\n                                    <Link href=\"explore\">\n                                        <Button variant=\"contained\" color=\"primary\">\n                                            Explore\n                                            </Button>\n                                    </Link>\n                                </Grid>\n                                <Grid item xs={6} sm={6} md={3}>\n                                    <Link href=\"https://arxiv.org/abs/1904.08920\">\n                                        <Button variant=\"contained\" color=\"primary\">\n                                            Paper\n                                            </Button>\n                                    </Link>\n                                </Grid>\n                                <Grid item xs={6} sm={6} md={3}>\n                                    <Link href=\"challenge\">\n                                        <Button variant=\"contained\" color=\"primary\">\n                                            Challenge\n                                            </Button>\n                                    </Link>\n                                </Grid>\n                                <Grid item xs={6} sm={6} md={3}>\n                                    <Link href=\"dataset\">\n                                        <Button variant=\"contained\" color=\"primary\">\n                                            Download\n                                            </Button>\n                                    </Link>\n                                </Grid>\n                            </Grid>\n                        </Paper>\n                    </Grid>\n\n                </Grid>\n            </Grid>\n            <Grid\n                container\n                justify=\"center\"\n                alignContent=\"center\"\n            >\n                <Grid\n                    item\n                    xs={10}\n                    md={8}\n                    lg={7}\n                    className={classes.people}\n                >\n                    <Grid container justify=\"center\" alignContent=\"center\">\n                        <Grid item xs={12} lg={6}>\n                            <Grid container justify=\"flex-start\" spacing={16}>\n                                <Grid item xs={12} className={classes.gridItem}>\n                                    <Typography\n                                        className={classes.sectionHeader}\n                                        variant=\"h4\"\n                                        gutterBottom\n                                        align=\"left\"\n                                    >\n                                        Overview\n                                        </Typography>\n                                </Grid>\n                                <Grid item xs={12} className={classes.gridItem}>\n                                    <Typography\n                                        className={classes.sectionHeader}\n                                        variant=\"subtitle1\"\n                                        gutterBottom\n                                        align=\"left\"\n                                    >\n                                        TextVQA requires models to read and reason about text in images\n                                        to answer questions about them. Specifically, models need to\n                                        incorporate a new modality of text present in the images and\n                                        reason over it to answer TextVQA questions.\n                                            </Typography>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={12} lg={6}>\n                            <Grid container justify=\"flex-start\" spacing={16}>\n                                <Grid item xs={12} className={classes.gridItem}>\n                                    <Typography\n                                        className={classes.sectionHeader}\n                                        variant=\"h4\"\n                                        gutterBottom\n                                        align=\"left\"\n                                    >\n                                        Statistics\n                                        </Typography>\n                                </Grid>\n                            </Grid>\n                            <Grid container justify=\"flex-start\" spacing={16}>\n                                <Grid item xs={12} className={classes.gridItem}>\n                                    <ul>\n                                        <li>\n                                            <Typography variant=\"subtitle1\" align=\"left\">\n                                                28,408 images from OpenImages\n                                            </Typography>\n                                        </li>\n                                        <li>\n                                            <Typography variant=\"subtitle1\" align=\"left\">\n                                                45,336 questions\n                                                </Typography>\n                                        </li>\n                                        <li>\n                                            <Typography variant=\"subtitle1\" align=\"left\">\n                                                453,360 ground truth answers\n                                                </Typography>\n                                        </li>\n                                    </ul>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <div className={classes.people}>\n                        <Grid\n                            container\n                            justify=\"flex-start\"\n                            spacing={16}\n                        >\n                            <Grid item xs={12} className={classes.gridItem}>\n                                <Typography\n                                    className={classes.sectionHeader}\n                                    variant=\"h4\"\n                                    align=\"left\"\n                                >\n                                    News\n                                    </Typography>\n                            </Grid>\n                            <Grid item xs={12} className={classes.gridItem}>\n                                <Typography\n                                    className={classes.sectionHeader}\n                                    variant=\"subtitle1\"\n                                    align=\"left\"\n                                >\n                                    Join our <Link href=\"https://groups.google.com/forum/#!forum/textvqa\">Google Group</Link> for TextVQA release updates and announcements.\n                                    </Typography>\n                            </Grid>\n                            <Grid item xs={12} className={classes.gridItem}>\n                                <ul className={classes.ulList}>\n                                    {news.news.map((obj, idx) => (\n                                        <li key={idx}>\n                                            <Typography\n                                                align=\"left\"\n                                                variant=\"subtitle1\"\n                                            >\n                                                <span>[{obj.date}] </span>\n                                                <span className={classes.hrefGreenColor} dangerouslySetInnerHTML={{ __html: obj.news }} />\n                                            </Typography>\n                                        </li>\n\n                                    ))}\n                                </ul>\n                            </Grid>\n                        </Grid>\n                    </div>\n\n                    <div className={classes.people}>\n                        <Grid\n                            container\n                            justify=\"flex-start\"\n                            spacing={16}\n                        >\n                            <Grid item xs={12} className={classes.gridItem}>\n                                <Typography\n                                    className={classes.sectionHeader}\n                                    variant=\"h4\"\n                                    align=\"left\"\n                                >\n                                    Challenge\n                                    </Typography>\n                            </Grid>\n                            <Grid item xs={12} className={classes.gridItem}>\n                                <Typography\n                                    variant=\"subtitle1\"\n                                    align=\"left\"\n                                >\n                                    TextVQA Challenge 2019 is live! See more details\n                                        on the <Link href=\"challenge\">challenge page</Link>.\n                                    </Typography>\n                            </Grid>\n                        </Grid>\n                    </div>\n                    <div className={classes.people}>\n                        <Grid\n                            container\n                            justify=\"flex-start\"\n                            spacing={16}\n                        >\n                            <Grid item xs={12} className={classes.gridItem}>\n                                <Typography\n                                    className={classes.sectionHeader}\n                                    variant=\"h4\"\n                                    align=\"left\"\n                                >\n                                    Code\n                                    </Typography>\n                            </Grid>\n                            <Grid item xs={12} className={classes.gridItem}>\n                                <Typography\n                                    variant=\"subtitle1\"\n                                    align=\"left\"\n                                    className={classes.breakWord}\n                                >\n                                    Find the starter code for TextVQA and LoRRA\n                                        at <Link href=\"https://github.com/facebookresearch/pythia\">https://github.com/facebookresearch/pythia</Link>.\n                                    </Typography>\n                            </Grid>\n                        </Grid>\n                    </div>\n                    <div className={classes.people}>\n                        <Grid\n                            container\n                            justify=\"flex-start\"\n                            spacing={16}\n                        >\n                            <Grid item xs={12} className={classes.gridItem}>\n                                <Typography\n                                    className={classes.sectionHeader}\n                                    variant=\"h4\"\n                                    align=\"left\"\n                                >\n                                    Citation\n                                    </Typography>\n                            </Grid>\n                            <Grid item xs={12} className={classes.gridItem}>\n                                {/* <Typography\n                                        variant=\"subtitle1\"\n                                        align=\"left\"\n                                        >\n                                        <b>Title</b>: Towards VQA models that can read<br/>\n                                        <b>Authors</b>: Amanpreet Singh, Vivek Natarajan, Meet Shah, Yu Jiang, Xinlei Chen, Dhruv Batra, Devi Parikh, and Marcus Rohrbach<br/>\n                                        <b>Venue</b>: CVPR 2019 (<Link href=\"paper\">Paper</Link>)<br/><br/>\n                                        If you use TextVQA, please cite <Link href=\"bibtex.txt\">\n                                        using this\n                                        </Link>.\n                                    </Typography> */}\n                                <Typography\n                                    variant=\"subtitle1\"\n                                    align=\"left\"\n                                >\n                                    <pre className={classes.citationPre}>\n                                        <code>\n                                            @inproceedings{'{'}singh2019towards,<br />\n                                            &nbsp;&nbsp;&nbsp;&nbsp;title={'{'}Towards VQA Models That Can Read},<br />\n                                            &nbsp;&nbsp;&nbsp;&nbsp;author={'{'}Singh, Amanpreet and Natarjan, Vivek and Shah, Meet and Jiang, Yu and Chen, Xinlei and Parikh, Devi and Rohrbach, Marcus},<br />\n                                            &nbsp;&nbsp;&nbsp;&nbsp;booktitle={'{'}Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition},<br />\n                                            &nbsp;&nbsp;&nbsp;&nbsp;pages={'{'}8317-8326},<br />\n                                            &nbsp;&nbsp;&nbsp;&nbsp;year={'{'}2019}<br />\n                                            }\n                                            </code>\n                                    </pre>\n                                    or use this <Link href=\"bibtex.txt\">link</Link>.\n                                    </Typography>\n                                <br />\n                                {/* <Typography component=\"span\" align=\"left\" className={classes.preParent}>\n                                        <Typography component=\"pre\" dangerouslySetInnerHTML={{\n                                            __html: '@InProceedings{singh2019textvqa, \\n\\ttitle={Towards VQA models that can read},' +\n                                                    '\\n\\tauthor={Singh, Amanpreet and Natarajan, Vivek and Shah, Meet and Jiang, Yu ' +\n                                                    'and Chen, Xinlei and Batra, Dhruv and Parikh, Devi and Rohrbach, Marcus},' +\n                                                    '\\n\\tbooktitle = {The IEEE Conference on Computer Vision and Pattern Recognition ' +\n                                                    '(CVPR)}, \\n\\tyear = {2019}\\n}'\n                                        }} />\n                                    </Typography> */}\n                            </Grid>\n                        </Grid>\n                    </div>\n\n                    <div className={classes.people}>\n                        <Grid container justify=\"flex-start\" spacing={16}>\n                            <Grid item xs={12} className={classes.gridItem}>\n                                <Typography\n                                    className={classes.sectionHeader}\n                                    variant=\"h4\"\n                                    align=\"left\"\n                                >\n                                    People\n                                    </Typography>\n                            </Grid>\n                        </Grid>\n                        <div className={classes.container} />\n                        <People />\n                    </div>\n                    <div className={classes.people}>\n                        <Grid container justify=\"flex-start\" spacing={16}>\n                            <Grid item xs={12} className={classes.gridItem}>\n                                <Typography\n                                    className={classes.sectionHeader}\n                                    variant=\"h4\"\n                                    align=\"left\"\n                                >\n                                    Contact\n                                    </Typography>\n                            </Grid>\n                            <Grid item xs={12} className={classes.gridItem}>\n                                <Typography\n                                    variant=\"subtitle1\"\n                                    align=\"left\"\n                                >\n                                    Reach us out at <Link href=\"mailto:textvqa@fb.com\">textvqa@fb.com</Link> for any questions, suggestions and feedback.\n                                    </Typography>\n\n                            </Grid>\n                        </Grid>\n\n                    </div>\n\n                    <Divider className={classes.people} />\n                    <Grid\n                        container\n                        justify=\"flex-start\"\n                        alignContent=\"center\"\n                        spacing={16}\n                        className={classes.sectionHeader}\n                    >\n                        <Grid item xs={6} md={6} lg={4}>\n                            <Link href=\"https://research.fb.com/category/facebook-ai-research/\">\n                                <img\n                                    className={classes.bannerLogo}\n                                    style={{\n                                        marginTop: '5%'\n                                    }}\n                                    srcSet=\"/assets/images/fair_logo.png\"\n                                    alt=\"Facebook Artificial Intelligence Research\"\n                                />\n                            </Link>\n                        </Grid>\n                        <Grid item xs={3} md={3} lg={2}>\n                            <Link href=\"https://www.gatech.edu/\">\n                                <img\n                                    className={classes.bannerLogo}\n                                    srcSet=\"/assets/images/gt_logo.png\"\n                                    alt=\"Georgia Tech\"\n                                />\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </Grid>\n\n            </Grid>\n        </div>\n        );\n    }\n}\n\nclass TextCapsContent extends React.Component {\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.root}>\n            <Grid\n                container\n                className={classes.mainContainer}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n                style={{\n                    position: 'relative'\n                }}\n            >\n                <div\n                    style={{\n                        height: '50vh',\n                        backgroundColor: 'rgba(0, 0, 0, 0.4)',\n                        width: '100%',\n                        zIndex: -10,\n                        position: \"absolute\"\n                    }}\n                />\n                <ReactiveBase\n                    app=\"textcaps\"\n                    url={config.server_url}\n                    transformRequest={this.updateQuery}\n                    style={{\n                        height: '50vh',\n                        overflow: 'auto',\n                        position: 'relative'\n                    }}\n                >\n                    <Banner\n                        showOCRBoxes={true}\n                        showAnswers={true}\n                        showResultStats={false}\n                        showQuestions={true}\n                        reactValues={{}}\n                        pagination={true}\n                        loader=\"\"\n                        size={15}\n                        style={{\n                            height: '50vh',\n                            zIndex: -20,\n                            size: 10,\n                            position: 'absolute',\n                            top: 0,\n                            overflow: 'hidden'\n                        }}\n                    />\n                </ReactiveBase>\n                <Grid\n                    container\n                    style={{\n                        position: 'absolute',\n                        top: 0,\n                        left: 0,\n                        width: '100%',\n                        height: '100%'\n                    }}\n                    justify=\"center\"\n                    alignItems=\"center\"\n                >\n                    <Grid\n                        item\n                        xs={10}\n                        sm={9}\n                        md={8}\n                        lg={6}\n                        style={{\n                            position: 'relative'\n                        }}\n                    >\n                        <Paper className={classes.paper} elevation={1}>\n                            <Grid\n                                container\n                                justify=\"center\"\n                                alignItems=\"center\"\n                            >\n                                <Grid\n                                    item\n                                    xs={10}\n                                    md={8}\n                                    lg={6}\n                                >\n                                    <img\n                                        srcSet=\"/assets/images/textcaps_logo_and_text.svg\"\n                                        alt=\"TextVQA\"\n                                        className={classes.bannerLogo}\n                                    />\n                                </Grid>\n                            </Grid>\n                            <Typography variant=\"subtitle1\">\n                                A dataset to benchmark visual reasoning based on text in images.\n                                </Typography>\n                            <Grid\n                                style={{\n                                    marginTop: '10px'\n                                }}\n                                container\n                                direction=\"row\"\n                                justify=\"center\"\n                                alignItems=\"center\"\n                                spacing={16}\n                            >\n                                <Grid item xs={6} sm={6} md={3}>\n                                    <Link href=\"explore\">\n                                        <Button variant=\"contained\" color=\"primary\">\n                                            Explore\n                                            </Button>\n                                    </Link>\n                                </Grid>\n                                <Grid item xs={6} sm={6} md={3}>\n                                    <Link href=\"https://arxiv.org/abs/1904.08920\">\n                                        <Button variant=\"contained\" color=\"primary\">\n                                            Paper\n                                            </Button>\n                                    </Link>\n                                </Grid>\n                                <Grid item xs={6} sm={6} md={3}>\n                                    <Link href=\"challenge\">\n                                        <Button variant=\"contained\" color=\"primary\">\n                                            Challenge\n                                            </Button>\n                                    </Link>\n                                </Grid>\n                                <Grid item xs={6} sm={6} md={3}>\n                                    <Link href=\"dataset\">\n                                        <Button variant=\"contained\" color=\"primary\">\n                                            Download\n                                            </Button>\n                                    </Link>\n                                </Grid>\n                            </Grid>\n                        </Paper>\n                    </Grid>\n\n                </Grid>\n            </Grid>\n            <Grid\n                container\n                justify=\"center\"\n                alignContent=\"center\"\n            >\n                <Grid\n                    item\n                    xs={10}\n                    md={8}\n                    lg={7}\n                    className={classes.people}\n                >\n                    <Grid container justify=\"center\" alignContent=\"center\">\n                        <Grid item xs={12} lg={6}>\n                            <Grid container justify=\"flex-start\" spacing={16}>\n                                <Grid item xs={12} className={classes.gridItem}>\n                                    <Typography\n                                        className={classes.sectionHeader}\n                                        variant=\"h4\"\n                                        gutterBottom\n                                        align=\"left\"\n                                    >\n                                        Overview\n                                        </Typography>\n                                </Grid>\n                                <Grid item xs={12} className={classes.gridItem}>\n                                    <Typography\n                                        className={classes.sectionHeader}\n                                        variant=\"subtitle1\"\n                                        gutterBottom\n                                        align=\"left\"\n                                    >\n                                        TextVQA requires models to read and reason about text in images\n                                        to answer questions about them. Specifically, models need to\n                                        incorporate a new modality of text present in the images and\n                                        reason over it to answer TextVQA questions.\n                                            </Typography>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={12} lg={6}>\n                            <Grid container justify=\"flex-start\" spacing={16}>\n                                <Grid item xs={12} className={classes.gridItem}>\n                                    <Typography\n                                        className={classes.sectionHeader}\n                                        variant=\"h4\"\n                                        gutterBottom\n                                        align=\"left\"\n                                    >\n                                        Statistics\n                                        </Typography>\n                                </Grid>\n                            </Grid>\n                            <Grid container justify=\"flex-start\" spacing={16}>\n                                <Grid item xs={12} className={classes.gridItem}>\n                                    <ul>\n                                        <li>\n                                            <Typography variant=\"subtitle1\" align=\"left\">\n                                                28,408 images from OpenImages\n                                            </Typography>\n                                        </li>\n                                        <li>\n                                            <Typography variant=\"subtitle1\" align=\"left\">\n                                                45,336 questions\n                                                </Typography>\n                                        </li>\n                                        <li>\n                                            <Typography variant=\"subtitle1\" align=\"left\">\n                                                453,360 ground truth answers\n                                                </Typography>\n                                        </li>\n                                    </ul>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <div className={classes.people}>\n                        <Grid\n                            container\n                            justify=\"flex-start\"\n                            spacing={16}\n                        >\n                            <Grid item xs={12} className={classes.gridItem}>\n                                <Typography\n                                    className={classes.sectionHeader}\n                                    variant=\"h4\"\n                                    align=\"left\"\n                                >\n                                    News\n                                    </Typography>\n                            </Grid>\n                            <Grid item xs={12} className={classes.gridItem}>\n                                <Typography\n                                    className={classes.sectionHeader}\n                                    variant=\"subtitle1\"\n                                    align=\"left\"\n                                >\n                                    Join our <Link href=\"https://groups.google.com/forum/#!forum/textvqa\">Google Group</Link> for TextVQA release updates and announcements.\n                                    </Typography>\n                            </Grid>\n                            <Grid item xs={12} className={classes.gridItem}>\n                                <ul className={classes.ulList}>\n                                    {news.news.map((obj, idx) => (\n                                        <li key={idx}>\n                                            <Typography\n                                                align=\"left\"\n                                                variant=\"subtitle1\"\n                                            >\n                                                <span>[{obj.date}] </span>\n                                                <span className={classes.hrefGreenColor} dangerouslySetInnerHTML={{ __html: obj.news }} />\n                                            </Typography>\n                                        </li>\n\n                                    ))}\n                                </ul>\n                            </Grid>\n                        </Grid>\n                    </div>\n\n                    <div className={classes.people}>\n                        <Grid\n                            container\n                            justify=\"flex-start\"\n                            spacing={16}\n                        >\n                            <Grid item xs={12} className={classes.gridItem}>\n                                <Typography\n                                    className={classes.sectionHeader}\n                                    variant=\"h4\"\n                                    align=\"left\"\n                                >\n                                    Challenge\n                                    </Typography>\n                            </Grid>\n                            <Grid item xs={12} className={classes.gridItem}>\n                                <Typography\n                                    variant=\"subtitle1\"\n                                    align=\"left\"\n                                >\n                                    TextVQA Challenge 2019 is live! See more details\n                                        on the <Link href=\"challenge\">challenge page</Link>.\n                                    </Typography>\n                            </Grid>\n                        </Grid>\n                    </div>\n                    <div className={classes.people}>\n                        <Grid\n                            container\n                            justify=\"flex-start\"\n                            spacing={16}\n                        >\n                            <Grid item xs={12} className={classes.gridItem}>\n                                <Typography\n                                    className={classes.sectionHeader}\n                                    variant=\"h4\"\n                                    align=\"left\"\n                                >\n                                    Code\n                                    </Typography>\n                            </Grid>\n                            <Grid item xs={12} className={classes.gridItem}>\n                                <Typography\n                                    variant=\"subtitle1\"\n                                    align=\"left\"\n                                    className={classes.breakWord}\n                                >\n                                    Find the starter code for TextVQA and LoRRA\n                                        at <Link href=\"https://github.com/facebookresearch/pythia\">https://github.com/facebookresearch/pythia</Link>.\n                                    </Typography>\n                            </Grid>\n                        </Grid>\n                    </div>\n                    <div className={classes.people}>\n                        <Grid\n                            container\n                            justify=\"flex-start\"\n                            spacing={16}\n                        >\n                            <Grid item xs={12} className={classes.gridItem}>\n                                <Typography\n                                    className={classes.sectionHeader}\n                                    variant=\"h4\"\n                                    align=\"left\"\n                                >\n                                    Citation\n                                    </Typography>\n                            </Grid>\n                            <Grid item xs={12} className={classes.gridItem}>\n                                {/* <Typography\n                                        variant=\"subtitle1\"\n                                        align=\"left\"\n                                        >\n                                        <b>Title</b>: Towards VQA models that can read<br/>\n                                        <b>Authors</b>: Amanpreet Singh, Vivek Natarajan, Meet Shah, Yu Jiang, Xinlei Chen, Dhruv Batra, Devi Parikh, and Marcus Rohrbach<br/>\n                                        <b>Venue</b>: CVPR 2019 (<Link href=\"paper\">Paper</Link>)<br/><br/>\n                                        If you use TextVQA, please cite <Link href=\"bibtex.txt\">\n                                        using this\n                                        </Link>.\n                                    </Typography> */}\n                                <Typography\n                                    variant=\"subtitle1\"\n                                    align=\"left\"\n                                >\n                                    <pre className={classes.citationPre}>\n                                        <code>\n                                            @inproceedings{'{'}singh2019towards,<br />\n                                            &nbsp;&nbsp;&nbsp;&nbsp;title={'{'}Towards VQA Models That Can Read},<br />\n                                            &nbsp;&nbsp;&nbsp;&nbsp;author={'{'}Singh, Amanpreet and Natarjan, Vivek and Shah, Meet and Jiang, Yu and Chen, Xinlei and Parikh, Devi and Rohrbach, Marcus},<br />\n                                            &nbsp;&nbsp;&nbsp;&nbsp;booktitle={'{'}Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition},<br />\n                                            &nbsp;&nbsp;&nbsp;&nbsp;pages={'{'}8317-8326},<br />\n                                            &nbsp;&nbsp;&nbsp;&nbsp;year={'{'}2019}<br />\n                                            }\n                                            </code>\n                                    </pre>\n                                    or use this <Link href=\"bibtex.txt\">link</Link>.\n                                    </Typography>\n                                <br />\n                                {/* <Typography component=\"span\" align=\"left\" className={classes.preParent}>\n                                        <Typography component=\"pre\" dangerouslySetInnerHTML={{\n                                            __html: '@InProceedings{singh2019textvqa, \\n\\ttitle={Towards VQA models that can read},' +\n                                                    '\\n\\tauthor={Singh, Amanpreet and Natarajan, Vivek and Shah, Meet and Jiang, Yu ' +\n                                                    'and Chen, Xinlei and Batra, Dhruv and Parikh, Devi and Rohrbach, Marcus},' +\n                                                    '\\n\\tbooktitle = {The IEEE Conference on Computer Vision and Pattern Recognition ' +\n                                                    '(CVPR)}, \\n\\tyear = {2019}\\n}'\n                                        }} />\n                                    </Typography> */}\n                            </Grid>\n                        </Grid>\n                    </div>\n\n                    <div className={classes.people}>\n                        <Grid container justify=\"flex-start\" spacing={16}>\n                            <Grid item xs={12} className={classes.gridItem}>\n                                <Typography\n                                    className={classes.sectionHeader}\n                                    variant=\"h4\"\n                                    align=\"left\"\n                                >\n                                    People\n                                    </Typography>\n                            </Grid>\n                        </Grid>\n                        <div className={classes.container} />\n                        <People />\n                    </div>\n                    <div className={classes.people}>\n                        <Grid container justify=\"flex-start\" spacing={16}>\n                            <Grid item xs={12} className={classes.gridItem}>\n                                <Typography\n                                    className={classes.sectionHeader}\n                                    variant=\"h4\"\n                                    align=\"left\"\n                                >\n                                    Contact\n                                    </Typography>\n                            </Grid>\n                            <Grid item xs={12} className={classes.gridItem}>\n                                <Typography\n                                    variant=\"subtitle1\"\n                                    align=\"left\"\n                                >\n                                    Reach us out at <Link href=\"mailto:textvqa@fb.com\">textvqa@fb.com</Link> for any questions, suggestions and feedback.\n                                    </Typography>\n\n                            </Grid>\n                        </Grid>\n\n                    </div>\n\n                    <Divider className={classes.people} />\n                    <Grid\n                        container\n                        justify=\"flex-start\"\n                        alignContent=\"center\"\n                        spacing={16}\n                        className={classes.sectionHeader}\n                    >\n                        <Grid item xs={6} md={6} lg={4}>\n                            <Link href=\"https://research.fb.com/category/facebook-ai-research/\">\n                                <img\n                                    className={classes.bannerLogo}\n                                    style={{\n                                        marginTop: '5%'\n                                    }}\n                                    srcSet=\"/assets/images/fair_logo.png\"\n                                    alt=\"Facebook Artificial Intelligence Research\"\n                                />\n                            </Link>\n                        </Grid>\n                        <Grid item xs={3} md={3} lg={2}>\n                            <Link href=\"https://www.gatech.edu/\">\n                                <img\n                                    className={classes.bannerLogo}\n                                    srcSet=\"/assets/images/gt_logo.png\"\n                                    alt=\"Georgia Tech\"\n                                />\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </Grid>\n\n            </Grid>\n        </div>\n        );\n    }\n}\nclass Home extends React.Component {\n    state = {\n        checked: false\n    }\n\n    updateQuery = (query) => {\n        let body = query.body;\n        body = body.split('\\n')\n        let queryParams = JSON.parse(body[1]);\n        queryParams[\"query\"] = {\n            \"function_score\": {\n                \"query\": queryParams[\"query\"],\n                \"random_score\": {\n                    \"seed\": this.seed\n                }\n            }\n        };\n\n        body[1] = JSON.stringify(queryParams)\n        body = body.join('\\n');\n        body = body.replace('\"field\":\"set_name\"', '\"field\":\"set_name.keyword\"');\n        body = body.replace('\"field\":\"image_classes\"', '\"field\":\"image_classes.keyword\"');\n        query.body = body;\n\n        return query;\n    }\n\n\n    render() {\n        const type = this.props.match.params.type;\n        let Content = withStyles(styles)(TextVQAContent);\n\n        if (type === \"textcaps\") {\n            Content = withStyles(styles)(TextCapsContent);\n        }\n        return <Content/>;\n    }\n}\n\nHome.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(withRouter(Home));","// Copyright (c) Facebook, Inc. and its affiliates.\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport Countdown from 'react-countdown-now';\nimport Link from '@material-ui/core/Link';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { withStyles } from '@material-ui/core';\n\nimport People from './People';\nimport * as challengePeople from '../challenge_people.json';\n\nimport moment from 'moment-timezone';\n\nconst Completionist = () => <span>Challenge has completed!</span>\n\nconst renderer = ({ days, hours, minutes, seconds, completed }) => {\n    if (completed) {\n        // Render a completed state\n        return <Completionist />;\n    } else {\n        // Render a countdown\n        return <span>{days} days {hours}h {minutes}m {seconds}s</span>;\n    }\n};\n\nconst styles = (theme) => ({\n    title: {\n        marginTop: '3em'\n    },\n    overview: {\n        marginTop: '2em'\n    },\n    headings: {\n        marginTop: '1em'\n    },\n    ulItems: {\n        paddingLeft: '1.2em'\n    },\n    preParent: {\n        backgroundColor: '#eee',\n        border: '1px solid #ddd',\n        borderRadius: '2px',\n        '& pre': {\n            whiteSpace: 'pre-wrap',\n        },\n        '& span': {\n            padding: '1em',\n        },\n        '& code': {\n            fontSize: '12px',\n            color: '#000'\n        }\n    },\n    evalAILink: {\n        wordBreak: 'break-word'\n    },\n    teaserImage: {\n        width: '100%',\n    },\n    spanTypography: {\n        display: 'inline-block'\n    },\n    bannerLogo: {\n        width: '100%'\n    },\n    sectionHeader: {\n        marginTop: '0.35em'\n    },\n    evalaiLogo: {\n        marginLeft: '-3px'\n    }\n});\n\nconst Challenge = (props) => {\n    const submissionFormat = [\n        {\n            'question_id': 'INT',\n            'answer': 'STRING'\n        }, {\n            'question_id': '...',\n            'answer': '...'\n        }\n    ];\n    const sampleJSONLink = \"https://drive.google.com/file/d/1KpDGPUKILomUZY37b0N5urfMjF60eHNf/view?usp=sharing\";\n    const evaluationInfoLink = \"https://visualqa.org/evaluation.html\";\n    const sceneTextVQALink = \"https://rrc.cvc.uab.es/?ch=11\";\n    const deadline = moment.tz(\"2019-05-27T23:59:59\", \"Etc/GMT\").toDate();\n    return (\n        <Grid\n            container\n            justify=\"center\"\n            alignItems=\"center\"\n        >\n            <Grid\n                item\n                xs={10}\n                md={8}\n                lg={7}\n            >\n                <Grid\n                    container\n                    justify=\"flex-start\"\n                    alignItems=\"flex-start\"\n                    spacing={16}\n                >\n                    <Grid item className={props.classes.title} xs={12}>\n                        <Typography variant=\"h3\" align=\"left\">\n                            TextVQA Challenge 2019\n                        </Typography>\n                    </Grid>\n                    <br/>\n                    <Grid item className={props.classes.versionNumber} xs={12}>\n                        <Typography variant=\"h4\" align=\"left\">\n                            Deadline: <Countdown date={deadline} renderer={renderer} />\n                        </Typography>\n                        <Divider />\n                    </Grid>\n                    <Grid item className={props.classes.versionNumber} xs={12}>\n                        <Grid container>\n                            <Grid item xs={6} sm={4} lg={2}>\n                                <Typography variant=\"h5\" align=\"left\">\n                                    Powered by:\n                                    <Link target=\"_blank\" href=\"https://evalai.cloudcv.org/web/challenges/challenge-page/244/\">\n                                        <img\n                                            className={props.classes.bannerLogo + \" \" + props.classes.evalaiLogo}\n                                            srcSet=\"assets/images/evalai_logo.png\"\n                                            alt=\"EvalAI\"\n                                        />\n                                    </Link>\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item className={props.classes.overview} xs={12} md={8} lg={8}>\n                        <Typography variant=\"h4\" align=\"left\">\n                            Overview\n                        </Typography>\n\n                        <Typography variant=\"subtitle1\" className={props.classes.headings}  align=\"left\">\n                        TextVQA requires models to read and reason about text in an image to answer questions based on them.\n                        In order to perform well on this task, models need to first detect and read text in the images.\n                        Models then need to reason about this to answer the question.\n                        </Typography>\n                        <Typography variant=\"subtitle1\" className={props.classes.headings} align=\"left\">\n                        Current state-of-the-art models fail to answer questions in TextVQA because they do not\n                        have text reading and reasoning capabilities.\n                        See the examples in the image to compare ground truth answers and\n                        corresponding predictions by a state-of-the-art model.\n                        </Typography>\n                        <Typography variant=\"subtitle1\" className={props.classes.headings} align=\"left\">\n                            Challenge\n                            link: <Link\n                                className={props.classes.evalAILink}\n                                href=\"https://evalai.cloudcv.org/web/challenges/challenge-page/244/\">\n                            https://evalai.cloudcv.org/web/challenges/challenge-page/244/</Link>\n                        </Typography>\n                    </Grid>\n                    <Grid item className={props.classes.title} xs={12} md={4} lg={4}>\n                        <img className={props.classes.teaserImage} srcSet=\"assets/images/teaser.png\" alt=\"Teaser\"/>\n                    </Grid>\n                    <Grid item style={{marginTop: 0}} className={props.classes.headings} xs={12}>\n                        <Typography variant=\"h4\" align=\"left\">\n                        Starter Code\n                        </Typography>\n                    </Grid>\n                    <Grid item className={props.classes.versionNumber} xs={12} md={8} lg={8}>\n                        <Typography variant=\"subtitle1\" align=\"left\">\n                        The starter code for TextVQA challenge is available in <Link href=\"https://github.com/facebookresearch/pythia/\">\n                         Pythia\n                        </Link>. Tutorial on how to submit a submission using <Link href=\"https://arxiv.org/pdf/1904.08920\">LoRRA</Link> model is\n                        available in <Link href=\"https://learnpythia.readthedocs.io/en/latest/tutorials/challenge.html\">documentation</Link>. LoRRA\n                        can be easily plugged to any VQA model to add text reading capabilities.\n                        </Typography>\n                    </Grid>\n                    <Grid item className={props.classes.headings} xs={12}>\n                        <Typography variant=\"h4\" align=\"left\">\n                        Prizes\n                        </Typography>\n                    </Grid>\n                    <Grid item className={props.classes.versionNumber} xs={12} md={8} lg={8}>\n                        <Typography variant=\"subtitle1\" align=\"left\">\n                        The winning team gets <Link href=\"https://cloud.google.com/\">\n                         Google Cloud Platform (GCP)\n                        </Link> credits worth $10k. Thank you for the generosity GCP!\n                        </Typography>\n                    </Grid>\n                    <Grid item className={props.classes.headings} xs={12}>\n                        <Typography variant=\"h4\" align=\"left\">\n                        Dates\n                        </Typography>\n                    </Grid>\n                    <Grid item className={props.classes.versionNumber} xs={12} md={8} lg={8}>\n                        <Typography variant=\"subtitle1\" align=\"left\">\n                            <Typography component=\"span\" className={props.classes.spanTypography} color=\"primary\">\n                                4 March 2019\n                            </Typography> &mdash; Challenge announced.\n                        </Typography>\n                        <Typography variant=\"subtitle1\" align=\"left\">\n                            <Typography component=\"span\" className={props.classes.spanTypography} color=\"primary\">\n                                27 May 2019 (23:59:59 GMT)\n                            </Typography> &mdash; Submission deadline for participants.\n                        </Typography>\n                        <Typography variant=\"subtitle1\" align=\"left\">\n                            <Typography component=\"span\" className={props.classes.spanTypography} color=\"primary\">\n                                17 June 2019\n                            </Typography> &mdash; Winners' announcment at the <Link href=\"https://visualqa.org/workshop.html\">\n                                Visual Question Answering and Dialog Workshop, CVPR 2019</Link>.\n                        </Typography>\n                        <br/>\n                        <Typography variant=\"subtitle1\" align=\"left\">\n                         Winners will be invited to give a short talk at the workshop. <br/>\n                        For questions about the challenge,\n                        visit challenge's <Link href=\"https://evalai-forum.cloudcv.org/c/text-vqa-2019\">discussion board</Link>,\n                        join our <Link href=\"https://groups.google.com/forum/#!forum/textvqa\">Google Group</Link> or\n                        email us at <Link href=\"mailto:textvqa@fb.com\">\n                        textvqa@fb.com\n                        </Link>\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Divider/>\n                    </Grid>\n                    <Grid item className={props.classes.headings} xs={12}>\n                        <Typography variant=\"h4\" align=\"left\">\n                        Dataset Description\n                        </Typography>\n                    </Grid>\n                    <Grid item className={props.classes.versionNumber} xs={12} md={12} lg={12}>\n                        <Typography variant=\"subtitle1\" align=\"left\">\n                        You can find a detailed description and the download links for the dataset at the <Link href=\"dataset\">download</Link> page.\n                        </Typography>\n                        <br/>\n                        <Typography variant=\"subtitle1\" align=\"left\">\n                        The challenge will be conducted on v0.5 of the <Link href=\"dataset\">TextVQA dataset</Link>, which is\n                        based on <Link href=\"https://storage.googleapis.com/openimages/web/index.html\">OpenImages</Link>.\n                        <br/>\n                        TextVQA v0.5 contains 45,336 questions based on 28,408 images. The v0.5 training set contains 34,602 questions\n                            based on 21,953 images from OpenImages' training set. The v0.5 validation set contains 5,000 questions based on\n                            3,166 images from OpenImages' training set while the v0.5 test-std set contains 5,734 questions based on 3,289\n                            images from OpenImages' test set.\n                        </Typography>\n                        <br/>\n                        <Typography variant=\"subtitle1\" align=\"left\">\n                        {/* <b>LoRRA</b> model provided in our paper uses OCR tokens extracted via Rosetta system used inside Facebook.\n                        As the gap between upper bound of accuracy that can be achieved using OCR tokens from Rosetta\n                        and LoRRA's accuracy is large, we provide these OCR tokens also as part of our dataset in belief\n                        that these tokens will help in pushing state-of-the-art on TextVQA. */}\n                        To allow easier adoption, we also provide OCR tokens extracted\n                        using <Link href=\"https://code.fb.com/ai-research/rosetta-understanding-text-in-images-and-videos-with-machine-learning/\">Rosetta</Link>.\n                        Participants are free to use these OCR tokens\n                        and/or use other systems/ways to read/understand\n                        the text in the images.\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Divider />\n                    </Grid>\n                    <Grid item className={props.classes.headings} xs={12}>\n                        <Typography variant=\"h4\" align=\"left\">\n                        Participation Guidelines\n                        </Typography>\n                    </Grid>\n                    <Grid item className={props.classes.versionNumber} xs={12} md={12} lg={12}>\n                        <Typography variant=\"subtitle1\" align=\"left\">\n                        Teams must register on <Link href=\"https://evalai.cloudcv.org/\">EvalAI</Link> and create a team\n                        for the challenge (<Link href=\"https://evalai.readthedocs.io/en/latest/participate.html\">Quickstart</Link>)\n                        <br/>\n                            The challenge page is available at: <Link\n                                className={props.classes.evalAILink}\n                                href=\"https://evalai.cloudcv.org/web/challenges/challenge-page/244/\">\n                            https://evalai.cloudcv.org/web/challenges/challenge-page/244/</Link>\n                        </Typography>\n                        <Typography variant=\"subtitle1\" align=\"left\">\n                        Challenge has two phases:\n                        </Typography>\n                    </Grid>\n                    <Grid item className={props.classes.versionNumber} style={{ width: '100%', overflowX: 'auto' }} xs={12} md={12} lg={12}>\n                        <Table style={{minWidth: 700}}>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell><b>Phase</b></TableCell>\n                                    <TableCell align=\"left\"><b>Submissions</b></TableCell>\n                                    <TableCell align=\"left\"><b>Results</b></TableCell>\n                                    <TableCell align=\"left\"><b>Leaderboard</b></TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                <TableRow>\n                                    <TableCell><b>val</b></TableCell>\n                                    <TableCell align=\"left\">unlimited</TableCell>\n                                    <TableCell align=\"left\">immediate</TableCell>\n                                    <TableCell align=\"left\">none</TableCell>\n                                </TableRow>\n                            </TableBody>\n                            <TableBody>\n                                <TableRow>\n                                    <TableCell><b>test-std</b></TableCell>\n                                    <TableCell align=\"left\">5 total</TableCell>\n                                    <TableCell align=\"left\">immediate</TableCell>\n                                    <TableCell align=\"left\">public (optional)</TableCell>\n                                </TableRow>\n                            </TableBody>\n                        </Table>\n                        <br/>\n                    </Grid>\n                    <Grid item className={props.classes.versionNumber} xs={12} md={12} lg={12}>\n\n                        <Typography className={props.classes.headings} variant=\"subtitle1\" align=\"left\">\n                        Please use the <b>validation</b> split of TextVQA 0.5 for the <b>val</b> phase and the <b>test</b> split\n                        for the <b>test-std</b> phase.\n                        While answers are already provided for the <b>validation</b> set, this phase is useful for sanity checking the result format\n                        without wasting submissions in the other phases. For the <b>test-std</b> phase,\n                        the results must be submitted on the full set.\n                        Submissions to <b>test-std</b> phase are considered entries into the challenge.\n                        By default, the submissions for the <b>test-std</b> phase are private but can be voluntarily\n                            released to the public leaderboard, with a limit of one public leaderboard entry per team.\n                            At the end of the challenge, the entry with best accuracy from each team will\n                            be made public automatically and will be used for the challenge rankings. We will contact\n                        the winning team to voluntarily present at the <Link href=\"https://visualqa.org/workshop.html\">\n                        Visual Question Answering and Dialog Workshop, CVPR 2019</Link>.\n\n                        </Typography>\n                        <br/>\n                        <Typography variant=\"subtitle1\" align=\"left\">\n                        It is not acceptable to create multiple accounts for a single team in order to bypass\n                        the limits on number of submissions.\n                        The exception to this is if a group is working on multiple unrelated methods,\n                        in this case all sets of results can be submitted for evaluation.\n                        Results must be submitted to the evaluation server by\n                        the challenge deadline -- no exceptions will be made.\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Divider />\n                    </Grid>\n                    <Grid item className={props.classes.headings} xs={12}>\n                        <Typography variant=\"h4\" align=\"left\">\n                            Submission Format\n                        </Typography>\n                    </Grid>\n                    <Grid item className={props.classes.versionNumber} xs={12} md={12} lg={12}>\n                        <Typography variant=\"subtitle1\" align=\"left\">\n                        To submit to a phase, teams must upload a JSON file containing their model's answer prediction in the following format:\n                        </Typography>\n                        <br/>\n                        <Typography component=\"span\" align=\"left\" className={props.classes.preParent}>\n                            <Typography component=\"pre\">\n                                <Typography component=\"span\" variant=\"body1\">\n                                    <code>\n                                        {JSON.stringify(submissionFormat, null, 2)}\n                                    </code>\n                                </Typography>\n                            </Typography>\n                        </Typography>\n                        <Typography className={props.classes.headings} variant=\"subtitle1\" align=\"left\">\n                            where <b>question_id</b> is a question's unique id\n                            and <b>answer</b> is the prediction by your model for the question.\n                            You can find an example submission file <Link href={sampleJSONLink}>here</Link>.\n                            When submitting, teams should also include a method name,\n                            method description, project URL,\n                            and publication URL if available.\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Divider />\n                    </Grid>\n                    <Grid id=\"evaluation\" item className={props.classes.headings} xs={12}>\n                        <Typography variant=\"h4\" align=\"left\">\n                            Evaluation\n                        </Typography>\n                    </Grid>\n                    <Grid item className={props.classes.versionNumber} xs={12} md={12} lg={12}>\n                        <Typography variant=\"subtitle1\" align=\"left\">\n                        We use the same metric as VQA v2 which is robust to inter-human variability in phrasing\n                        the answers. More information on this can be found at <Link href={evaluationInfoLink}>\n                        {evaluationInfoLink}</Link>\n                        </Typography>\n                    </Grid>\n                    <Grid id=\"evaluation\" item className={props.classes.headings} xs={12}>\n                        <Typography variant=\"h4\" align=\"left\">\n                            Related Datasets\n                        </Typography>\n                    </Grid>\n                    <Grid item className={props.classes.versionNumber} xs={12} md={12} lg={12}>\n                        <Typography variant=\"subtitle1\" align=\"left\">\n                            <Link href={sceneTextVQALink}>Scene-Text VQA</Link> is a concurrently released dataset that also contains questions\n                            about text in images. We encourage you to evaluate your approach on Scene-Text VQA\n                            as well, and/or consider using it as an additional source of training data.\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Divider />\n                    </Grid>\n                    <Grid item className={props.classes.headings} xs={12}>\n                        <Typography variant=\"h4\" align=\"left\">\n                            Organizers\n                        </Typography>\n                    </Grid>\n\n                    <Grid item className={props.classes.versionNumber} xs={12} md={12} lg={12}>\n                        <People lgSize={3} people={challengePeople.people}/>\n                    </Grid>\n                    <Grid\n                        container\n                        justify=\"flex-start\"\n                        alignContent=\"center\"\n                        spacing={16}\n                        className={props.classes.sectionHeader}\n                    >\n                        <Grid item xs={6} md={6} lg={4}>\n                            <img\n                                className={props.classes.bannerLogo}\n                                style={{\n                                    marginTop: '5%'\n                                }}\n                                srcSet=\"assets/images/fair_logo.png\"\n                                alt=\"Facebook Artificial Intelligence Research\"\n                            />\n                        </Grid>\n                        <Grid item xs={3} md={3} lg={2}>\n                            <img\n                                className={props.classes.bannerLogo}\n                                srcSet=\"assets/images/gt_logo.png\"\n                                alt=\"Georgia Tech\"\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Divider />\n                    </Grid>\n\n                </Grid>\n                <br />\n                <Divider />\n                <br />\n            </Grid>\n        </Grid>\n\n      )\n}\n\nexport default withStyles(styles)(Challenge);","// Copyright (c) Facebook, Inc. and its affiliates.\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport Divider from '@material-ui/core/Divider';\nimport CloudDownload from '@material-ui/icons/CloudDownload';\nimport { withStyles } from '@material-ui/core';\nimport * as dataDescription from '../data_description.json';\n\nconst styles = (theme) => ({\n    title: {\n        marginTop: '3em'\n    },\n    ulItems: {\n        paddingLeft: '1.2em'\n    },\n    liLink: {\n        borderBottom: '1px dotted #eee',\n        borderBottomColor: theme.palette.primary.light,\n        paddingBottom: '0.1em',\n        '&:hover': {\n            textDecoration: 'none',\n            borderBottomColor: theme.palette.primary.main,\n        }\n    },\n    preParent: {\n        backgroundColor: '#eee',\n        border: '1px solid #ddd',\n        borderRadius: '2px',\n        '& pre': {\n            whiteSpace: 'pre-wrap',\n        },\n        '& span': {\n            padding: '1em',\n        },\n        '& code': {\n            fontSize: '12px',\n            color: '#000'\n        }\n    },\n    downloadURLIcon: {\n        verticalAlign: 'middle',\n        marginTop: '-0.1em'\n    }\n});\n\nconst Download = (props) => {\n    const trainDownloadURL = \"https://dl.fbaipublicfiles.com/textvqa/data/TextVQA_0.5_train.json\";\n    const valDownloadURL = \"https://dl.fbaipublicfiles.com/textvqa/data/TextVQA_0.5_val.json\";\n    const testDownloadURL = \"https://dl.fbaipublicfiles.com/textvqa/data/TextVQA_0.5_test.json\";\n    const trainAndValImagesUrl = \"https://dl.fbaipublicfiles.com/textvqa/images/train_val_images.zip\"\n    const testImagesUrl = \"https://dl.fbaipublicfiles.com/textvqa/images/test_images.zip\"\n    const openImagesUrl = \"https://storage.googleapis.com/openimages/web/download.html\";\n    const evalAIURL = \"https://evalai.cloudcv.org/web/challenges/challenge-page/244/\";\n    const licenseURL = \"https://creativecommons.org/licenses/by/4.0/\";\n    return (\n        <Grid\n            container\n            justify=\"center\"\n            alignItems=\"center\"\n        >\n            <Grid\n                item\n                xs={10}\n                md={8}\n                lg={7}\n            >\n                <Grid\n                    container\n                    justify=\"flex-start\"\n                    alignItems=\"center\"\n                    spacing={16}\n                >\n                    <Grid item className={props.classes.title} xs={12}>\n                        <Typography variant=\"h3\" align=\"left\">\n                            TextVQA dataset\n                    </Typography>\n                    </Grid>\n                    <br />\n                    <Grid item className={props.classes.versionNumber} xs={12}>\n                        <Typography variant=\"h4\" align=\"left\">\n                            v0.5\n                    </Typography>\n                    </Grid>\n\n                    <Grid className={props.classes.setItems} item xs={12} sm={6} md={4}>\n                        <Typography variant=\"h5\" align=\"left\">\n                            Training set <Link\n                                href={trainDownloadURL}>\n                                    <CloudDownload className={props.classes.downloadURLIcon} />\n                                </Link>\n                        </Typography>\n                        <ul className={props.classes.ulItems}>\n                            <li>\n                                <Typography variant=\"subtitle1\" align=\"left\">\n                                    <Link className={props.classes.liLink} href={trainDownloadURL}>\n                                    34,602 questions\n                                    </Link> (103MB)\n                                </Typography>\n                            </li>\n                            <li>\n                                <Typography variant=\"subtitle1\" align=\"left\">\n                                    <Link className={props.classes.liLink} href={trainAndValImagesUrl}>\n                                    21,953 images\n                                    </Link> (6.6GB)\n                                </Typography>\n                            </li>\n                        </ul>\n                    </Grid>\n                    <Grid className={props.classes.setItems} item xs={12} sm={6} md={4}>\n                        <Typography variant=\"h5\" align=\"left\">\n                            Validation set <Link\n                                href={valDownloadURL}>\n                                    <CloudDownload className={props.classes.downloadURLIcon} />\n                                </Link>\n                        </Typography>\n                        <ul className={props.classes.ulItems}>\n                            <li>\n                                <Typography variant=\"subtitle1\" align=\"left\">\n                                    <Link className={props.classes.liLink} href={valDownloadURL}>\n                                    5,000 questions\n                                    </Link> (16MB)\n                                </Typography>\n                            </li>\n                            <li>\n                                <Typography variant=\"subtitle1\" align=\"left\">\n                                    3,166 images\n                                </Typography>\n                            </li>\n                        </ul>\n                    </Grid>\n                    <Grid className={props.classes.setItems} item xs={12} sm={6} md={4}>\n                        <Typography variant=\"h5\" align=\"left\">\n                            Test set <Link\n                                href={testDownloadURL}>\n                                    <CloudDownload className={props.classes.downloadURLIcon} />\n                                </Link>\n                        </Typography>\n                        <ul className={props.classes.ulItems}>\n                            <li>\n                                <Typography variant=\"subtitle1\" align=\"left\">\n                                    <Link className={props.classes.liLink} href={testDownloadURL}>\n                                    5,734 questions\n                                    </Link> (13MB)\n                                </Typography>\n                            </li>\n                            <li>\n                                <Typography variant=\"subtitle1\" align=\"left\">\n                                    <Link className={props.classes.liLink} href={testImagesUrl}>\n                                    3,289 images\n                                    </Link> (926MB)\n                                </Typography>\n                            </li>\n                        </ul>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <br />\n                        <Divider />\n                        <br />\n                    </Grid>\n                    <Grid item xs={12} md={12}>\n                        <Typography variant=\"h6\" align=\"left\">Challenge</Typography>\n                        <br/>\n                        <Typography variant=\"subtitle1\" align=\"left\">\n                            TextVQA Challenge 2019 is live! See more details\n                            on <Link href=\"challenge\">challenge page</Link> to participate.\n                        </Typography>\n                    </Grid>\n\n                    <Grid item xs={12} md={12}>\n                        <Typography variant=\"h6\" align=\"left\">Readme</Typography>\n                        <ul className={props.classes.ulItems}>\n                            <li>\n                                <Typography variant=\"subtitle1\" align=\"left\">\n                                    Images for training and validation set are from OpenImages train set\n                                    while images for test set are from OpenImages test set.\n                                </Typography>\n                            </li>\n                            <li>\n                                <Typography variant=\"subtitle1\" align=\"left\">\n                                    Validation set's images are contained in the zip for training set's images.\n                                    The OpenImages dataset can be downloaded from <Link href={openImagesUrl}>here</Link>.\n                                </Typography>\n                            </li>\n                            <li>\n                                <Typography variant=\"subtitle1\" align=\"left\">\n                                    <b>Note:</b> Some of the images in OpenImages are rotated, please make sure\n                                    to check the <b>Rotation</b> field\n                                    in the Image IDs files for <Link href=\"https://storage.googleapis.com/openimages/2018_04/train/train-images-boxable-with-rotation.csv\">train\n                                    </Link> and <Link href=\"https://storage.googleapis.com/openimages/2018_04/test/test-images-with-rotation.csv\">test</Link>.\n                                </Typography>\n                            </li>\n                            <li>\n                                <Typography variant=\"subtitle1\" align=\"left\">\n                                    Data is available under <Link href={licenseURL}>CC BY 4.0</Link> license.\n                                </Typography>\n                            </li>\n                            <li>\n                                <Typography variant=\"subtitle1\" align=\"left\">\n                                TextVQA evaluation server for testing and validation set is hosted\n                                on <Link href={evalAIURL}>EvalAI</Link>.\n                                </Typography>\n                            </li>\n                            <li>\n                                <Typography variant=\"subtitle1\" align=\"left\">\n                                Numbers in the papers should be reported on v0.5 testing set (test-std).\n                                </Typography>\n                            </li>\n                            <li>\n                                <Typography variant=\"subtitle1\" align=\"left\">\n                                    We also provide OCR tokens\n                                    extracted from <Link href=\"https://code.fb.com/ai-research/rosetta-understanding-text-in-images-and-videos-with-machine-learning/\">Rosetta</Link> system\n                                    with the dataset.\n                                </Typography>\n                            </li>\n                            <li>\n                                <Typography variant=\"subtitle1\" align=\"left\">\n                                    <b>OCR tokens</b> provided in the dataset are the\n                                    ones used in the TextVQA <Link href=\"paper\">paper</Link>,\n                                    and are nowhere near perfect.\n                                    Researchers are welcome to use their own OCR systems.\n                                </Typography>\n                            </li>\n                            <li>\n                                <Typography variant=\"subtitle1\" align=\"left\">\n                                Reach us out at <Link href=\"mailto:textvqa@fb.com\">textvqa@fb.com</Link> for any questions, suggestions and feedback.\n                                </Typography>\n                            </li>\n                        </ul>\n                    </Grid>\n                    <Grid item xs={12} md={12}>\n                        <Typography variant=\"h6\" align=\"left\">Description</Typography>\n                        <br/>\n                        <Typography component=\"span\" align=\"left\" className={props.classes.preParent}>\n                            <Typography component=\"pre\">\n                                <Typography component=\"span\" variant=\"body1\">\n                                    <code>\n                                        {JSON.stringify(dataDescription['default'], null, 2)}\n                                    </code>\n                                </Typography>\n                            </Typography>\n                        </Typography>\n\n                    </Grid>\n                    <Grid item xs={12} md={12}>\n                        <Typography variant=\"h6\" align=\"left\">License</Typography>\n                        <br/>\n                        <Typography variant=\"subtitle1\" align=\"left\">\n                            <Link href={licenseURL}>CC BY 4.0</Link>\n                        </Typography>\n                    </Grid>\n                </Grid>\n                <br/>\n                <Divider/>\n                <br/>\n            </Grid>\n        </Grid>\n\n    )\n}\n\nexport default withStyles(styles)(Download);","// Copyright (c) Facebook, Inc. and its affiliates.\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport { withStyles } from '@material-ui/core';\n\nconst styles = (theme) => ({\n    embed: {\n        marginTop: '4em',\n        width: '100%',\n        height: '90vh'\n    },\n    buttonLink: {\n        color: theme['palette']['primary']['primaryText'],\n        textDecoration: 'none'\n    },\n    buttonsSide: {\n        textAlign: 'right'\n    },\n\n    leftIcon: {\n        marginRight: theme.spacing.unit\n    }\n});\n\nconst Paper = (props) => {\n    return (\n        <Grid container justify=\"center\" alignItems=\"center\">\n            <Grid\n                item\n                xs={12}\n                md={10}\n                lg={8}\n                style={{\n                    marginTop: '4em'\n                }}\n            >\n            Code is available at <Link\n                    underline=\"none\"\n                    className={[props.classes.buttonLink, props.classes.buttonsSide].join(' ')}\n                    href=\"https://github.com/facebookresearch/pythia\"\n                >\n                https://github.com/facebookresearch/pythia\n                </Link>.\n                <br/>\n                <br/>\n                Pythia is a modular framework for multimodal (vision + language) research and can be used\n                as a starter point for working on TextVQA.\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default withStyles(styles)(Paper);","// Copyright (c) Facebook, Inc. and its affiliates.\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport CloudDownload from '@material-ui/icons/CloudDownload';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core';\n\nconst styles = (theme) => ({\n    embed: {\n        marginTop: '4em',\n        width: '100%',\n        height: '90vh'\n    },\n    buttonLink: {\n        color: theme['palette']['primary']['contrastText'],\n        textDecoration: 'none'\n    },\n    buttonsSide: {\n        textAlign: 'right'\n    },\n\n    leftIcon: {\n        marginRight: theme.spacing.unit\n    }\n});\n\nconst Paper = (props) => {\n    return (\n        <Grid container justify=\"center\" alignItems=\"center\">\n            <Grid\n                item\n                xs={12}\n                md={10}\n                lg={8}\n                style={{\n                    marginTop: '4em'\n                }}\n            >\n                <Link\n                    underline=\"none\"\n                    className={[props.classes.buttonLink, props.classes.buttonsSide].join(' ')}\n                    href=\"https://arxiv.org/abs/1904.08920\"\n                >\n                    <Button variant=\"contained\" color=\"primary\">\n                        <CloudDownload className={props.classes.leftIcon} />\n                        Download Paper\n                    </Button>\n                </Link>\n                <embed\n                    className={props.classes.embed}\n                    src=\"https://arxiv.org/pdf/1904.08920\"\n                    type=\"application/pdf\"\n                />\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default withStyles(styles)(Paper);","// Copyright (c) Facebook, Inc. and its affiliates.\nimport React, { Component } from 'react';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Header from './components/Header';\nimport Explore from './components/Explore';\nimport Home from './components/Home';\n\nimport './App.css';\nimport theme  from './styles';\nimport Challenge from './components/Challenge';\nimport Download from './components/Download';\nimport Code from './components/Code';\nimport Paper from './components/Paper';\n\nclass App extends Component {\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Router basename={process.env.PUBLIC_URL + '/'}>\n          <div className=\"App\">\n            <header className=\"App-header\">\n              <Header/>\n            </header>\n              <div>\n                <Route path=\"/:type?/\" exact component={Home} />\n                <Route path=\"/:type?/explore\" component={Explore} />\n                <Route path=\"/:type?/challenge\" component={Challenge} />\n                <Route path=\"/:type?/download\" component={Download} />\n                <Route path=\"/:type?/code\" component={Code} />\n                <Route path=\"/:type?/dataset\" component={Download} />\n                <Route path=\"/:type?/paper\" component={Paper} />\n              </div>\n          </div>\n        </Router>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// Copyright (c) Facebook, Inc. and its affiliates.\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// Copyright (c) Facebook, Inc. and its affiliates.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as Sentry from '@sentry/browser';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport * as config from './frontend_config.json';\n\nSentry.init({\n dsn: config.sentry_url\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}