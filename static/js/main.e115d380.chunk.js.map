{"version":3,"sources":["styles.js","components/Header.js","components/BoundingBox.js","components/Banner.js","components/Explore.js","components/People.js","components/Home.js","components/Challenge.js","components/Download.js","components/Paper.js","App.js","serviceWorker.js","index.js"],"names":["theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","typography","useNextVariants","styles","root","width","flexGrow","grow","buttonLink","color","textDecoration","withStyles","props","classes","react_default","a","createElement","className","AppBar_default","position","Toolbar_default","Typography_default","variant","align","Link_default","underline","href","Button_default","BoundingBox","colors","word","wordInt","charCodeAt","this","length","canvas","style","offsetWidth","_this2","refs","fitToContainer","ctx","getContext","img","Image","src","imageUrl","onload","newData","drawImageScaled","globalAlpha","showBoxes","centerShiftX","centerShiftY","newWidth","newHeight","idx","font","boxes","box","coords","fillStyle","getColor","strokeStyle","rotate","rotation","Math","pi","strokeRect","apply","Object","toConsumableArray","fillText","hRatio","newCHeight","height","vRatio","ratio","min","clearRect","drawImage","fillRect","ref","Component","Banner","seed","round","random","state","render","vars","nChunks","originalChunks","originalLen","getWidthForColumn","mapping","xs","sm","md","lg","currentWidth","keys","forEach","key","isWidthUp","_this","chunkArray","arr","isNewSearch","i","push","gap","ceil","index","chunks","concat","slice","renderCardComponents","results","cards","streamResults","map","result","renderCardComponent","colWidth","numChunks","floor","containerChunks","chunk","float","getMaxAnswer","answers","counter","maxWord","maxCount","currentAnswer","cardIdx","ocr_info","ocrInfo","bounding_box","top_left_x","top_left_y","maxAnswer","gridItem","Card_default","card","components_BoundingBox","showOCRBoxes","flickr_300k_url","CardContent_default","cardContent","showQuestions","question","showAnswers","Grid_default","container","direction","justify","alignItems","index_es","componentId","dataField","title","from","size","pagination","showResultStats","loader","react","reactValues","renderAllData","withWidth","padding","spacing","unit","display","paddingBottom","textAlign","Explore","anchorEl","and","updateQuery","query","body","split","queryParams","JSON","parse","function_score","random_score","stringify","join","replace","toLowerCase","handleCheckboxChange","name","event","setState","defineProperty","target","checked","handleMenuButtonClick","currentTarget","handleMenuClose","app","config","url","transformRequest","item","autosuggest","categoryField","placeholder","debounce","showCount","showSearch","optionsMenuButton","aria-owns","undefined","aria-haspopup","onClick","Menu_default","open","Boolean","onClose","MenuItem_default","FormControlLabel_default","control","Checkbox_default","onChange","value","label","components_Banner","avatar","margin","peopleJSX","people","person","rel","website","Avatar_default","img_url","core_index_es","organization","Home","mainContainer","backgroundColor","zIndex","overflow","top","left","Paper_default","paper","elevation","marginTop","sectionHeader","gutterBottom","components_People","React","objectSpread","mixins","gutters","paddingTop","backgroundImage","opacity","divider","Challenge","ulItems","paddingLeft","preParent","border","borderRadius","& pre","whiteSpace","& span","& code","fontSize","valDownloadURL","versionNumber","setItems","Divider_default","component","dataDescription","Paper","App","core_styles","BrowserRouter","basename","components_Header","Route","path","exact","Download","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e115d380.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    palette: {\n      primary: {\n        light: '#9ccc65',\n        main: '#7cb342',\n        dark: '#33691e',\n        contrastText: '#fff',\n      },\n      secondary: {\n        light: '#ff7961',\n        main: '#f44336',\n        dark: '#ba000d',\n        contrastText: '#000',\n      },\n    },\n    typography: {\n      useNextVariants: true,\n    },\n  });\nexport default theme;","import React from 'react';\nimport PropTypes from 'prop-types'\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\nimport theme from '../styles'\n\nconst styles = {\n    root: {\n      width: '100%',\n      flexGrow: 1\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    buttonLink: {\n        color: theme['palette']['primary']['contrastText'],\n        textDecoration: 'none'\n    }\n  };\n\nfunction Header(props) {\n    const { classes } = props;\n\n    return (\n        <div className={classes.root}>\n        <AppBar position=\"static\" color=\"primary\">\n            <Toolbar>\n            <Typography variant=\"h6\" color=\"inherit\" align=\"left\" className={classes.grow}>\n                <Link\n                    underline=\"none\"\n                    className={classes.buttonLink}\n                    href={process.env.PUBLIC_URL + '/'}\n                >\n                    TextVQA\n                </Link>\n            </Typography>\n            <Link underline=\"none\" className={classes.buttonLink} href=\"download\">\n                <Button color=\"inherit\">Download</Button>\n            </Link>\n            <Link underline=\"none\" className={classes.buttonLink} href=\"explore\">\n                <Button color=\"inherit\">Explore</Button>\n            </Link>\n            </Toolbar>\n        </AppBar>\n        </div>\n    );\n}\n\nHeader.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Header);","import React, { Component } from 'react';\n\nclass BoundingBox extends Component {\n    colors = ['#e6194B', '#3cb44b', '#ffe119', '#4363d8',\n              '#42d4f4', '#f032e6',\n              '#469990', '#9A6324', '#800000', '#aaffc3',\n              '#000075', '#000000', '#911eb4'];\n\n    getColor(word) {\n        const char = word.charCodeAt(0);\n        const wordInt = char % this.colors.length;\n        return this.colors[wordInt];\n    }\n\n    fitToContainer(canvas) {\n        // Make it visually fill the positioned parent\n        canvas.style.width ='100%';\n        // ...then set the internal size to match\n        canvas.width  = canvas.offsetWidth;\n    }\n\n    componentDidMount() {\n        const canvas = this.refs.canvas;\n        this.fitToContainer(canvas);\n\n        const ctx = canvas.getContext(\"2d\");\n        const img = new Image();\n        img.src = this.props.imageUrl;\n\n        img.onload = () => {\n            const newData = this.drawImageScaled(img, ctx);\n            ctx.globalAlpha = 1.0;\n\n            if (!this.props.showBoxes) {\n                return;\n            }\n            const { centerShiftX, centerShiftY, newWidth, newHeight } = newData;\n            ctx.font = \"12px Lato\";\n\n            for(const idx in this.props.boxes) {\n                const box = this.props.boxes[idx];\n                box.coords[0] *= newWidth;\n                box.coords[1] *= newHeight;\n                box.coords[2] *= newWidth;\n                box.coords[3] *= newHeight;\n                box.coords[0] += centerShiftX;\n                box.coords[1] += centerShiftY;\n                ctx.fillStyle = this.getColor(box.word);\n                ctx.strokeStyle = ctx.fillStyle;\n\n                ctx.rotate(box.rotation * Math.pi / 180);\n                ctx.strokeRect(...box.coords);\n\n                ctx.fillText(box.word, box.coords[0], box.coords[1]);\n            }\n        }\n    }\n\n    drawImageScaled(img, ctx) {\n        const canvas = ctx.canvas;\n        const hRatio = canvas.width  / img.width;\n\n        const newCHeight = hRatio * img.height;\n        canvas.style.height = newCHeight;\n        canvas.height = newCHeight;\n\n        const vRatio =  canvas.height / img.height;\n        const ratio  = Math.min(hRatio, vRatio);\n        const centerShiftX = (canvas.width - img.width*ratio) / 2;\n        const centerShiftY = (canvas.height - img.height*ratio) / 2;\n\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.drawImage(img, 0, 0, img.width, img.height,\n                      centerShiftX, centerShiftY, img.width*ratio,\n                      img.height*ratio);\n\n        if (this.props.showBoxes) {\n            ctx.fillStyle = 'rgba(0, 0, 0, 0.2)';\n            ctx.fillRect(centerShiftX, centerShiftY, img.width*ratio,\n                        img.height*ratio);\n        }\n\n        const newWidth = img.width * ratio;\n        const newHeight = img.height * ratio;\n\n        return { centerShiftX, centerShiftY, newWidth, newHeight};\n    }\n\n    render() {\n        return(\n            <div>\n              <canvas ref=\"canvas\" />\n            </div>\n        )\n    }\n}\n\nexport default BoundingBox;","import React, { Component } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core';\nimport withWidth, { isWidthUp } from '@material-ui/core/withWidth';\n\nimport { ReactiveList } from '@appbaseio/reactivesearch';\nimport Grid from '@material-ui/core/Grid'\n\nimport BoundingBox from './BoundingBox';\n\nconst styles = theme => ({\n    gridItem: {\n        padding: theme.spacing.unit * 0.5,\n        position: 'relative',\n        width: '100%',\n        display: 'inline-block'\n    },\n    cardContent: {\n        paddingBottom: '4px !important'\n    },\n    card: {\n        padding: theme.spacing.unit * 2,\n        textAlign: 'center'\n    }\n});\n\nclass Banner extends Component {\n    seed = Math.round(Math.random() * 10000);\n    state = {render: 0};\n    vars = {\n        nChunks: null,\n        originalChunks: [],\n        originalLen: 0\n    };\n\n    getWidthForColumn = () => {\n        // NOTE: Keep this is in this order.\n        // Smallest key should come first\n        const mapping = {\n            'xs': '100',\n            'sm': '50',\n            'md': '33',\n            'lg': '20'\n        };\n\n        let currentWidth = '100';\n        Object.keys(mapping).forEach((key) => {\n            if (isWidthUp(key, this.props.width)) {\n                currentWidth = mapping[key];\n            }\n        });\n\n        return currentWidth;\n    }\n\n    chunkArray = (arr, nChunks) => {\n        let isNewSearch = false;\n\n        if (this.vars.originalChunks.length > 0 &&\n            this.vars.originalChunks[0].length > 0 && this.vars.originalChunks[0][0] !== arr[0]) {\n                isNewSearch = true;\n            }\n        if (this.vars.nChunks !== nChunks || isNewSearch) {\n            this.vars.nChunks = nChunks;\n            this.vars.originalChunks = [];\n            this.vars.originalLen = 0;\n            this.seed = Math.round(Math.random() * 10000);\n\n            for(let i = 0; i < nChunks; i++) {\n                this.vars.originalChunks.push([]);\n            }\n        }\n\n        const gap = Math.ceil((arr.length - this.vars.originalLen) / nChunks);\n        let index = 0;\n        const chunks = this.vars.originalChunks;\n\n        for(let i = this.vars.originalLen; i < arr.length; i += gap) {\n            chunks[index] = chunks[index].concat(arr.slice(i, i + gap));\n            index++;\n        }\n\n        this.vars.originalChunks = chunks;\n        this.vars.originalLen = arr.length;\n        this.vars.nChunks = nChunks;\n\n        return chunks;\n    }\n\n    renderCardComponents = (results) => {\n        if (results.length === 0) {\n            return \"\";\n        }\n\n        const cards = [...results.results, ...results.streamResults].map((result, idx) => {\n            return this.renderCardComponent(result, idx);\n        });\n\n        const colWidth = this.getWidthForColumn();\n        const numChunks = Math.floor(100 / colWidth);\n        const cardChunks = this.chunkArray(cards, numChunks);\n\n        const containerChunks = cardChunks.map((chunk, idx) => {\n            return (\n                <div\n                    key={idx + this.seed}\n                    style={{\n                        width: colWidth + '%',\n                        float: 'left'\n                    }}\n                >\n                    {chunk}\n                </div>\n            )\n\n        });\n\n        return (\n            <div>\n                {containerChunks}\n            </div>\n        );\n    }\n\n    getMaxAnswer = (answers) => {\n        const counter = {}\n        if (!answers) {\n            return '';\n        }\n        let maxWord = answers[0];\n        let maxCount = 1;\n\n        for(const idx in answers) {\n            const currentAnswer = answers[idx];\n            if (counter[currentAnswer]) {\n                counter[currentAnswer] += 1;\n            } else {\n                counter[currentAnswer] = 1;\n            }\n\n            if (counter[currentAnswer] > maxCount) {\n                maxCount = counter[currentAnswer];\n                maxWord = currentAnswer;\n            }\n        }\n\n        return maxWord;\n    }\n\n    renderCardComponent = (result, cardIdx) => {\n        const boxes = []\n\n        for(const idx in result.ocr_info) {\n            const ocrInfo = result.ocr_info[idx];\n            const x1 = ocrInfo.bounding_box.top_left_x;\n            const y1 = ocrInfo.bounding_box.top_left_y;\n            const width = ocrInfo.bounding_box.width;\n            const height = ocrInfo.bounding_box.height;\n            const box =  {\n                coords: [x1, y1, width, height],\n                rotation: ocrInfo.bounding_box.rotation,\n                word: ocrInfo.word\n            };\n            boxes.push(box)\n        }\n\n        const maxAnswer = this.getMaxAnswer(result.answers);\n        return (\n            <div\n                key={cardIdx + this.seed}\n                className={this.props.classes.gridItem}\n            >\n                <Card key={cardIdx} className={this.props.classes.card}>\n                    <BoundingBox\n                        showBoxes={this.props.showOCRBoxes}\n                        imageUrl={result.flickr_300k_url}\n                        boxes={boxes}\n                    />\n                    <CardContent className={this.props.classes.cardContent}>\n                        {\n                            this.props.showQuestions ?\n                            <Typography variant=\"subtitle1\">\n                                {result.question}\n                            </Typography> : ''\n                        }\n                        {\n                            this.props.showAnswers && maxAnswer.length > 0 ?\n                            <Typography variant=\"caption\">\n                                {maxAnswer}\n                            </Typography> : ''\n                        }\n                    </CardContent>\n                </Card>\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                <ReactiveList\n                    componentId=\"result\"\n                    dataField=\"question\"\n                    title=\"Results\"\n                    from={0}\n                    size={this.props.size || 25}\n                    pagination={this.props.pagination || false}\n                    showResultStats={this.props.showResultStats}\n                    loader={this.props.loader}\n                    react={this.props.reactValues}\n                    renderAllData={this.renderCardComponents}\n                    style={this.props.style || {}}\n                />\n            </Grid>\n        );\n    }\n}\n\nexport default withWidth()(withStyles(styles)(Banner));\n","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Button from '@material-ui/core/Button';\n\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {\n    ReactiveBase, CategorySearch, MultiDropdownList\n} from '@appbaseio/reactivesearch';\nimport Grid from '@material-ui/core/Grid'\n\nimport * as config from '../frontend_config.json';\nimport Banner from './Banner';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1\n    },\n    optionsMenuButton: {\n        width: '100%'\n    }\n});\n\nclass Explore extends Component {\n    seed = Math.round(Math.random() * 10000);\n    state = {\n        showOCRBoxes: true,\n        showQuestions: true,\n        showAnswers: true,\n        anchorEl: null\n    };\n\n    reactValues = {\n        and: [\n            \"searchbox\", \"set_name\", \"image_classes\",\n            \"ocr_tokens\", \"answers\"\n        ]\n    }\n\n    updateQuery = (query) => {\n        let body = query.body;\n        body = body.split('\\n')\n        let queryParams = JSON.parse(body[1]);\n        queryParams[\"query\"] = {\n            \"function_score\": {\n                \"query\": queryParams[\"query\"],\n                \"random_score\": {\n                    \"seed\": this.seed\n                }\n            }\n        };\n\n        body[1] = JSON.stringify(queryParams)\n        body = body.join('\\n');\n        body = body.replace('\"field\":\"set_name\"', '\"field\":\"set_name.keyword\"');\n        body = body.replace('\"field\":\"image_classes\"', '\"field\":\"image_classes.keyword\"');\n        body = body.replace('\"field\":\"question\"', '\"field\":\"question.keyword\"');\n        body = body.replace('\"field\":\"ocr_tokens\"', '\"field\":\"ocr_tokens.keyword\"');\n        body = body.replace('\"field\":\"answers\"', '\"field\":\"answers.keyword\"');\n        query.body = body.toLowerCase();\n        return query;\n    }\n\n    handleCheckboxChange = name => event => {\n        this.setState({ [name]: event.target.checked });\n    };\n\n    handleMenuButtonClick = (event) => {\n        this.setState({ anchorEl: event.currentTarget });\n    }\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    }\n\n    render() {\n      return (\n          <ReactiveBase\n            app={config.index_name}\n            url={config.server_url}\n            transformRequest={this.updateQuery}\n          >\n            <Grid\n                container\n                direction=\"row\"\n                className={this.props.classes.root}\n                justify=\"center\"\n                alignItems=\"center\"\n            >\n                <Grid item xs={12} md={6} lg={4}>\n                    <CategorySearch\n                        componentId=\"searchbox\"\n                        dataField=\"question\"\n                        autosuggest={false}\n                        categoryField=\"question\"\n                        placeholder=\"Search for questions\"\n                        debounce={1000}\n                        style={{\n                            padding: \"5px\"\n                        }}\n                        react={{ and: ['set_name', 'image_classes', 'ocr_tokens', 'answers']}}\n                    />\n                </Grid>\n                <Grid item xs={12} md={2} lg={1}>\n                    <MultiDropdownList\n                        componentId=\"set_name\"\n                        dataField=\"set_name\"\n                        showCount={false}\n                        placeholder=\"Choose set\"\n                        showSearch={false}\n                        react={{ and: ['question', 'image_classes', 'ocr_tokens', 'answers']}}\n                    />\n                </Grid>\n                <Grid item xs={12} md={2} lg={2}>\n                    <MultiDropdownList\n                        componentId=\"image_classes\"\n                        dataField=\"image_classes\"\n                        placeholder=\"Choose classes\"\n                        showSearch={false}\n                        react={{ and: ['set_name', 'question', 'ocr_tokens', 'answers']}}\n                    />\n                </Grid>\n                <Grid item xs={12} md={2} lg={1}>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={this.props.classes.optionsMenuButton}\n                        aria-owns={this.state.anchorEl ? 'simple-menu' : undefined}\n                        aria-haspopup=\"true\"\n                        onClick={this.handleMenuButtonClick}\n                    >\n                        Options\n                    </Button>\n                    <Menu\n                        anchorEl={this.state.anchorEl}\n                        open={Boolean(this.state.anchorEl)}\n                        onClose={this.handleMenuClose}\n                    >\n                        <MenuItem>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={this.state.showOCRBoxes}\n                                        onChange={this.handleCheckboxChange('showOCRBoxes')}\n                                        value=\"showOCRBoxes\"\n                                    />\n                                }\n                                label=\"Show OCR boxes\">\n                            </FormControlLabel>\n                        </MenuItem>\n                        <MenuItem>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={this.state.showQuestions}\n                                        onChange={this.handleCheckboxChange('showQuestions')}\n                                        value=\"showQuestions\"\n                                    />\n                                }\n                                label=\"Show questions\">\n                            </FormControlLabel>\n                        </MenuItem>\n                        <MenuItem>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={this.state.showAnswers}\n                                        onChange={this.handleCheckboxChange('showAnswers')}\n                                        value=\"showAnswers\"\n                                    />\n                                }\n                                label=\"Show answers\">\n                            </FormControlLabel>\n                        </MenuItem>\n                    </Menu>\n                </Grid>\n                <Grid item xs={12} md={6} lg={2}>\n                    <CategorySearch\n                        componentId=\"ocr_tokens\"\n                        dataField=\"ocr_tokens\"\n                        categoryField=\"ocr_tokens\"\n                        debounce={1400}\n                        placeholder=\"Search for OCR tokens\"\n                        style={{\n                            padding: \"5px\"\n                        }}\n                        react={{ and: ['set_name', 'image_classes', 'question', 'answers']}}\n\n                    />\n                </Grid>\n                <Grid item xs={12} md={6} lg={2}>\n                    <CategorySearch\n                        componentId=\"answers\"\n                        dataField=\"answers\"\n                        categoryField=\"answers\"\n                        placeholder=\"Search for Answers\"\n                        debounce={1400}\n                        style={{\n                            padding: \"5px\"\n                        }}\n                        react={{ and: ['set_name', 'image_classes', 'ocr_tokens', 'question']}}\n                    />\n                </Grid>\n                <Banner\n                    showOCRBoxes={this.state.showOCRBoxes}\n                    showAnswers={this.state.showAnswers}\n                    showQuestions={this.state.showQuestions}\n                    reactValues={this.reactValues}\n                    showResultStats={true}\n                    pagination={false}\n                    size={25}\n                    style={{\n                        \"width\": \"90%\",\n                        \"textAlign\": \"center\"\n                    }}\n                />\n            </Grid>\n        </ReactiveBase>\n      );\n    }\n}\n\nexport default withStyles(styles)(Explore);\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\n\nimport { withStyles, Typography } from \"@material-ui/core\";\nimport * as people from '../people_list.json';\nimport Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid';\n\nconst styles = (theme) => ({\n    avatar: {\n        width: 100,\n        height: 100,\n        margin: '0 auto'\n    },\n    gridItem: {\n        padding: theme.spacing.unit * 2\n    }\n});\n\nconst People = (props) => {\n    const peopleJSX = people.people.map((person) => {\n        const key = Math.random();\n        return (\n            <Grid item key={key} xs={12} sm={6} md={3} lg={2}>\n                <Link target=\"_blank\" rel=\"noopener\" href={person.website}>\n                    <Avatar className={props.classes.avatar} src={person.img_url}/>\n                </Link>\n                <Typography variant=\"subtitle1\">\n                    {person.name}\n                </Typography>\n                <Typography variant=\"caption\">\n                    {person.organization}\n                </Typography>\n            </Grid>\n        )\n    });\n\n    return (\n        <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"flex-start\"\n            spacing={16}\n        >\n            {peopleJSX}\n        </Grid>\n    )\n};\n\n\nexport default withStyles(styles)(People)","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport Link from '@material-ui/core/Link';\n\nimport Banner from './Banner';\nimport People from './People';\nimport * as config from '../frontend_config.json';\nimport { ReactiveBase } from '@appbaseio/reactivesearch';\n\n\nconst styles = theme => ({\n  paper: {\n    ...theme.mixins.gutters(),\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n  },\n  mainContainer: {\n      backgroundImage: 'radial-gradient( ' +\n      theme.palette.primary.light + ' 20% ,' + theme.palette.primary.dark + ' 100%)',\n      opacity: 0.9,\n      height: '50vh'\n  },\n  people: {\n      width: '60%',\n      margin: '0 auto',\n      marginTop: '2em'\n  },\n  root: {\n    //   flexGrow: 1,\n    // marginTop: '50px'\n  },\n  divider: {\n      color: '#888',\n      width: '100%'\n  },\n  gridItem: {\n      padding: theme.spacing.unit * 2\n  },\n  sectionHeader: {\n      marginTop: '0.35em'\n  },\n  container: {\n    padding: theme.spacing.unit * 2,\n  }\n});\n\nclass Home extends React.Component {\n    state = {\n        checked: false\n    }\n\n    updateQuery = (query) => {\n        let body = query.body;\n        body = body.split('\\n')\n        let queryParams = JSON.parse(body[1]);\n        queryParams[\"query\"] = {\n            \"function_score\": {\n                \"query\": queryParams[\"query\"],\n                \"random_score\": {\n                    \"seed\": this.seed\n                }\n            }\n        };\n\n        body[1] = JSON.stringify(queryParams)\n        body = body.join('\\n');\n        body = body.replace('\"field\":\"set_name\"', '\"field\":\"set_name.keyword\"');\n        body = body.replace('\"field\":\"image_classes\"', '\"field\":\"image_classes.keyword\"');\n        query.body = body;\n\n        return query;\n    }\n\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.root}>\n                <Grid\n                    container\n                    className={classes.mainContainer}\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    style={{\n                        position: 'relative'\n                    }}\n                >\n                    <div\n                        style={{\n                            height: '50vh',\n                            backgroundColor: 'rgba(0, 0, 0, 0.4)',\n                            width: '100%',\n                            zIndex: -10,\n                            position: \"absolute\"\n                        }}\n                    />\n                    <ReactiveBase\n                        app={config.index_name}\n                        url={config.server_url}\n                        transformRequest={this.updateQuery}\n                        style={{\n                            height: '50vh',\n                            overflow: 'auto',\n                            position: 'relative'\n                        }}\n                    >\n                        <Banner\n                            showOCRBoxes={true}\n                            showAnswers={true}\n                            showResultStats={false}\n                            showQuestions={true}\n                            reactValues={{}}\n                            pagination={true}\n                            loader=\"\"\n                            size={15}\n                            style={{\n                                height: '50vh',\n                                zIndex: -20,\n                                size: 10,\n                                position: 'absolute',\n                                top: 0,\n                                overflow: 'hidden'\n                            }}\n                        />\n                    </ReactiveBase>\n                    <Grid\n                        container\n                        style={{\n                            position: 'absolute',\n                            top: 0,\n                            left: 0,\n                            width: '100%',\n                            height: '100%'\n                        }}\n                        justify=\"center\"\n                        alignItems=\"center\"\n                    >\n                        <Grid\n                            item\n                            xs={10}\n                            sm={9}\n                            md={8}\n                            lg={6}\n                            style={{\n                                position: 'relative'\n                            }}\n                        >\n                            <Paper className={classes.paper} elevation={1}>\n                                <Typography variant=\"h2\">\n                                TextVQA\n                                </Typography>\n\n                                <Typography variant=\"subtitle1\">\n                                A dataset to benchmark visual reasoning based on text in images.\n                                </Typography>\n                                <Grid\n                                    style={{\n                                        marginTop: '10px'\n                                    }}\n                                    container\n                                    direction=\"row\"\n                                    justify=\"center\"\n                                    alignItems=\"center\"\n                                    spacing={16}\n                                >\n                                    <Grid item xs={12} sm={6} md={3}>\n                                        <Link href=\"explore\">\n                                            <Button variant=\"contained\" color=\"primary\">\n                                                Explore\n                                            </Button>\n                                        </Link>\n                                    </Grid>\n                                    <Grid item xs={12} sm={6} md={3}>\n                                        <Link href=\"paper\">\n                                            <Button variant=\"contained\" color=\"primary\">\n                                                Paper\n                                            </Button>\n                                        </Link>\n                                    </Grid>\n                                    <Grid item xs={12} sm={6} md={3}>\n                                        <Link href=\"challenge\">\n                                            <Button variant=\"contained\" color=\"primary\">\n                                                Challenge\n                                            </Button>\n                                        </Link>\n                                    </Grid>\n                                    <Grid item xs={12} sm={6} md={3}>\n                                        <Link href=\"download\">\n                                            <Button variant=\"contained\" color=\"primary\">\n                                                Download\n                                            </Button>\n                                        </Link>\n                                    </Grid>\n                                </Grid>\n                            </Paper>\n                        </Grid>\n\n                    </Grid>\n                </Grid>\n                <Grid container className={this.props.classes.people}>\n                    <Grid item xs={12} lg={6}>\n                        <Grid container justify=\"flex-start\" spacing={16}>\n                            <Grid item xs={12} className={classes.gridItem}>\n                                <Typography\n                                    className={classes.sectionHeader}\n                                    variant=\"h4\"\n                                    gutterBottom\n                                    align=\"left\"\n                                >\n                                    Overview\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={12} className={classes.gridItem}>\n                                <Typography\n                                    className={classes.sectionHeader}\n                                    variant=\"subtitle1\"\n                                    gutterBottom\n                                    align=\"left\"\n                                >\n                                    TextVQA requires models to read and reason about questions based on text in images.\n                                    Specifically, given an image, model will be provided a question which will require reading\n                                    and reasoning on text present in it. Current state-of-the-art visual question answering (VQA)\n                                    fail at doing this task.\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12} lg={6}>\n                        <Grid container justify=\"flex-start\" spacing={16}>\n                            <Grid item xs={12} className={classes.gridItem}>\n                                <Typography\n                                    className={classes.sectionHeader}\n                                    variant=\"h4\"\n                                    gutterBottom\n                                    align=\"left\"\n                                >\n                                Statistics\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid container justify=\"flex-start\" spacing={16}>\n                            <Grid item xs={12} className={classes.gridItem}>\n                                <ul>\n                                    <li>\n                                      <Typography variant=\"subtitle1\" align=\"left\">\n                                          28408 images from OpenImages\n                                      </Typography>\n                                    </li>\n                                    <li>\n                                        <Typography variant=\"subtitle1\" align=\"left\">\n                                          45336 questions\n                                        </Typography>\n                                    </li>\n                                    <li>\n                                        <Typography variant=\"subtitle1\" align=\"left\">\n                                          453360 ground truth answers\n                                        </Typography>\n                                    </li>\n                                </ul>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <div className={this.props.classes.people}>\n                    <Grid\n                        container\n                        justify=\"flex-start\"\n                        spacing={16}\n                        >\n                        <Grid item xs={12} className={classes.gridItem}>\n                            <Typography\n                                className={classes.sectionHeader}\n                                variant=\"h4\"\n                                align=\"left\"\n                                gutterBottom\n                                >\n                                Citation\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12} className={classes.gridItem}>\n                            <Typography\n                                variant=\"subtitle1\"\n                                align=\"left\"\n                                gutterBottom\n                                >\n                                Please cite using <Link href=\"bibtex.txt\">\n                                this BiBTeX\n                                </Link> if you use TextVQA in your work.\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </div>\n                <div className={this.props.classes.people}>\n                    <Grid container justify=\"flex-start\" spacing={16}>\n                        <Grid item xs={12} className={classes.gridItem}>\n                            <Typography\n                                className={classes.sectionHeader}\n                                variant=\"h4\"\n                                align=\"left\"\n                                gutterBottom\n                            >\n                                People\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                    <div className={classes.container}/>\n                    <People/>\n                </div>\n            </div>\n        );\n    }\n}\n\nHome.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Home);","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nconst Challenge = (props) => {\n    return (\n        <Grid container justify=\"center\" alignItems=\"center\">\n            <Grid item xs={12}>\n                <Typography variant=\"subtitle1\">\n                Challenge is coming out soon.\n                </Typography>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default Challenge;","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport Divider from '@material-ui/core/Divider';\nimport { withStyles } from '@material-ui/core';\nimport * as dataDescription from '../data_description.json';\n\nconst styles = (theme) => ({\n    title: {\n        marginTop: '3em'\n    },\n    ulItems: {\n        paddingLeft: '1.2em'\n    },\n    preParent: {\n        backgroundColor: '#eee',\n        border: '1px solid #ddd',\n        borderRadius: '2px',\n        '& pre': {\n            whiteSpace: 'pre-wrap',\n        },\n        '& span': {\n            padding: '1em',\n        },\n        '& code': {\n            fontSize: '12px',\n            color: '#000'\n        }\n    }\n});\n\nconst Download = (props) => {\n    const trainDownloadURL = \"https://dl.fbaipublicfiles.com/textvqa/data/TextVQA_0.5_train.json\";\n    const valDownloadURL = \"https://dl.fbaipublicfiles.com/textvqa/data/TextVQA_0.5_val.json\";\n    const openImagesUrl = \"https://storage.googleapis.com/openimages/web/download.html\";\n    const evalAIURL = \"\";\n\n    return (\n        <Grid\n            container\n            justify=\"center\"\n            alignItems=\"center\"\n        >\n            <Grid\n                item\n                xs={10}\n                md={8}\n                lg={7}\n            >\n                <Grid\n                    container\n                    justify=\"flex-start\"\n                    alignItems=\"center\"\n                    spacing={16}\n                >\n                    <Grid item className={props.classes.title} xs={12}>\n                        <Typography variant=\"h3\" align=\"left\">\n                            TextVQA dataset\n                    </Typography>\n                    </Grid>\n                    <br />\n                    <Grid item className={props.classes.versionNumber} xs={12}>\n                        <Typography variant=\"h4\" align=\"left\">\n                            v0.5\n                    </Typography>\n                    </Grid>\n\n                    <Grid className={props.classes.setItems} item xs={12} sm={6} md={4}>\n                        <Typography variant=\"h5\" align=\"left\">\n                            <Link href={trainDownloadURL}>\n                                Training set\n                        </Link>\n                        </Typography>\n                        <ul className={props.classes.ulItems}>\n                            <li>\n                                <Typography variant=\"subtitle1\" align=\"left\">\n                                    34602 questions\n                            </Typography>\n                            </li>\n                            <li>\n                                <Typography variant=\"subtitle1\" align=\"left\">\n                                    x extracted OCR tokens\n                            </Typography>\n                            </li>\n                        </ul>\n                    </Grid>\n                    <Grid className={props.classes.setItems} item xs={12} sm={6} md={4}>\n                        <Typography variant=\"h5\" align=\"left\">\n                            <Link href={valDownloadURL}>\n                                Validation set\n                        </Link>\n                        </Typography>\n                        <ul className={props.classes.ulItems}>\n                            <li>\n                                <Typography variant=\"subtitle1\" align=\"left\">\n                                    5000 questions\n                            </Typography>\n                            </li>\n                            <li>\n                                <Typography variant=\"subtitle1\" align=\"left\">\n                                    x extracted OCR tokens\n                            </Typography>\n                            </li>\n                        </ul>\n                    </Grid>\n                    <Grid className={props.classes.setItems} item xs={12} sm={6} md={4}>\n                        <Typography variant=\"h5\" align=\"left\">\n                            <Link href={valDownloadURL}>\n                                Testing set\n                        </Link>\n                        </Typography>\n                        <ul className={props.classes.ulItems}>\n                            <li>\n                                <Typography variant=\"subtitle1\" align=\"left\">\n                                    5734 questions\n                                </Typography>\n                            </li>\n                            <li>\n                                <Typography variant=\"subtitle1\" align=\"left\">\n                                    x extracted OCR tokens\n                                </Typography>\n                            </li>\n                        </ul>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <br />\n                        <Divider />\n                        <br />\n                    </Grid>\n                    <Grid item xs={12} md={12}>\n                        <Typography variant=\"h6\" align=\"left\">Readme</Typography>\n                        <ul className={props.classes.ulItems}>\n                            <li>\n                                <Typography variant=\"subtitle1\" align=\"left\">\n                                    Images for training and validation set are from OpenImages\n                                    which can be downloaded from <Link href={openImagesUrl}>here</Link>.\n                                </Typography>\n                            </li>\n                            <li>\n                                <Typography variant=\"subtitle1\" align=\"left\">\n                                TextVQA evaluation server for testing and validation set is hosted\n                                on <Link href={evalAIURL}>EvalAI</Link>.\n                                </Typography>\n                            </li>\n                            <li>\n                                <Typography variant=\"subtitle1\" align=\"left\">\n                                Numbers in the papers should be reported on v0.5 testing set (test-std).\n                                </Typography>\n                            </li>\n                            <li>\n                                <Typography variant=\"subtitle1\" align=\"left\">\n                                OCR tokens provided in the dataset are the ones used in TextVQA's paper.\n                                We cannot guarantee that these tokens will be correct.\n                                </Typography>\n                            </li>\n                        </ul>\n                    </Grid>\n                    <Grid item xs={12} md={12}>\n                        <Typography variant=\"h6\" align=\"left\">Description</Typography>\n                        <br/>\n                        <Typography component=\"span\" align=\"left\" className={props.classes.preParent}>\n                            <Typography component=\"pre\">\n                                <Typography component=\"span\" variant=\"body1\">\n                                    <code>\n                                        {JSON.stringify(dataDescription['default'], null, 2)}\n                                    </code>\n                                </Typography>\n                            </Typography>\n                        </Typography>\n\n                    </Grid>\n                </Grid>\n                <br/>\n                <Divider/>\n                <br/>\n            </Grid>\n        </Grid>\n\n    )\n}\n\nexport default withStyles(styles)(Download);","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nconst Paper = (props) => {\n    return (\n        <Grid container justify=\"center\" alignItems=\"center\">\n            <Grid item xs={12}>\n                <Typography variant=\"subtitle1\">\n                Paper is coming out soon.\n                </Typography>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default Paper;","import React, { Component } from 'react';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Header from './components/Header';\nimport Explore from './components/Explore';\nimport Home from './components/Home';\n\nimport './App.css';\nimport theme from './styles';\nimport Challenge from './components/Challenge';\nimport Download from './components/Download';\nimport Paper from './components/Paper';\n\nclass App extends Component {\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Router basename={process.env.PUBLIC_URL + '/'}>\n          <div className=\"App\">\n            <header className=\"App-header\">\n              <Header/>\n            </header>\n              <div>\n                <Route path=\"/\" exact component={Home} />\n                <Route path=\"/explore\" component={Explore} />\n                <Route path=\"/challenge\" component={Challenge} />\n                <Route path=\"/download\" component={Download} />\n                <Route path=\"/paper\" component={Paper} />\n              </div>\n          </div>\n        </Router>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}